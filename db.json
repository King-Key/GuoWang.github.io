{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/README.md","path":"README.md","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"source/book/index/RLbook2018.pdf","path":"book/index/RLbook2018.pdf","modified":1,"renderable":0}],"Cache":[{"_id":"source/CNAME","hash":"b92c060bc173973706578158b0ecd514f0d23321","modified":1593253187822},{"_id":"source/README.md","hash":"cea9add47aa0641f7f47416f0dce3d213b1b0ab5","modified":1593253187822},{"_id":"source/googledead0cb79b0edb1f.html","hash":"7748ade7097a36fa018c4dcb40a6fd5b94c54e65","modified":1593253187818},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1594941944198},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1594941944198},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1594941944198},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1594941944198},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1594941944198},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1594941944198},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1594941944198},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1594941944198},{"_id":"themes/next/_config.yml","hash":"3c5dbffbd8c595b81ab996611429be503a234de8","modified":1594946522096},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1594941944198},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1594941944198},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1594941944202},{"_id":"source/_posts/Pyinstaller打包程序.md","hash":"8ddc396f26099ad01ada7436b4eccc7216a8cf7d","modified":1593253188174},{"_id":"source/_posts/Python使用Kivy进行Android开发.md","hash":"102acd0c973785006b25b1ef59c43c449113d486","modified":1593253188170},{"_id":"source/_posts/Ubuntu18-04搭建GPU环境.md","hash":"35e3c11bc9a8ca3166feba38b244c0c68ea8d13d","modified":1593253187914},{"_id":"source/_posts/Windows10搭建GPU环境.md","hash":"70fde21d07006ea4d3bbddd2dac2be1ca14f8d80","modified":1593253187918},{"_id":"source/_posts/hexo报错.md","hash":"7aeb6e1ffeaf73dfe70bb6622bf56d96919d3af5","modified":1593253187866},{"_id":"source/_posts/itchat-1.md","hash":"4964a69d5b8cf6b2bd4958a0ca5345507ae41e81","modified":1593253187886},{"_id":"source/_posts/pkl文件读取.md","hash":"a9b154e0dd8ffbce18505d4c44003b1eae773e66","modified":1593253187898},{"_id":"source/_posts/tf-faster-rcnn-一-实现目标检测-cpu-项目环境配置.md","hash":"b83151ebdf29ef24e5d06b9ba4b489b7f9007dae","modified":1593253187898},{"_id":"source/_posts/appstream_0.9.4-1ubuntu1_amd64.deb","hash":"7eaecf82aa9547fcb403cddfe30665253ddac428","modified":1463050999000},{"_id":"source/_posts/tf-faster-rcnn-二-实现目标检测-cpu-模型测试.md","hash":"6cbc2bd21bc93a3e5c0bf49bdd6424d49995c034","modified":1593253187914},{"_id":"source/_posts/ubuntu进入initramfs.md","hash":"ebfa3c0f47673b709c3307459de2f6e7ddfc3fc0","modified":1593534374041},{"_id":"source/_posts/usr-lib-cnf-update-db-notfound.md","hash":"5be45095a482e8d546cdc4e5eca7a9f1f0578c68","modified":1593827825540},{"_id":"source/_posts/好玩的在线应用程序.md","hash":"84effb6aa0604ee951273de2fda532ceab460b6a","modified":1593253188174},{"_id":"source/_posts/数据集整理.md","hash":"cd8c14b35d80e17851f44ab7e518d028927c22f7","modified":1593253187854},{"_id":"source/_posts/tf-faster-rcnn-三-实现目标检测-cpu-训练自己的数据.md","hash":"083f1eb64dc81ee3dee19ec4d1804fcb2d9a04a8","modified":1593253187914},{"_id":"source/about/index.md","hash":"94213b85fac197b3e32b638e7139bd97dcc242ec","modified":1593253187838},{"_id":"source/_posts/用Python画丘比特之心.md","hash":"3fcfac397dbf696a0f1af6a117ac571d3638680e","modified":1593253187926},{"_id":"source/categories/index.md","hash":"5230e2eb274bcfe15ac92faab05fdc66eb356773","modified":1593253187838},{"_id":"source/book/index.md","hash":"b9f52a4a94be2e90f0290701efe28a22bcf8cbd6","modified":1593253188174},{"_id":"source/tags/index.md","hash":"73552cc821ce3ef16d0abc95f3756c9de99c9922","modified":1593253187838},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1594941944186},{"_id":"themes/next/.git/config","hash":"3aa58ad32c5b537b7b64d00c59cc2787e74a3fd2","modified":1594941944190},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1594941909010},{"_id":"themes/next/.git/packed-refs","hash":"47e926b6e38c0acd65869260264e7b82f9d54005","modified":1594941944186},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1594941944198},{"_id":"themes/next/.git/index","hash":"f52b582f5c0dacc02df1a4063a34eda2952b223f","modified":1594941944206},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1594941944198},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1594941944198},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1594941944198},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1594941944198},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1594941944198},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1594941944198},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1594941944198},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1594941944198},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1594941944198},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1594941944198},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1594941944198},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1594941944198},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1594941944198},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1594941944198},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1594941944198},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1594941944198},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1594941944198},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1594941944198},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1594941944198},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1594941944198},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1594941944198},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1594941944198},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1594941944198},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1594941944198},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1594941944198},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1594941944198},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1594941944198},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1594941944198},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1594941944198},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1594941944198},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1594941944198},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1594941944198},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1594941944198},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1594941944198},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1594941944198},{"_id":"themes/next/languages/tr.yml","hash":"fe793f4c2608e3f85f0b872fd0ac1fb93e6155e2","modified":1594941944198},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1594941944198},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1594941944198},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1594941944198},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1594941944198},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1594941944198},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1594941944198},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1594941944202},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1594941944202},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1594941944202},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1594941944202},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1594941944202},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1594941944202},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1594941944202},{"_id":"source/_posts/libappstream3_0.9.4-1ubuntu1_amd64.deb","hash":"a1f67eca795cdcbc9bdce6fa79d786db66f3bd0f","modified":1463050999000},{"_id":"source/_posts/.git/config","hash":"375069712d2cdcd5e70953daef87811d1c3efc19","modified":1593253187942},{"_id":"source/_posts/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1593253187942},{"_id":"source/_posts/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1593253187942},{"_id":"source/_posts/Python使用Kivy进行Android开发/1570077673578.png","hash":"5b7a21f206aa702371e1915a0437156ce75057c7","modified":1593253188174},{"_id":"source/_posts/pkl文件读取/1566227525704.png","hash":"e285a71f4860cf93e64ca61e84680ac8f0185b5d","modified":1593253188098},{"_id":"source/_posts/用Python画丘比特之心/1566433454275.png","hash":"56bcf846e1838eef6ce870359bb1d930b7d1ed75","modified":1593253188106},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1594941909014},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1594941909014},{"_id":"themes/next/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1594941909014},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1594941909014},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1594941909014},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1594941909014},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1594941909014},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1594941909014},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1594941909014},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1594941909014},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1594941909014},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1594941909010},{"_id":"themes/next/.git/logs/HEAD","hash":"4b6b6abf7145894b5428ad2e20fe1c98b6d53d93","modified":1594941944186},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1594941944198},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1594941944198},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1594941944198},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1594941944198},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1594941944198},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1594941944198},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1594941944198},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1594941944198},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1594941944198},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1594941944198},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1594941944198},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1594941944198},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1594941944198},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1594941944198},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1594941944198},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1594941944198},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1594941944198},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1594941944198},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1594941944198},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1594941944202},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1594941944202},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1594941944202},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1594941944202},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1594941944202},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1594941944198},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1594941944198},{"_id":"themes/next/layout/_partials/footer.swig","hash":"e5a2bdf45fde7cea9cb03993f5a0fd960326ed5d","modified":1594941944198},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1594941944202},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1594941944202},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1594941944202},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1594941944202},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1594941944202},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1594941944202},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1594941944202},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1594941944202},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1594941944202},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1594941944202},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1594941944202},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1594941944202},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1594941944202},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1594941944202},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1594941944202},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1594941944202},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1594941944202},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1594941944202},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1594941944202},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1594941944202},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1594941944202},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1594941944202},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1594941944202},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1594941944202},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1594941944202},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1594941944202},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1594941944202},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1594941944202},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1594941944202},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1594941944206},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1594941944206},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1594941944206},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1594941944206},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1594941944206},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1594941944206},{"_id":"themes/next/source/js/utils.js","hash":"2c6e6b4d9a592fbb4bf04689524db2cdfcd94ca7","modified":1594941944206},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1594941944206},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1594941944206},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1594941944206},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1594941944206},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1594941944206},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1594941944206},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1594941944206},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1594941944206},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1594941944206},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1594941944206},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1594941944206},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1594941944206},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1594941944206},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1594941944206},{"_id":"source/_posts/npm-debug.log","hash":"5b41b2b07004449ea8d6c880f15505b6c1b65191","modified":1593253187866},{"_id":"source/_posts/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1593253188030},{"_id":"source/_posts/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1593253187954},{"_id":"source/_posts/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1593253187970},{"_id":"source/_posts/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1593253187970},{"_id":"source/_posts/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1593253187970},{"_id":"source/_posts/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1593253187970},{"_id":"source/_posts/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1593253187970},{"_id":"source/_posts/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1593253187970},{"_id":"source/_posts/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1593253187990},{"_id":"source/_posts/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1593253187990},{"_id":"source/_posts/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1593253187998},{"_id":"source/_posts/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1593253188010},{"_id":"themes/next/.git/refs/heads/master","hash":"7b5894d5fc28d7797285dac4f43134462f6c7c5d","modified":1594941944186},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1594941944202},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1594941944202},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1594941944202},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1594941944202},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1594941944202},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1594941944202},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1594941944202},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1594941944198},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1594941944198},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1594941944198},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1594941944198},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1594941944198},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1594941944198},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1594941944202},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1594941944202},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1594941944202},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1594941944202},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1594941944202},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1594941944202},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1594941944202},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1594941944202},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1594941944202},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1594941944202},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1594941944202},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1594941944202},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1594941944202},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1594941944202},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1594941944202},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1594941944202},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1594941944202},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1594941944202},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1594941944202},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1594941944202},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1594941944202},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1594941944202},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1594941944202},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1594941944202},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1594941944202},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1594941944202},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1594941944202},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1594941944202},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1594941944202},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1594941944202},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1594941944202},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1594941944202},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1594941944202},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1594941944202},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1594941944202},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1594941944202},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1594941944202},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1594941944202},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1594941944202},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1594941944202},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1594941944202},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1594941944202},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1594941944202},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1594941944202},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1594941944202},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1594941944202},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1594941944206},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1594941944206},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1594941944206},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1594941944206},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1594941944206},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1594941944206},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1594941944206},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1594941944206},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1594941944206},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"4b6b6abf7145894b5428ad2e20fe1c98b6d53d93","modified":1594941944186},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1594941944186},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1594941944202},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1594941944202},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1594941944202},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1594941944202},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1594941944206},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1594941944206},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1594941944206},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1594941944206},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1594941944206},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1594941944206},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1594941944206},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1594941944206},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1594941944206},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1594941944206},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1594941944206},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1594941944206},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1594941944206},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1594941944206},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1594941944206},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1594941944206},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1594941944206},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1594941944206},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1594941944206},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"4b6b6abf7145894b5428ad2e20fe1c98b6d53d93","modified":1594941944186},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1594941944202},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1594941944202},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1594941944202},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1594941944202},{"_id":"source/_posts/pkl文件读取/1566227305402.png","hash":"40788780e586ee113263873078b42725d65a2148","modified":1593253188090},{"_id":"themes/next/.git/objects/pack/pack-f074904fda9cad8f26e08fb8bbf3d2af45754d3f.idx","hash":"08e0d1d23d1aa57271e70560e23b333696b26236","modified":1594941944078},{"_id":"source/_posts/用Python画丘比特之心/咱们结婚吧-齐晨.mp3","hash":"45f07fe3bf9f4b47fd6610206838d945f8c02aff","modified":1593253188146},{"_id":"themes/next/.git/objects/pack/pack-f074904fda9cad8f26e08fb8bbf3d2af45754d3f.pack","hash":"6ceb353a129ee80a47c3d61eea8b6204a668dbf8","modified":1594941944078},{"_id":"source/book/index/RLbook2018.pdf","hash":"0dda8bc1a81a1e60ed7b499c950893c0a6556c17","modified":1593253189570},{"_id":"public/baidusitemap.xml","hash":"8a9f1b989f53d782f81330f6c09d1bdb1d8d1452","modified":1594946530227},{"_id":"public/calendar.json","hash":"e42a3b2867e4c72ca683edb1ef481816c52bf794","modified":1594946530227},{"_id":"public/search.xml","hash":"7bf07506ac30cc73faf80789959a834e96df33a2","modified":1594946530234},{"_id":"public/sitemap.xml","hash":"bf69a2388216140bc44baa97b6536a397881b3cb","modified":1594946530234},{"_id":"public/googledead0cb79b0edb1f.html","hash":"8e0e2683440d8bb4730ba08b8d53c056731780a4","modified":1594946530240},{"_id":"public/categories/index.html","hash":"d4af535fb204f56acf507dbcdcbd1c4fe4d8d406","modified":1594946530240},{"_id":"public/book/index.html","hash":"6e990ebdb96759950e422d2b9acb00f94196ec5b","modified":1594946530240},{"_id":"public/archives/2019/page/2/index.html","hash":"5a1ffaa1bf3d10911e031190262ddac3f718633c","modified":1594946530240},{"_id":"public/archives/2019/09/index.html","hash":"a5e86d14622cc0cd96cb4fb96d23b5b0b6032128","modified":1594946530241},{"_id":"public/archives/2019/10/index.html","hash":"caa83791e45d28bc6c83e00f43a9cfdce3526544","modified":1594946530241},{"_id":"public/archives/2019/11/index.html","hash":"96cc22b7db02077787d483779e0b008e48b6ab3e","modified":1594946530241},{"_id":"public/archives/2020/index.html","hash":"4482bbafdceb2972683e971f3b96d8e9abc2aeff","modified":1594946530241},{"_id":"public/archives/2020/07/index.html","hash":"9ee7b243e91b826e6b3bfa050837e171d9bfa974","modified":1594946530241},{"_id":"public/categories/itchat/index.html","hash":"5e11c9124249e53b7d08f51fa561a93ca224dc90","modified":1594946530241},{"_id":"public/tags/Pyinstaller/index.html","hash":"956d650ba32cf0dd5a69048bb5a7e2485efb1242","modified":1594946530241},{"_id":"public/tags/exe/index.html","hash":"73f8435569fdb01e2a3aff955ba80d7a449e01fd","modified":1594946530241},{"_id":"public/tags/程序打包/index.html","hash":"183c7f4563cd82f01d22d3faa5852ae6741b9ca1","modified":1594946530241},{"_id":"public/tags/Kivy/index.html","hash":"a97d7f79abbda9881237b1399bf6e6955c701291","modified":1594946530241},{"_id":"public/tags/Android开发/index.html","hash":"b1477a042aef9fd4f92b7ae5db717ffff28af68c","modified":1594946530241},{"_id":"public/tags/Ubuntu/index.html","hash":"e33ac670405af3a0d4fcdef61735c50166db2ee5","modified":1594946530241},{"_id":"public/tags/Ubuntu18-04/index.html","hash":"4d2932242c9aaa5f9885f172733f004369bef025","modified":1594946530241},{"_id":"public/tags/TensorFlow-gpu/index.html","hash":"0571be2af5cca53ab9c90fb35758a84452b4298f","modified":1594946530241},{"_id":"public/tags/环境配置/index.html","hash":"7831d181de4261ba56f8fd4952c6dbd8d188321f","modified":1594946530241},{"_id":"public/tags/Windows10/index.html","hash":"43d4600d42bfa432dc7be3f2ce802f5c219420e0","modified":1594946530241},{"_id":"public/tags/Python/index.html","hash":"d5e7f9a693c190c0c2d23b05f8f927b21359aeb4","modified":1594946530241},{"_id":"public/tags/itchat/index.html","hash":"e029b40f9400c14bc0264a2d12b813c4ba3c0e24","modified":1594946530241},{"_id":"public/tags/hexo/index.html","hash":"ac533d091914e96f2fcf7281e56fedfde88a55d8","modified":1594946530242},{"_id":"public/tags/Next/index.html","hash":"52d6709711f0e8502c1fb98640131e28ddb5024c","modified":1594946530242},{"_id":"public/tags/pkl/index.html","hash":"1c520aadf6ed8cc8908d2e9574b7734e890f0d6f","modified":1594946530242},{"_id":"public/tags/tf-faster-rcnn/index.html","hash":"eaa8d61fd4c88fc8263ecbde5b79981529b3649d","modified":1594946530242},{"_id":"public/tags/目标检测/index.html","hash":"cbd4a8935e8010afbab841f6e29b738f24efa5d0","modified":1594946530242},{"_id":"public/tags/深度学习/index.html","hash":"445b5c8a4729f0ddc70d4d2c4f7c297adf20b9db","modified":1594946530242},{"_id":"public/tags/ubuntu/index.html","hash":"2ac1a7cf9913c491041731614b61d1878429ae7b","modified":1594946530242},{"_id":"public/tags/系统错误/index.html","hash":"411e9cbba02e71a4ae6f0d20f78dbef86c461989","modified":1594946530242},{"_id":"public/tags/Ubuntu更新报错/index.html","hash":"c4594716dc8e545bcbaad69ff37aeb5999ddeb83","modified":1594946530242},{"_id":"public/tags/在线应用/index.html","hash":"3a6f4b1fcebe13cbca5a594d8a864b27fe4ecf9d","modified":1594946530242},{"_id":"public/tags/前沿技术/index.html","hash":"c349c13ce04f7b89ee4c9134a0fdfc8f3a4ec3ff","modified":1594946530242},{"_id":"public/tags/心/index.html","hash":"2e630f94fb9ec7e2566ba1939a56d79ae7a74c68","modified":1594946530242},{"_id":"public/about/index.html","hash":"6fa3128eb755260c5055e1c78113c638711689b2","modified":1594946530242},{"_id":"public/tags/index.html","hash":"f1fef84fb505fb4cb7d86c50f6b4acbb57eff096","modified":1594946530242},{"_id":"public/2020/07/01/usr-lib-cnf-update-db-notfound/index.html","hash":"78e3162fec0ef678c1de3a6a34cfdbc81623203d","modified":1594946530242},{"_id":"public/2020/07/01/ubuntu进入initramfs/index.html","hash":"34862ceb91602892cae7308881143acb9145f92d","modified":1594946530242},{"_id":"public/2019/11/01/数据集整理/index.html","hash":"3279b2181425505e0fefd699ea7552a01d21db51","modified":1594946530242},{"_id":"public/2019/10/05/Pyinstaller打包程序/index.html","hash":"9c7c82a1e76e97f97287c87e62fcb3f7ac07fa24","modified":1594946530243},{"_id":"public/2019/10/03/Python使用Kivy进行Android开发/index.html","hash":"6fb8ac2f2d37e87a0a65398727ac8210fb950198","modified":1594946530243},{"_id":"public/2019/09/19/好玩的在线应用程序/index.html","hash":"407a070af4a2666c865e137aad2d399ddc57cd8b","modified":1594946530243},{"_id":"public/2019/09/12/Ubuntu18-04搭建GPU环境/index.html","hash":"7099c1366a8502b541f3f9c1d1feeb1cb65857f1","modified":1594946530243},{"_id":"public/2019/09/06/Windows10搭建GPU环境/index.html","hash":"de89efaade52ca0176e45e4f690407a0c9b2c311","modified":1594946530243},{"_id":"public/2019/08/23/itchat-1/index.html","hash":"a30697e9481c692c708903101f91790c20f69334","modified":1594946530243},{"_id":"public/2019/08/22/hexo报错/index.html","hash":"c3dbbdaca1316793ad9a59120424845cae57c560","modified":1594946530243},{"_id":"public/2019/08/22/用Python画丘比特之心/index.html","hash":"c5d29a551f6958d74d2d690d54896934602c6e6e","modified":1594946530243},{"_id":"public/2019/08/19/pkl文件读取/index.html","hash":"ed729c621bdac2b456fdaca3d547b8730423f294","modified":1594946530243},{"_id":"public/2019/08/17/tf-faster-rcnn-三-实现目标检测-cpu-训练自己的数据/index.html","hash":"120880f8a09827d00d7b7bb6c874ac6f3fe0baff","modified":1594946530243},{"_id":"public/2019/08/17/tf-faster-rcnn-二-实现目标检测-cpu-模型测试/index.html","hash":"d09ae83590dee4c3c230183bbb0276b17eb9902a","modified":1594946530243},{"_id":"public/2019/08/17/tf-faster-rcnn-一-实现目标检测-cpu-项目环境配置/index.html","hash":"89e4eb569a498001380736437a3b6a06221f9503","modified":1594946530243},{"_id":"public/archives/index.html","hash":"1f6b7d3d373dd96c6eb01ecb93349a3f10d402fe","modified":1594946530243},{"_id":"public/archives/page/2/index.html","hash":"67960169547ea3e80c5640759541b1a6ae371e97","modified":1594946530243},{"_id":"public/archives/2019/index.html","hash":"09395acdd5bdb640041a8b525d94759efd91de02","modified":1594946530243},{"_id":"public/archives/2019/08/index.html","hash":"d4d8a7c74f1e5e6362391d265aff088f113264b2","modified":1594946530243},{"_id":"public/categories/Python/index.html","hash":"23fb8523d8c9c239d631cdcfd66284471b24c76a","modified":1594946530243},{"_id":"public/categories/经验/index.html","hash":"9666b97e474c4a6270cbe27df2e9271729a44d35","modified":1594946530243},{"_id":"public/categories/计算机视觉/index.html","hash":"343746796532aa56b6a631801e17cb5c46de5410","modified":1594946530243},{"_id":"public/index.html","hash":"7013667a56833bbc3ccf3cfef9822bd39001f702","modified":1594946530244},{"_id":"public/page/2/index.html","hash":"0b95f4a869e9a831ccae823c36fedd82b5b131ff","modified":1594946530244},{"_id":"public/tags/经验/index.html","hash":"0baf29eb0daf231736cc7693cdef217ca5fa5bf3","modified":1594946530244},{"_id":"public/CNAME","hash":"b92c060bc173973706578158b0ecd514f0d23321","modified":1594946530247},{"_id":"public/README.md","hash":"cea9add47aa0641f7f47416f0dce3d213b1b0ab5","modified":1594946530247},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1594946530247},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1594946530247},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1594946530248},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1594946530248},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1594946530248},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1594946530248},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1594946530248},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1594946530248},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1594946530248},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1594946530248},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1594946530248},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1594946530248},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1594946530248},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1594946530248},{"_id":"public/2019/10/03/Python使用Kivy进行Android开发/1570077673578.png","hash":"5b7a21f206aa702371e1915a0437156ce75057c7","modified":1594946530248},{"_id":"public/2019/08/19/pkl文件读取/1566227525704.png","hash":"e285a71f4860cf93e64ca61e84680ac8f0185b5d","modified":1594946530248},{"_id":"public/2019/08/22/用Python画丘比特之心/1566433454275.png","hash":"56bcf846e1838eef6ce870359bb1d930b7d1ed75","modified":1594946530248},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1594946530603},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1594946530604},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1594946530645},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1594946530646},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1594946530646},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1594946530646},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1594946530646},{"_id":"public/js/utils.js","hash":"2c6e6b4d9a592fbb4bf04689524db2cdfcd94ca7","modified":1594946530646},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1594946530646},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1594946530646},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1594946530646},{"_id":"public/css/main.css","hash":"ac996337c2ee17410d85c2a03e74edffcc50c355","modified":1594946530646},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1594946530646},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1594946530646},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1594946530646},{"_id":"public/2019/08/19/pkl文件读取/1566227305402.png","hash":"40788780e586ee113263873078b42725d65a2148","modified":1594946530658},{"_id":"public/2019/08/22/用Python画丘比特之心/咱们结婚吧-齐晨.mp3","hash":"45f07fe3bf9f4b47fd6610206838d945f8c02aff","modified":1594946530674},{"_id":"public/book/index/RLbook2018.pdf","hash":"0dda8bc1a81a1e60ed7b499c950893c0a6556c17","modified":1594946530896}],"Category":[{"name":"Python","_id":"ckcphzdvg00053jmfb6lbwwol"},{"name":"经验","_id":"ckcphzdvp000g3jmf5d4b01iq"},{"name":"itchat","_id":"ckcphzdvt000s3jmfviquhw2s"},{"name":"计算机视觉","_id":"ckcphzdvy00163jmfomlarcw4"}],"Data":[],"Page":[{"_content":"google-site-verification: googledead0cb79b0edb1f.html","source":"googledead0cb79b0edb1f.html","raw":"google-site-verification: googledead0cb79b0edb1f.html","date":"2020-06-27T10:19:47.818Z","updated":"2020-06-27T10:19:47.818Z","path":"googledead0cb79b0edb1f.html","title":"","comments":1,"layout":"page","_id":"ckcphzdu100003jmfsv0bpcv2","content":"google-site-verification: googledead0cb79b0edb1f.html","site":{"data":{}},"length":53,"excerpt":"","more":"google-site-verification: googledead0cb79b0edb1f.html"},{"title":"","date":"2019-08-17T09:07:27.000Z","type":"about","_content":"\n<!--more-->\n\n<center><h3>随风流·幻</h3></center>\n<center>改之</center>\n<center>\n    <br>相遇，虚无缥缈的缘分使然</b>\n    <br>相识，擦肩而过的一面之缘</b>\n\t<br>\n    <br>记忆，埋藏深处\n    <br>不经意间的触动\n    <br>或许就是一段旅行\n    <br>\n    <br>可悲\n    <br>于相遇中擦肩而过</b>\n    <br>不识记忆中的她</b>\n    <br>然而</b>\n    <br>仅有的余念</b>\n    <br>是为等待着什么？</b>\n    <br>\n    <br>也许</b>\n    <br>此为梦与现实的交错</b>\n    <br>一切为幻</b>\n    <br>一切为实</b>\n    <br>在梦中的相识</b>\n    <br>于现实中相遇</b>\n    <br>于是没有了记忆\n    <br>\n    <br>再回头</b>\n    <br>梦还是梦</b>\n    <br>现实的路还要走</b>\n\n\n\n\n\n\n\n\n\n\n","source":"about/index.md","raw":"---\ntitle: \ndate: 2019-08-17 17:07:27\ntype: about\n---\n\n<!--more-->\n\n<center><h3>随风流·幻</h3></center>\n<center>改之</center>\n<center>\n    <br>相遇，虚无缥缈的缘分使然</b>\n    <br>相识，擦肩而过的一面之缘</b>\n\t<br>\n    <br>记忆，埋藏深处\n    <br>不经意间的触动\n    <br>或许就是一段旅行\n    <br>\n    <br>可悲\n    <br>于相遇中擦肩而过</b>\n    <br>不识记忆中的她</b>\n    <br>然而</b>\n    <br>仅有的余念</b>\n    <br>是为等待着什么？</b>\n    <br>\n    <br>也许</b>\n    <br>此为梦与现实的交错</b>\n    <br>一切为幻</b>\n    <br>一切为实</b>\n    <br>在梦中的相识</b>\n    <br>于现实中相遇</b>\n    <br>于是没有了记忆\n    <br>\n    <br>再回头</b>\n    <br>梦还是梦</b>\n    <br>现实的路还要走</b>\n\n\n\n\n\n\n\n\n\n\n","updated":"2020-06-27T10:19:47.838Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckcphzdvc00023jmf56xmbpe3","content":"<a id=\"more\"></a>\n\n<center><h3>随风流·幻</h3></center>\n<center>改之</center>\n<center>\n    <br>相遇，虚无缥缈的缘分使然\n    <br>相识，擦肩而过的一面之缘\n    <br>\n    <br>记忆，埋藏深处\n    <br>不经意间的触动\n    <br>或许就是一段旅行\n    <br>\n    <br>可悲\n    <br>于相遇中擦肩而过\n    <br>不识记忆中的她\n    <br>然而\n    <br>仅有的余念\n    <br>是为等待着什么？\n    <br>\n    <br>也许\n    <br>此为梦与现实的交错\n    <br>一切为幻\n    <br>一切为实\n    <br>在梦中的相识\n    <br>于现实中相遇\n    <br>于是没有了记忆\n    <br>\n    <br>再回头\n    <br>梦还是梦\n    <br>现实的路还要走\n\n\n\n\n\n\n\n\n\n\n</center>","site":{"data":{}},"length":277,"excerpt":"","more":"<center><h3>随风流·幻</h3></center>\n<center>改之</center>\n<center>\n    <br>相遇，虚无缥缈的缘分使然\n    <br>相识，擦肩而过的一面之缘\n    <br>\n    <br>记忆，埋藏深处\n    <br>不经意间的触动\n    <br>或许就是一段旅行\n    <br>\n    <br>可悲\n    <br>于相遇中擦肩而过\n    <br>不识记忆中的她\n    <br>然而\n    <br>仅有的余念\n    <br>是为等待着什么？\n    <br>\n    <br>也许\n    <br>此为梦与现实的交错\n    <br>一切为幻\n    <br>一切为实\n    <br>在梦中的相识\n    <br>于现实中相遇\n    <br>于是没有了记忆\n    <br>\n    <br>再回头\n    <br>梦还是梦\n    <br>现实的路还要走\n\n\n\n\n\n\n\n\n\n\n</center>"},{"title":"Categories","date":"2019-08-17T10:59:23.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-08-17 18:59:23\ntype: \"categories\"\n---\n","updated":"2020-06-27T10:19:47.838Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckcphzdve00043jmfvxnea14t","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"Book","date":"2019-11-22T08:57:26.000Z","_content":"\n<iframe align=\"middle\"  frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"100%\" height=86 \n\tsrc=\"http://music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66\">\n</iframe>\n\n\n\n<details>\n    <summary>强化学习（第二版）</summary>\n    <hr />\n    <embed src=\"./index/RLbook2018.pdf\"  type=\"application/pdf\" width=\"100%\" height=\"800\">\n</details>\n\n","source":"book/index.md","raw":"---\ntitle: book\ndate: 2019-11-22 16:57:26\n\n---\n\n<iframe align=\"middle\"  frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"100%\" height=86 \n\tsrc=\"http://music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66\">\n</iframe>\n\n\n\n<details>\n    <summary>强化学习（第二版）</summary>\n    <hr />\n    <embed src=\"./index/RLbook2018.pdf\"  type=\"application/pdf\" width=\"100%\" height=\"800\">\n</details>\n\n","updated":"2020-06-27T10:19:48.174Z","path":"book/index.html","comments":1,"layout":"page","_id":"ckcphzdvi00083jmfe0fwub73","content":"<iframe align=\"middle\" frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"100%\" height=\"86\" src=\"http://music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66\">\n</iframe>\n\n\n\n<details>\n    <summary>强化学习（第二版）</summary>\n    <hr>\n    <embed src=\"./index/RLbook2018.pdf\" type=\"application/pdf\" width=\"100%\" height=\"800\">\n</details>\n\n","site":{"data":{}},"length":32,"excerpt":"","more":"<iframe align=\"middle\" frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"100%\" height=\"86\" src=\"http://music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66\">\n</iframe>\n\n\n\n<details>\n    <summary>强化学习（第二版）</summary>\n    <hr>\n    <embed src=\"./index/RLbook2018.pdf\" type=\"application/pdf\" width=\"100%\" height=\"800\">\n</details>\n\n"},{"title":"Tags","date":"2019-08-17T10:08:21.000Z","type":"tags","_content":"\n","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-08-17 18:08:21\ntype: \"tags\"\n---\n\n","updated":"2020-06-27T10:19:47.838Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckcphzdvk000a3jmf5ilp4l7b","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""}],"Post":[{"title":"Pyinstaller打包程序","date":"2019-10-05T03:35:01.000Z","_content":"\n> 写好程序后，利用Pyinstaller将程序打包为可执行文件\n\n<!--more-->\n\n#### 安装Pyinstaller\n\n```shell\npip install pyinstaller\n```\n\n#### 程序打包\n\n进入程序的根目录下，单个程序文件的话，执行\n\n```shell\npyinstaller -F *.py\n\n#-F :将程序打包为一个文件\n# *.py是指程序文件名\n```\n\n这样打包出来的程序文件有一个问题，就是特别的大，因为在打包的时候将所有的包都打包进取了，不可取！\n\n#### 利用pipenv进行程序打包\n\n- 安装pipenv\n\n```shell\npip install pipenv\n```\n\n- 创建虚拟环境，可以指定python版本\n\n```shell\npipenv install \n```\n\n- 启动环境\n\n```shell\npipenv shell\n```\n\n- 安装需要的依赖，如pyinstaller\n\n```shell\npipenv install pyinstaller\n```\n\n此时可以利用pip list查看环境中python的依赖，比较干净了，此时就可以利用pyinstaller进行打包了\n\n```shell\npyinstaller -F *.py\n```\n\n然后就会发现此时的程序文件会小很多，具体的pipenv和pyinstaller用法，可以参考官网！！！","source":"_posts/Pyinstaller打包程序.md","raw":"---\ntitle: Pyinstaller打包程序\ndate: 2019-10-05 11:35:01\ncategories: Python\ntags:\n- Pyinstaller\n- .exe\n- 程序打包\n---\n\n> 写好程序后，利用Pyinstaller将程序打包为可执行文件\n\n<!--more-->\n\n#### 安装Pyinstaller\n\n```shell\npip install pyinstaller\n```\n\n#### 程序打包\n\n进入程序的根目录下，单个程序文件的话，执行\n\n```shell\npyinstaller -F *.py\n\n#-F :将程序打包为一个文件\n# *.py是指程序文件名\n```\n\n这样打包出来的程序文件有一个问题，就是特别的大，因为在打包的时候将所有的包都打包进取了，不可取！\n\n#### 利用pipenv进行程序打包\n\n- 安装pipenv\n\n```shell\npip install pipenv\n```\n\n- 创建虚拟环境，可以指定python版本\n\n```shell\npipenv install \n```\n\n- 启动环境\n\n```shell\npipenv shell\n```\n\n- 安装需要的依赖，如pyinstaller\n\n```shell\npipenv install pyinstaller\n```\n\n此时可以利用pip list查看环境中python的依赖，比较干净了，此时就可以利用pyinstaller进行打包了\n\n```shell\npyinstaller -F *.py\n```\n\n然后就会发现此时的程序文件会小很多，具体的pipenv和pyinstaller用法，可以参考官网！！！","slug":"Pyinstaller打包程序","published":1,"updated":"2020-06-27T10:19:48.174Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcphzdv900013jmf7ypprp2y","content":"<blockquote>\n<p>写好程序后，利用Pyinstaller将程序打包为可执行文件</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<h4 id=\"安装Pyinstaller\"><a href=\"#安装Pyinstaller\" class=\"headerlink\" title=\"安装Pyinstaller\"></a>安装Pyinstaller</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pyinstaller</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"程序打包\"><a href=\"#程序打包\" class=\"headerlink\" title=\"程序打包\"></a>程序打包</h4><p>进入程序的根目录下，单个程序文件的话，执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyinstaller -F *.py</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span>-F :将程序打包为一个文件</span><br><span class=\"line\"><span class=\"meta\">#</span> *.py是指程序文件名</span><br></pre></td></tr></table></figure>\n\n<p>这样打包出来的程序文件有一个问题，就是特别的大，因为在打包的时候将所有的包都打包进取了，不可取！</p>\n<h4 id=\"利用pipenv进行程序打包\"><a href=\"#利用pipenv进行程序打包\" class=\"headerlink\" title=\"利用pipenv进行程序打包\"></a>利用pipenv进行程序打包</h4><ul>\n<li>安装pipenv</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pipenv</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建虚拟环境，可以指定python版本</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pipenv install</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>启动环境</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pipenv shell</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>安装需要的依赖，如pyinstaller</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pipenv install pyinstaller</span><br></pre></td></tr></table></figure>\n\n<p>此时可以利用pip list查看环境中python的依赖，比较干净了，此时就可以利用pyinstaller进行打包了</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyinstaller -F *.py</span><br></pre></td></tr></table></figure>\n\n<p>然后就会发现此时的程序文件会小很多，具体的pipenv和pyinstaller用法，可以参考官网！！！</p>\n","site":{"data":{}},"length":484,"excerpt":"<blockquote>\n<p>写好程序后，利用Pyinstaller将程序打包为可执行文件</p>\n</blockquote>","more":"<h4 id=\"安装Pyinstaller\"><a href=\"#安装Pyinstaller\" class=\"headerlink\" title=\"安装Pyinstaller\"></a>安装Pyinstaller</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pyinstaller</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"程序打包\"><a href=\"#程序打包\" class=\"headerlink\" title=\"程序打包\"></a>程序打包</h4><p>进入程序的根目录下，单个程序文件的话，执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyinstaller -F *.py</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span>-F :将程序打包为一个文件</span><br><span class=\"line\"><span class=\"meta\">#</span> *.py是指程序文件名</span><br></pre></td></tr></table></figure>\n\n<p>这样打包出来的程序文件有一个问题，就是特别的大，因为在打包的时候将所有的包都打包进取了，不可取！</p>\n<h4 id=\"利用pipenv进行程序打包\"><a href=\"#利用pipenv进行程序打包\" class=\"headerlink\" title=\"利用pipenv进行程序打包\"></a>利用pipenv进行程序打包</h4><ul>\n<li>安装pipenv</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pipenv</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建虚拟环境，可以指定python版本</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pipenv install</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>启动环境</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pipenv shell</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>安装需要的依赖，如pyinstaller</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pipenv install pyinstaller</span><br></pre></td></tr></table></figure>\n\n<p>此时可以利用pip list查看环境中python的依赖，比较干净了，此时就可以利用pyinstaller进行打包了</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyinstaller -F *.py</span><br></pre></td></tr></table></figure>\n\n<p>然后就会发现此时的程序文件会小很多，具体的pipenv和pyinstaller用法，可以参考官网！！！</p>"},{"title":"Python使用Kivy进行Android开发","date":"2019-10-03T04:28:54.000Z","_content":"\n> Python作为一种万能语言，有什么不能“盘”的。今天利用Kivy使用Python进行Android开发，写一个\"Hello world\"程序。\n\n<!--more-->\n\n#### 安装相应的软件\n\n- kivy：编写程序的包文件\n\n```shell\nsudo pip install kivy\n```\n\n- buildozer：用来编译生成APP文件\n\n```shell\nsudo pip install buildozer\n```\n\n- openjdk-8-jdk \n\n```shell\nsudo apt-get install openjdk-8-jdk \n```\n\n#### 编写一个简单的\"hello world\"程序\n\n- 首先创建一个main.py文件\n\n```python\nfrom kivy.app import App\nclass HelloAPP(App):\n\tpass\n\nif __name__ == '__main__':\n\tHelloAPP().run()\n```\n\n- 创建一个hello.kv文件\n\n```kivy\nLabel:\n\ttext:'hello world!'\n```\n\n#### 执行测试\n\n- 本地执行：文件目录下执行python main.py,显示如下\n\n![](https://img-blog.csdnimg.cn/20191005115958562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70)\n\n- 生成APP文件执行\n\n  ```shell\n  #首先在文件目录下执行\n  buildozer init \n  #执行下面这句时，因为要下载一些东西，所以会比较慢\n  buildozer android debug deplay run \n  ```\n\n  ","source":"_posts/Python使用Kivy进行Android开发.md","raw":"---\ntitle: Python使用Kivy进行Android开发\ndate: 2019-10-03 12:28:54\ncategories: Python\ntags:\n- Kivy\n- Android开发\n- Ubuntu\n---\n\n> Python作为一种万能语言，有什么不能“盘”的。今天利用Kivy使用Python进行Android开发，写一个\"Hello world\"程序。\n\n<!--more-->\n\n#### 安装相应的软件\n\n- kivy：编写程序的包文件\n\n```shell\nsudo pip install kivy\n```\n\n- buildozer：用来编译生成APP文件\n\n```shell\nsudo pip install buildozer\n```\n\n- openjdk-8-jdk \n\n```shell\nsudo apt-get install openjdk-8-jdk \n```\n\n#### 编写一个简单的\"hello world\"程序\n\n- 首先创建一个main.py文件\n\n```python\nfrom kivy.app import App\nclass HelloAPP(App):\n\tpass\n\nif __name__ == '__main__':\n\tHelloAPP().run()\n```\n\n- 创建一个hello.kv文件\n\n```kivy\nLabel:\n\ttext:'hello world!'\n```\n\n#### 执行测试\n\n- 本地执行：文件目录下执行python main.py,显示如下\n\n![](https://img-blog.csdnimg.cn/20191005115958562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70)\n\n- 生成APP文件执行\n\n  ```shell\n  #首先在文件目录下执行\n  buildozer init \n  #执行下面这句时，因为要下载一些东西，所以会比较慢\n  buildozer android debug deplay run \n  ```\n\n  ","slug":"Python使用Kivy进行Android开发","published":1,"updated":"2020-06-27T10:19:48.170Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcphzdvd00033jmfiz5cju0q","content":"<blockquote>\n<p>Python作为一种万能语言，有什么不能“盘”的。今天利用Kivy使用Python进行Android开发，写一个”Hello world”程序。</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<h4 id=\"安装相应的软件\"><a href=\"#安装相应的软件\" class=\"headerlink\" title=\"安装相应的软件\"></a>安装相应的软件</h4><ul>\n<li>kivy：编写程序的包文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install kivy</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>buildozer：用来编译生成APP文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install buildozer</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>openjdk-8-jdk </li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install openjdk-8-jdk</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"编写一个简单的”hello-world”程序\"><a href=\"#编写一个简单的”hello-world”程序\" class=\"headerlink\" title=\"编写一个简单的”hello world”程序\"></a>编写一个简单的”hello world”程序</h4><ul>\n<li>首先创建一个main.py文件</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> kivy.app <span class=\"keyword\">import</span> App</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloAPP</span><span class=\"params\">(App)</span>:</span></span><br><span class=\"line\">true<span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">trueHelloAPP().run()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建一个hello.kv文件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Label:</span><br><span class=\"line\">truetext:&apos;hello world!&apos;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"执行测试\"><a href=\"#执行测试\" class=\"headerlink\" title=\"执行测试\"></a>执行测试</h4><ul>\n<li>本地执行：文件目录下执行python main.py,显示如下</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20191005115958562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70\" alt></p>\n<ul>\n<li><p>生成APP文件执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>首先在文件目录下执行</span><br><span class=\"line\">buildozer init </span><br><span class=\"line\"><span class=\"meta\">#</span>执行下面这句时，因为要下载一些东西，所以会比较慢</span><br><span class=\"line\">buildozer android debug deplay run</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n","site":{"data":{}},"length":565,"excerpt":"<blockquote>\n<p>Python作为一种万能语言，有什么不能“盘”的。今天利用Kivy使用Python进行Android开发，写一个”Hello world”程序。</p>\n</blockquote>","more":"<h4 id=\"安装相应的软件\"><a href=\"#安装相应的软件\" class=\"headerlink\" title=\"安装相应的软件\"></a>安装相应的软件</h4><ul>\n<li>kivy：编写程序的包文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install kivy</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>buildozer：用来编译生成APP文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install buildozer</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>openjdk-8-jdk </li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install openjdk-8-jdk</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"编写一个简单的”hello-world”程序\"><a href=\"#编写一个简单的”hello-world”程序\" class=\"headerlink\" title=\"编写一个简单的”hello world”程序\"></a>编写一个简单的”hello world”程序</h4><ul>\n<li>首先创建一个main.py文件</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> kivy.app <span class=\"keyword\">import</span> App</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloAPP</span><span class=\"params\">(App)</span>:</span></span><br><span class=\"line\">true<span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">trueHelloAPP().run()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建一个hello.kv文件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Label:</span><br><span class=\"line\">truetext:&apos;hello world!&apos;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"执行测试\"><a href=\"#执行测试\" class=\"headerlink\" title=\"执行测试\"></a>执行测试</h4><ul>\n<li>本地执行：文件目录下执行python main.py,显示如下</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20191005115958562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70\" alt></p>\n<ul>\n<li><p>生成APP文件执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>首先在文件目录下执行</span><br><span class=\"line\">buildozer init </span><br><span class=\"line\"><span class=\"meta\">#</span>执行下面这句时，因为要下载一些东西，所以会比较慢</span><br><span class=\"line\">buildozer android debug deplay run</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>"},{"title":"Ubuntu18.04搭建GPU环境","date":"2019-09-12T04:19:23.000Z","_content":"\n> Ubuntu18.04下配置TensorFlow-gpu环境\n\n<!--more-->\n\n关于GPU的环境配置已经不是第一次了，Ubuntu上或是在Windows上，但是每次都会遇到各种各样的问题。好吧，其实环境配置的步骤都差不多，在这里我之说明在安装过程中主要遇到的问题。\n\n#### 环境\n\n电脑：dell G7系列\n\n系统：Ubuntu18.04\n\n驱动：NVIDIA 435\n\nCUDA：10.1\n\nCUDNN：7.6\n\nTensorFLow-gpu：1.14\n\n#### 安装\n\n- 驱动安装，可以使用Ubuntu系统自带的\"软件和更新\"->\"附加驱动\"进行安装。\n\n- 然后就是CUDA安装，也是按照正常的安装命令进行安装就可以。\n\n- CUDNN复制拷进cuda的安装目录\n\n- 最后tensorflow安装\n\n  ```shell\n  pip install tensorflow-gpu\n  ```\n\n#### 问题\n\n最大的问题就是**安全启动**选项的问题，不知道是不是dell系统的设置问题。\n\nwindows系统的启动必须设置安全启动选项，但是在ubuntu系统下，设置了安全启动选项后，无法与NVIDIA驱动进行通信，这是遇到的最大问题。目前每次切换系统都需要县设置安全启动选项，这就很难受了。\n\n","source":"_posts/Ubuntu18-04搭建GPU环境.md","raw":"---\ntitle: Ubuntu18.04搭建GPU环境\ndate: 2019-09-12 12:19:23\ncategories: 经验\ntags:\n- Ubuntu18.04\n- TensorFlow-gpu\n- 经验\n- 环境配置\n---\n\n> Ubuntu18.04下配置TensorFlow-gpu环境\n\n<!--more-->\n\n关于GPU的环境配置已经不是第一次了，Ubuntu上或是在Windows上，但是每次都会遇到各种各样的问题。好吧，其实环境配置的步骤都差不多，在这里我之说明在安装过程中主要遇到的问题。\n\n#### 环境\n\n电脑：dell G7系列\n\n系统：Ubuntu18.04\n\n驱动：NVIDIA 435\n\nCUDA：10.1\n\nCUDNN：7.6\n\nTensorFLow-gpu：1.14\n\n#### 安装\n\n- 驱动安装，可以使用Ubuntu系统自带的\"软件和更新\"->\"附加驱动\"进行安装。\n\n- 然后就是CUDA安装，也是按照正常的安装命令进行安装就可以。\n\n- CUDNN复制拷进cuda的安装目录\n\n- 最后tensorflow安装\n\n  ```shell\n  pip install tensorflow-gpu\n  ```\n\n#### 问题\n\n最大的问题就是**安全启动**选项的问题，不知道是不是dell系统的设置问题。\n\nwindows系统的启动必须设置安全启动选项，但是在ubuntu系统下，设置了安全启动选项后，无法与NVIDIA驱动进行通信，这是遇到的最大问题。目前每次切换系统都需要县设置安全启动选项，这就很难受了。\n\n","slug":"Ubuntu18-04搭建GPU环境","published":1,"updated":"2020-06-27T10:19:47.914Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcphzdvi00073jmf53816fop","content":"<blockquote>\n<p>Ubuntu18.04下配置TensorFlow-gpu环境</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<p>关于GPU的环境配置已经不是第一次了，Ubuntu上或是在Windows上，但是每次都会遇到各种各样的问题。好吧，其实环境配置的步骤都差不多，在这里我之说明在安装过程中主要遇到的问题。</p>\n<h4 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h4><p>电脑：dell G7系列</p>\n<p>系统：Ubuntu18.04</p>\n<p>驱动：NVIDIA 435</p>\n<p>CUDA：10.1</p>\n<p>CUDNN：7.6</p>\n<p>TensorFLow-gpu：1.14</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ul>\n<li><p>驱动安装，可以使用Ubuntu系统自带的”软件和更新”-&gt;”附加驱动”进行安装。</p>\n</li>\n<li><p>然后就是CUDA安装，也是按照正常的安装命令进行安装就可以。</p>\n</li>\n<li><p>CUDNN复制拷进cuda的安装目录</p>\n</li>\n<li><p>最后tensorflow安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install tensorflow-gpu</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h4 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h4><p>最大的问题就是<strong>安全启动</strong>选项的问题，不知道是不是dell系统的设置问题。</p>\n<p>windows系统的启动必须设置安全启动选项，但是在ubuntu系统下，设置了安全启动选项后，无法与NVIDIA驱动进行通信，这是遇到的最大问题。目前每次切换系统都需要县设置安全启动选项，这就很难受了。</p>\n","site":{"data":{}},"length":497,"excerpt":"<blockquote>\n<p>Ubuntu18.04下配置TensorFlow-gpu环境</p>\n</blockquote>","more":"<p>关于GPU的环境配置已经不是第一次了，Ubuntu上或是在Windows上，但是每次都会遇到各种各样的问题。好吧，其实环境配置的步骤都差不多，在这里我之说明在安装过程中主要遇到的问题。</p>\n<h4 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h4><p>电脑：dell G7系列</p>\n<p>系统：Ubuntu18.04</p>\n<p>驱动：NVIDIA 435</p>\n<p>CUDA：10.1</p>\n<p>CUDNN：7.6</p>\n<p>TensorFLow-gpu：1.14</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ul>\n<li><p>驱动安装，可以使用Ubuntu系统自带的”软件和更新”-&gt;”附加驱动”进行安装。</p>\n</li>\n<li><p>然后就是CUDA安装，也是按照正常的安装命令进行安装就可以。</p>\n</li>\n<li><p>CUDNN复制拷进cuda的安装目录</p>\n</li>\n<li><p>最后tensorflow安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install tensorflow-gpu</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h4 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h4><p>最大的问题就是<strong>安全启动</strong>选项的问题，不知道是不是dell系统的设置问题。</p>\n<p>windows系统的启动必须设置安全启动选项，但是在ubuntu系统下，设置了安全启动选项后，无法与NVIDIA驱动进行通信，这是遇到的最大问题。目前每次切换系统都需要县设置安全启动选项，这就很难受了。</p>"},{"title":"Windows10搭建GPU环境1","date":"2019-09-06T05:32:42.000Z","_content":"\n>关于在Windows10下配置TensorFlow-gpu的环境总结\n\n<!--more-->\n\n#### 1. 写在前面\n\n以前用习惯了Ubuntu，突然换回Windows还真有点不习惯，也是第一次在Windows下配置相关的环境\n\n安装参考：https://www.cnblogs.com/wanyu416/p/9536853.html\n\n配置参考：https://blog.csdn.net/oMoDao1/article/details/83241074\n\n#### 2. 说明\n\n- 安装过程参考上面的链接就可以，写的很全，也很详细，尤其是在系统中关于变量的添加\n\n- 在最后安装TensorFlow的gpu的时候，一定要看好自己对应的版本，按照版本添加，不能直接使用pip安装\n\n","source":"_posts/Windows10搭建GPU环境.md","raw":"---\ntitle: Windows10搭建GPU环境1\ndate: 2019-09-06 13:32:42\ncategories: 经验\ntags:\n- Windows10\n- TensorFlow-gpu\n- 经验\n- 环境配置\n---\n\n>关于在Windows10下配置TensorFlow-gpu的环境总结\n\n<!--more-->\n\n#### 1. 写在前面\n\n以前用习惯了Ubuntu，突然换回Windows还真有点不习惯，也是第一次在Windows下配置相关的环境\n\n安装参考：https://www.cnblogs.com/wanyu416/p/9536853.html\n\n配置参考：https://blog.csdn.net/oMoDao1/article/details/83241074\n\n#### 2. 说明\n\n- 安装过程参考上面的链接就可以，写的很全，也很详细，尤其是在系统中关于变量的添加\n\n- 在最后安装TensorFlow的gpu的时候，一定要看好自己对应的版本，按照版本添加，不能直接使用pip安装\n\n","slug":"Windows10搭建GPU环境","published":1,"updated":"2020-06-27T10:19:47.918Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcphzdvj00093jmf4dh61363","content":"<blockquote>\n<p>关于在Windows10下配置TensorFlow-gpu的环境总结</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<h4 id=\"1-写在前面\"><a href=\"#1-写在前面\" class=\"headerlink\" title=\"1. 写在前面\"></a>1. 写在前面</h4><p>以前用习惯了Ubuntu，突然换回Windows还真有点不习惯，也是第一次在Windows下配置相关的环境</p>\n<p>安装参考：<a href=\"https://www.cnblogs.com/wanyu416/p/9536853.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/wanyu416/p/9536853.html</a></p>\n<p>配置参考：<a href=\"https://blog.csdn.net/oMoDao1/article/details/83241074\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/oMoDao1/article/details/83241074</a></p>\n<h4 id=\"2-说明\"><a href=\"#2-说明\" class=\"headerlink\" title=\"2. 说明\"></a>2. 说明</h4><ul>\n<li><p>安装过程参考上面的链接就可以，写的很全，也很详细，尤其是在系统中关于变量的添加</p>\n</li>\n<li><p>在最后安装TensorFlow的gpu的时候，一定要看好自己对应的版本，按照版本添加，不能直接使用pip安装</p>\n</li>\n</ul>\n","site":{"data":{}},"length":317,"excerpt":"<blockquote>\n<p>关于在Windows10下配置TensorFlow-gpu的环境总结</p>\n</blockquote>","more":"<h4 id=\"1-写在前面\"><a href=\"#1-写在前面\" class=\"headerlink\" title=\"1. 写在前面\"></a>1. 写在前面</h4><p>以前用习惯了Ubuntu，突然换回Windows还真有点不习惯，也是第一次在Windows下配置相关的环境</p>\n<p>安装参考：<a href=\"https://www.cnblogs.com/wanyu416/p/9536853.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/wanyu416/p/9536853.html</a></p>\n<p>配置参考：<a href=\"https://blog.csdn.net/oMoDao1/article/details/83241074\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/oMoDao1/article/details/83241074</a></p>\n<h4 id=\"2-说明\"><a href=\"#2-说明\" class=\"headerlink\" title=\"2. 说明\"></a>2. 说明</h4><ul>\n<li><p>安装过程参考上面的链接就可以，写的很全，也很详细，尤其是在系统中关于变量的添加</p>\n</li>\n<li><p>在最后安装TensorFlow的gpu的时候，一定要看好自己对应的版本，按照版本添加，不能直接使用pip安装</p>\n</li>\n</ul>"},{"title":"Itchat获取群聊用户的信息","date":"2019-08-23T00:32:49.000Z","_content":"\n> itchat是一个非常好玩的Python扩展包，是基于微信的一个开放接口\n\n<!--more-->\n\n#### 1. 安装itchat\n\n```shell\npip install itchat\n```\n\npython扩展包的安装太简单了，就只需要一行命令就可以解决\n\n#### 2. 利用itchat获取群聊好友的信息\n\n直接上代码，代码里面会有相关的注释的\n\n```python\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# @Date    : 2019-08-22 17:30:40\n# @Author  : WangGuo\n# @GitHub  : https://github.com/King-Key\n# @Blog    : https://blog.csdn.net/King_key\n# @Emeil   : guo_wang_113@163.com\n\nimport os\nimport sys\nimport xlsxwriter\nimport itchat,time\nfrom itchat.content import TEXT\n\n #其中hotReload=True参数是为了短暂记忆登录状态，避免每登录一次就扫一次二维码\nitchat.auto_login(hotReload=True)\n#获取群聊信息\nroomslist = itchat.get_chatrooms(update=True)\n\n#插入excel\n#创建excel表单\nworkbook=xlsxwriter.Workbook(\"群聊用户名单.xlsx\")\nfor i in range(0,len(roomslist)-1):\n    #根据群聊名称在表单中创建工作薄\n    worksheet=workbook.add_worksheet(roomslist[i]['NickName'])\n    #添加表头\n    worksheet.write(0,0,\"微信名称\")\n    worksheet.write(0,1,\"群备注\")\n    #获取群聊用户列表\n    myroom=itchat.search_chatrooms(name=roomslist[i]['NickName'])\n    #获取群聊名称\n    gsp=itchat.update_chatroom(myroom[0]['UserName'], detailedMember=True)\n    print(\"群名：{} \\t 人数：{}\".format(roomslist[i]['NickName'],len(gsp['MemberList'])))\n\n    nickname=[]\n    displayname=[]\n\n    for c in gsp['MemberList']:\n        nickname.append(c['NickName'])\n        displayname.append(c['DisplayName'])\n    #将用户信息写入相应的工作薄中\n    for x in range(len(gsp['MemberList'])):\n        worksheet.write(x+1,0,nickname[x])\n        worksheet.write(x+1,1,displayname[x])\n    #输出一点提示信息\n    print(\"sheet {} finished\".format(roomslist[i]['NickName']))\n#关闭工作表\nworkbook.close()\n```\n\n#### 3. 中间出现的问题\n\n- 有的微信号无法登录\n\n> 好像说是新申请的无法登录，可以试试能否登录网页版微信，能登录网页版微信就可以登录itchat，反之一样\n\n- 群聊显示不全\n\n> 这里的群聊默认是只显示已经保存在通讯录里面的群聊\n\n","source":"_posts/itchat-1.md","raw":"---\ntitle: itchat获取群聊用户的信息\ndate: 2019-08-23 08:32:49\ncategories: itchat\ntags:\n- Python\n- itchat\n---\n\n> itchat是一个非常好玩的Python扩展包，是基于微信的一个开放接口\n\n<!--more-->\n\n#### 1. 安装itchat\n\n```shell\npip install itchat\n```\n\npython扩展包的安装太简单了，就只需要一行命令就可以解决\n\n#### 2. 利用itchat获取群聊好友的信息\n\n直接上代码，代码里面会有相关的注释的\n\n```python\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# @Date    : 2019-08-22 17:30:40\n# @Author  : WangGuo\n# @GitHub  : https://github.com/King-Key\n# @Blog    : https://blog.csdn.net/King_key\n# @Emeil   : guo_wang_113@163.com\n\nimport os\nimport sys\nimport xlsxwriter\nimport itchat,time\nfrom itchat.content import TEXT\n\n #其中hotReload=True参数是为了短暂记忆登录状态，避免每登录一次就扫一次二维码\nitchat.auto_login(hotReload=True)\n#获取群聊信息\nroomslist = itchat.get_chatrooms(update=True)\n\n#插入excel\n#创建excel表单\nworkbook=xlsxwriter.Workbook(\"群聊用户名单.xlsx\")\nfor i in range(0,len(roomslist)-1):\n    #根据群聊名称在表单中创建工作薄\n    worksheet=workbook.add_worksheet(roomslist[i]['NickName'])\n    #添加表头\n    worksheet.write(0,0,\"微信名称\")\n    worksheet.write(0,1,\"群备注\")\n    #获取群聊用户列表\n    myroom=itchat.search_chatrooms(name=roomslist[i]['NickName'])\n    #获取群聊名称\n    gsp=itchat.update_chatroom(myroom[0]['UserName'], detailedMember=True)\n    print(\"群名：{} \\t 人数：{}\".format(roomslist[i]['NickName'],len(gsp['MemberList'])))\n\n    nickname=[]\n    displayname=[]\n\n    for c in gsp['MemberList']:\n        nickname.append(c['NickName'])\n        displayname.append(c['DisplayName'])\n    #将用户信息写入相应的工作薄中\n    for x in range(len(gsp['MemberList'])):\n        worksheet.write(x+1,0,nickname[x])\n        worksheet.write(x+1,1,displayname[x])\n    #输出一点提示信息\n    print(\"sheet {} finished\".format(roomslist[i]['NickName']))\n#关闭工作表\nworkbook.close()\n```\n\n#### 3. 中间出现的问题\n\n- 有的微信号无法登录\n\n> 好像说是新申请的无法登录，可以试试能否登录网页版微信，能登录网页版微信就可以登录itchat，反之一样\n\n- 群聊显示不全\n\n> 这里的群聊默认是只显示已经保存在通讯录里面的群聊\n\n","slug":"itchat-1","published":1,"updated":"2020-06-27T10:19:47.886Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcphzdvl000b3jmfajqg1add","content":"<blockquote>\n<p>itchat是一个非常好玩的Python扩展包，是基于微信的一个开放接口</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<h4 id=\"1-安装itchat\"><a href=\"#1-安装itchat\" class=\"headerlink\" title=\"1. 安装itchat\"></a>1. 安装itchat</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install itchat</span><br></pre></td></tr></table></figure>\n\n<p>python扩展包的安装太简单了，就只需要一行命令就可以解决</p>\n<h4 id=\"2-利用itchat获取群聊好友的信息\"><a href=\"#2-利用itchat获取群聊好友的信息\" class=\"headerlink\" title=\"2. 利用itchat获取群聊好友的信息\"></a>2. 利用itchat获取群聊好友的信息</h4><p>直接上代码，代码里面会有相关的注释的</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># @Date    : 2019-08-22 17:30:40</span></span><br><span class=\"line\"><span class=\"comment\"># @Author  : WangGuo</span></span><br><span class=\"line\"><span class=\"comment\"># @GitHub  : https://github.com/King-Key</span></span><br><span class=\"line\"><span class=\"comment\"># @Blog    : https://blog.csdn.net/King_key</span></span><br><span class=\"line\"><span class=\"comment\"># @Emeil   : guo_wang_113@163.com</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> xlsxwriter</span><br><span class=\"line\"><span class=\"keyword\">import</span> itchat,time</span><br><span class=\"line\"><span class=\"keyword\">from</span> itchat.content <span class=\"keyword\">import</span> TEXT</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">#其中hotReload=True参数是为了短暂记忆登录状态，避免每登录一次就扫一次二维码</span></span><br><span class=\"line\">itchat.auto_login(hotReload=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"comment\">#获取群聊信息</span></span><br><span class=\"line\">roomslist = itchat.get_chatrooms(update=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#插入excel</span></span><br><span class=\"line\"><span class=\"comment\">#创建excel表单</span></span><br><span class=\"line\">workbook=xlsxwriter.Workbook(<span class=\"string\">\"群聊用户名单.xlsx\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,len(roomslist)<span class=\"number\">-1</span>):</span><br><span class=\"line\">    <span class=\"comment\">#根据群聊名称在表单中创建工作薄</span></span><br><span class=\"line\">    worksheet=workbook.add_worksheet(roomslist[i][<span class=\"string\">'NickName'</span>])</span><br><span class=\"line\">    <span class=\"comment\">#添加表头</span></span><br><span class=\"line\">    worksheet.write(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"string\">\"微信名称\"</span>)</span><br><span class=\"line\">    worksheet.write(<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"string\">\"群备注\"</span>)</span><br><span class=\"line\">    <span class=\"comment\">#获取群聊用户列表</span></span><br><span class=\"line\">    myroom=itchat.search_chatrooms(name=roomslist[i][<span class=\"string\">'NickName'</span>])</span><br><span class=\"line\">    <span class=\"comment\">#获取群聊名称</span></span><br><span class=\"line\">    gsp=itchat.update_chatroom(myroom[<span class=\"number\">0</span>][<span class=\"string\">'UserName'</span>], detailedMember=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    print(<span class=\"string\">\"群名：&#123;&#125; \\t 人数：&#123;&#125;\"</span>.format(roomslist[i][<span class=\"string\">'NickName'</span>],len(gsp[<span class=\"string\">'MemberList'</span>])))</span><br><span class=\"line\"></span><br><span class=\"line\">    nickname=[]</span><br><span class=\"line\">    displayname=[]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> gsp[<span class=\"string\">'MemberList'</span>]:</span><br><span class=\"line\">        nickname.append(c[<span class=\"string\">'NickName'</span>])</span><br><span class=\"line\">        displayname.append(c[<span class=\"string\">'DisplayName'</span>])</span><br><span class=\"line\">    <span class=\"comment\">#将用户信息写入相应的工作薄中</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(len(gsp[<span class=\"string\">'MemberList'</span>])):</span><br><span class=\"line\">        worksheet.write(x+<span class=\"number\">1</span>,<span class=\"number\">0</span>,nickname[x])</span><br><span class=\"line\">        worksheet.write(x+<span class=\"number\">1</span>,<span class=\"number\">1</span>,displayname[x])</span><br><span class=\"line\">    <span class=\"comment\">#输出一点提示信息</span></span><br><span class=\"line\">    print(<span class=\"string\">\"sheet &#123;&#125; finished\"</span>.format(roomslist[i][<span class=\"string\">'NickName'</span>]))</span><br><span class=\"line\"><span class=\"comment\">#关闭工作表</span></span><br><span class=\"line\">workbook.close()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-中间出现的问题\"><a href=\"#3-中间出现的问题\" class=\"headerlink\" title=\"3. 中间出现的问题\"></a>3. 中间出现的问题</h4><ul>\n<li>有的微信号无法登录</li>\n</ul>\n<blockquote>\n<p>好像说是新申请的无法登录，可以试试能否登录网页版微信，能登录网页版微信就可以登录itchat，反之一样</p>\n</blockquote>\n<ul>\n<li>群聊显示不全</li>\n</ul>\n<blockquote>\n<p>这里的群聊默认是只显示已经保存在通讯录里面的群聊</p>\n</blockquote>\n","site":{"data":{}},"length":1601,"excerpt":"<blockquote>\n<p>itchat是一个非常好玩的Python扩展包，是基于微信的一个开放接口</p>\n</blockquote>","more":"<h4 id=\"1-安装itchat\"><a href=\"#1-安装itchat\" class=\"headerlink\" title=\"1. 安装itchat\"></a>1. 安装itchat</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install itchat</span><br></pre></td></tr></table></figure>\n\n<p>python扩展包的安装太简单了，就只需要一行命令就可以解决</p>\n<h4 id=\"2-利用itchat获取群聊好友的信息\"><a href=\"#2-利用itchat获取群聊好友的信息\" class=\"headerlink\" title=\"2. 利用itchat获取群聊好友的信息\"></a>2. 利用itchat获取群聊好友的信息</h4><p>直接上代码，代码里面会有相关的注释的</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># @Date    : 2019-08-22 17:30:40</span></span><br><span class=\"line\"><span class=\"comment\"># @Author  : WangGuo</span></span><br><span class=\"line\"><span class=\"comment\"># @GitHub  : https://github.com/King-Key</span></span><br><span class=\"line\"><span class=\"comment\"># @Blog    : https://blog.csdn.net/King_key</span></span><br><span class=\"line\"><span class=\"comment\"># @Emeil   : guo_wang_113@163.com</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> xlsxwriter</span><br><span class=\"line\"><span class=\"keyword\">import</span> itchat,time</span><br><span class=\"line\"><span class=\"keyword\">from</span> itchat.content <span class=\"keyword\">import</span> TEXT</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">#其中hotReload=True参数是为了短暂记忆登录状态，避免每登录一次就扫一次二维码</span></span><br><span class=\"line\">itchat.auto_login(hotReload=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"comment\">#获取群聊信息</span></span><br><span class=\"line\">roomslist = itchat.get_chatrooms(update=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#插入excel</span></span><br><span class=\"line\"><span class=\"comment\">#创建excel表单</span></span><br><span class=\"line\">workbook=xlsxwriter.Workbook(<span class=\"string\">\"群聊用户名单.xlsx\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,len(roomslist)<span class=\"number\">-1</span>):</span><br><span class=\"line\">    <span class=\"comment\">#根据群聊名称在表单中创建工作薄</span></span><br><span class=\"line\">    worksheet=workbook.add_worksheet(roomslist[i][<span class=\"string\">'NickName'</span>])</span><br><span class=\"line\">    <span class=\"comment\">#添加表头</span></span><br><span class=\"line\">    worksheet.write(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"string\">\"微信名称\"</span>)</span><br><span class=\"line\">    worksheet.write(<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"string\">\"群备注\"</span>)</span><br><span class=\"line\">    <span class=\"comment\">#获取群聊用户列表</span></span><br><span class=\"line\">    myroom=itchat.search_chatrooms(name=roomslist[i][<span class=\"string\">'NickName'</span>])</span><br><span class=\"line\">    <span class=\"comment\">#获取群聊名称</span></span><br><span class=\"line\">    gsp=itchat.update_chatroom(myroom[<span class=\"number\">0</span>][<span class=\"string\">'UserName'</span>], detailedMember=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    print(<span class=\"string\">\"群名：&#123;&#125; \\t 人数：&#123;&#125;\"</span>.format(roomslist[i][<span class=\"string\">'NickName'</span>],len(gsp[<span class=\"string\">'MemberList'</span>])))</span><br><span class=\"line\"></span><br><span class=\"line\">    nickname=[]</span><br><span class=\"line\">    displayname=[]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> gsp[<span class=\"string\">'MemberList'</span>]:</span><br><span class=\"line\">        nickname.append(c[<span class=\"string\">'NickName'</span>])</span><br><span class=\"line\">        displayname.append(c[<span class=\"string\">'DisplayName'</span>])</span><br><span class=\"line\">    <span class=\"comment\">#将用户信息写入相应的工作薄中</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(len(gsp[<span class=\"string\">'MemberList'</span>])):</span><br><span class=\"line\">        worksheet.write(x+<span class=\"number\">1</span>,<span class=\"number\">0</span>,nickname[x])</span><br><span class=\"line\">        worksheet.write(x+<span class=\"number\">1</span>,<span class=\"number\">1</span>,displayname[x])</span><br><span class=\"line\">    <span class=\"comment\">#输出一点提示信息</span></span><br><span class=\"line\">    print(<span class=\"string\">\"sheet &#123;&#125; finished\"</span>.format(roomslist[i][<span class=\"string\">'NickName'</span>]))</span><br><span class=\"line\"><span class=\"comment\">#关闭工作表</span></span><br><span class=\"line\">workbook.close()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-中间出现的问题\"><a href=\"#3-中间出现的问题\" class=\"headerlink\" title=\"3. 中间出现的问题\"></a>3. 中间出现的问题</h4><ul>\n<li>有的微信号无法登录</li>\n</ul>\n<blockquote>\n<p>好像说是新申请的无法登录，可以试试能否登录网页版微信，能登录网页版微信就可以登录itchat，反之一样</p>\n</blockquote>\n<ul>\n<li>群聊显示不全</li>\n</ul>\n<blockquote>\n<p>这里的群聊默认是只显示已经保存在通讯录里面的群聊</p>\n</blockquote>"},{"title":"Hexo 提交报错","date":"2019-08-22T15:47:09.000Z","_content":"\n> hexo在编译的时候报错TypeError: Cannot read property 'count' of undefined\n\n<!-- more -->\n\n#### 报错的具体信息\n\n```shell\nFATAL Something's wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html\nTypeError: Cannot read property 'count' of undefined\n    at Hexo.module.exports (/home/guo/Work/hexo/node_modules/hexo-baidu-url-submit/lib/generator.js:4:41)\n    at Hexo.tryCatcher (/home/guo/Work/hexo/node_modules/bluebird/js/release/util.js:16:23)\n    at Hexo.<anonymous> (/home/guo/Work/hexo/node_modules/bluebird/js/release/method.js:15:34)\n    at /home/guo/Work/hexo/node_modules/hexo/lib/hexo/index.js:318:20\n    at tryCatcher (/home/guo/Work/hexo/node_modules/bluebird/js/release/util.js:16:23)\n    at MappingPromiseArray._promiseFulfilled (/home/guo/Work/hexo/node_modules/bluebird/js/release/map.js:61:38)\n    at MappingPromiseArray.PromiseArray._iterate (/home/guo/Work/hexo/node_modules/bluebird/js/release/promise_array.js:114:31)\n    at MappingPromiseArray.init (/home/guo/Work/hexo/node_modules/bluebird/js/release/promise_array.js:78:10)\n    at MappingPromiseArray._asyncInit (/home/guo/Work/hexo/node_modules/bluebird/js/release/map.js:30:10)\n    at _drainQueueStep (/home/guo/Work/hexo/node_modules/bluebird/js/release/async.js:142:12)\n    at _drainQueue (/home/guo/Work/hexo/node_modules/bluebird/js/release/async.js:131:9)\n    at Async._drainQueues (/home/guo/Work/hexo/node_modules/bluebird/js/release/async.js:147:5)\n    at Immediate.Async.drainQueues [as _onImmediate] (/home/guo/Work/hexo/node_modules/bluebird/js/release/async.js:17:14)\n    at processImmediate (internal/timers.js:439:21)\n\n```\n\n#### 解决方法是删除``` hexo-baidu-url-submit```\n\n```shell\nnpm remove hexo-baidu-url-submit\n```\n\n然后清除配置，重新编译提交就可以了\n\n```shell\nhexo clean\nhexo g\nhexo d\n```\n\n\n\n","source":"_posts/hexo报错.md","raw":"---\ntitle: hexo 提交报错\ndate: 2019-08-22 23:47:09\ncategories: 经验\ntags:\n- hexo\n- Next\n---\n\n> hexo在编译的时候报错TypeError: Cannot read property 'count' of undefined\n\n<!-- more -->\n\n#### 报错的具体信息\n\n```shell\nFATAL Something's wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html\nTypeError: Cannot read property 'count' of undefined\n    at Hexo.module.exports (/home/guo/Work/hexo/node_modules/hexo-baidu-url-submit/lib/generator.js:4:41)\n    at Hexo.tryCatcher (/home/guo/Work/hexo/node_modules/bluebird/js/release/util.js:16:23)\n    at Hexo.<anonymous> (/home/guo/Work/hexo/node_modules/bluebird/js/release/method.js:15:34)\n    at /home/guo/Work/hexo/node_modules/hexo/lib/hexo/index.js:318:20\n    at tryCatcher (/home/guo/Work/hexo/node_modules/bluebird/js/release/util.js:16:23)\n    at MappingPromiseArray._promiseFulfilled (/home/guo/Work/hexo/node_modules/bluebird/js/release/map.js:61:38)\n    at MappingPromiseArray.PromiseArray._iterate (/home/guo/Work/hexo/node_modules/bluebird/js/release/promise_array.js:114:31)\n    at MappingPromiseArray.init (/home/guo/Work/hexo/node_modules/bluebird/js/release/promise_array.js:78:10)\n    at MappingPromiseArray._asyncInit (/home/guo/Work/hexo/node_modules/bluebird/js/release/map.js:30:10)\n    at _drainQueueStep (/home/guo/Work/hexo/node_modules/bluebird/js/release/async.js:142:12)\n    at _drainQueue (/home/guo/Work/hexo/node_modules/bluebird/js/release/async.js:131:9)\n    at Async._drainQueues (/home/guo/Work/hexo/node_modules/bluebird/js/release/async.js:147:5)\n    at Immediate.Async.drainQueues [as _onImmediate] (/home/guo/Work/hexo/node_modules/bluebird/js/release/async.js:17:14)\n    at processImmediate (internal/timers.js:439:21)\n\n```\n\n#### 解决方法是删除``` hexo-baidu-url-submit```\n\n```shell\nnpm remove hexo-baidu-url-submit\n```\n\n然后清除配置，重新编译提交就可以了\n\n```shell\nhexo clean\nhexo g\nhexo d\n```\n\n\n\n","slug":"hexo报错","published":1,"updated":"2020-06-27T10:19:47.866Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcphzdvn000e3jmf88ulc9e9","content":"<blockquote>\n<p>hexo在编译的时候报错TypeError: Cannot read property ‘count’ of undefined</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<h4 id=\"报错的具体信息\"><a href=\"#报错的具体信息\" class=\"headerlink\" title=\"报错的具体信息\"></a>报错的具体信息</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FATAL Something's wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class=\"line\">TypeError: Cannot read property 'count' of undefined</span><br><span class=\"line\">    at Hexo.module.exports (/home/guo/Work/hexo/node_modules/hexo-baidu-url-submit/lib/generator.js:4:41)</span><br><span class=\"line\">    at Hexo.tryCatcher (/home/guo/Work/hexo/node_modules/bluebird/js/release/util.js:16:23)</span><br><span class=\"line\">    at Hexo.&lt;anonymous&gt; (/home/guo/Work/hexo/node_modules/bluebird/js/release/method.js:15:34)</span><br><span class=\"line\">    at /home/guo/Work/hexo/node_modules/hexo/lib/hexo/index.js:318:20</span><br><span class=\"line\">    at tryCatcher (/home/guo/Work/hexo/node_modules/bluebird/js/release/util.js:16:23)</span><br><span class=\"line\">    at MappingPromiseArray._promiseFulfilled (/home/guo/Work/hexo/node_modules/bluebird/js/release/map.js:61:38)</span><br><span class=\"line\">    at MappingPromiseArray.PromiseArray._iterate (/home/guo/Work/hexo/node_modules/bluebird/js/release/promise_array.js:114:31)</span><br><span class=\"line\">    at MappingPromiseArray.init (/home/guo/Work/hexo/node_modules/bluebird/js/release/promise_array.js:78:10)</span><br><span class=\"line\">    at MappingPromiseArray._asyncInit (/home/guo/Work/hexo/node_modules/bluebird/js/release/map.js:30:10)</span><br><span class=\"line\">    at _drainQueueStep (/home/guo/Work/hexo/node_modules/bluebird/js/release/async.js:142:12)</span><br><span class=\"line\">    at _drainQueue (/home/guo/Work/hexo/node_modules/bluebird/js/release/async.js:131:9)</span><br><span class=\"line\">    at Async._drainQueues (/home/guo/Work/hexo/node_modules/bluebird/js/release/async.js:147:5)</span><br><span class=\"line\">    at Immediate.Async.drainQueues [as _onImmediate] (/home/guo/Work/hexo/node_modules/bluebird/js/release/async.js:17:14)</span><br><span class=\"line\">    at processImmediate (internal/timers.js:439:21)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"解决方法是删除\"><a href=\"#解决方法是删除\" class=\"headerlink\" title=\"解决方法是删除\"></a>解决方法是删除<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">```shell</span><br><span class=\"line\">npm remove hexo-baidu-url-submit</span><br></pre></td></tr></table></figure></h4><p>然后清除配置，重新编译提交就可以了</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"length":1676,"excerpt":"<blockquote>\n<p>hexo在编译的时候报错TypeError: Cannot read property ‘count’ of undefined</p>\n</blockquote>","more":"<h4 id=\"报错的具体信息\"><a href=\"#报错的具体信息\" class=\"headerlink\" title=\"报错的具体信息\"></a>报错的具体信息</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FATAL Something's wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class=\"line\">TypeError: Cannot read property 'count' of undefined</span><br><span class=\"line\">    at Hexo.module.exports (/home/guo/Work/hexo/node_modules/hexo-baidu-url-submit/lib/generator.js:4:41)</span><br><span class=\"line\">    at Hexo.tryCatcher (/home/guo/Work/hexo/node_modules/bluebird/js/release/util.js:16:23)</span><br><span class=\"line\">    at Hexo.&lt;anonymous&gt; (/home/guo/Work/hexo/node_modules/bluebird/js/release/method.js:15:34)</span><br><span class=\"line\">    at /home/guo/Work/hexo/node_modules/hexo/lib/hexo/index.js:318:20</span><br><span class=\"line\">    at tryCatcher (/home/guo/Work/hexo/node_modules/bluebird/js/release/util.js:16:23)</span><br><span class=\"line\">    at MappingPromiseArray._promiseFulfilled (/home/guo/Work/hexo/node_modules/bluebird/js/release/map.js:61:38)</span><br><span class=\"line\">    at MappingPromiseArray.PromiseArray._iterate (/home/guo/Work/hexo/node_modules/bluebird/js/release/promise_array.js:114:31)</span><br><span class=\"line\">    at MappingPromiseArray.init (/home/guo/Work/hexo/node_modules/bluebird/js/release/promise_array.js:78:10)</span><br><span class=\"line\">    at MappingPromiseArray._asyncInit (/home/guo/Work/hexo/node_modules/bluebird/js/release/map.js:30:10)</span><br><span class=\"line\">    at _drainQueueStep (/home/guo/Work/hexo/node_modules/bluebird/js/release/async.js:142:12)</span><br><span class=\"line\">    at _drainQueue (/home/guo/Work/hexo/node_modules/bluebird/js/release/async.js:131:9)</span><br><span class=\"line\">    at Async._drainQueues (/home/guo/Work/hexo/node_modules/bluebird/js/release/async.js:147:5)</span><br><span class=\"line\">    at Immediate.Async.drainQueues [as _onImmediate] (/home/guo/Work/hexo/node_modules/bluebird/js/release/async.js:17:14)</span><br><span class=\"line\">    at processImmediate (internal/timers.js:439:21)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"解决方法是删除\"><a href=\"#解决方法是删除\" class=\"headerlink\" title=\"解决方法是删除\"></a>解决方法是删除<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">```shell</span><br><span class=\"line\">npm remove hexo-baidu-url-submit</span><br></pre></td></tr></table></figure></h4><p>然后清除配置，重新编译提交就可以了</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>"},{"title":".Pkl文件文件读取","date":"2019-08-19T14:58:56.000Z","_content":"\n> .pkl文件是Python的文件格式\n\n<!--more-->\n\n##### 1. 根据网上查阅的读取方法\n\n```pyth\nimport pickle\nfile=open(\"./dataset-cornell-length10-filter1-vocabSize40000.pkl\",\"rb\")\ndata=pickle.load(file)\nprint(data)\nfile.close()\n```\n\n在这里，注意在读取的使用的是\"rb\",也就是二进制文件格式，而\"r\"是普通格式的读取\n\n用print输出结果显示是这样的\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190819234548841.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70)\n\n。。。。。。。好吧，全是数字，这怎么看呢\n\n##### 2. 再来看看第二种\n\n```pyth\nimport pickle\nimport pprint\n\nfile=open(\"./dataset-cornell-length10-filter1-vocabSize40000.pkl\",\"rb\")\ndata=pickle.load(file)\npprint.pprint(data)\nfile.close()\n```\n\n好吧，读取的方式是一样的，但是显示出来的是不一样的，看看显示\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190819234601553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70)\n\n明显这个才是我们可以的认识的，恩，就是这样","source":"_posts/pkl文件读取.md","raw":"---\ntitle: .pkl文件文件读取\ndate: 2019-08-19 22:58:56\ncategories: Python\ntags:  \n- Python\n- pkl\n---\n\n> .pkl文件是Python的文件格式\n\n<!--more-->\n\n##### 1. 根据网上查阅的读取方法\n\n```pyth\nimport pickle\nfile=open(\"./dataset-cornell-length10-filter1-vocabSize40000.pkl\",\"rb\")\ndata=pickle.load(file)\nprint(data)\nfile.close()\n```\n\n在这里，注意在读取的使用的是\"rb\",也就是二进制文件格式，而\"r\"是普通格式的读取\n\n用print输出结果显示是这样的\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190819234548841.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70)\n\n。。。。。。。好吧，全是数字，这怎么看呢\n\n##### 2. 再来看看第二种\n\n```pyth\nimport pickle\nimport pprint\n\nfile=open(\"./dataset-cornell-length10-filter1-vocabSize40000.pkl\",\"rb\")\ndata=pickle.load(file)\npprint.pprint(data)\nfile.close()\n```\n\n好吧，读取的方式是一样的，但是显示出来的是不一样的，看看显示\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190819234601553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70)\n\n明显这个才是我们可以的认识的，恩，就是这样","slug":"pkl文件读取","published":1,"updated":"2020-06-27T10:19:47.898Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcphzdvo000f3jmf69dpmh19","content":"<blockquote>\n<p>.pkl文件是Python的文件格式</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<h5 id=\"1-根据网上查阅的读取方法\"><a href=\"#1-根据网上查阅的读取方法\" class=\"headerlink\" title=\"1. 根据网上查阅的读取方法\"></a>1. 根据网上查阅的读取方法</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import pickle</span><br><span class=\"line\">file=open(&quot;./dataset-cornell-length10-filter1-vocabSize40000.pkl&quot;,&quot;rb&quot;)</span><br><span class=\"line\">data=pickle.load(file)</span><br><span class=\"line\">print(data)</span><br><span class=\"line\">file.close()</span><br></pre></td></tr></table></figure>\n\n<p>在这里，注意在读取的使用的是”rb”,也就是二进制文件格式，而”r”是普通格式的读取</p>\n<p>用print输出结果显示是这样的</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190819234548841.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>。。。。。。。好吧，全是数字，这怎么看呢</p>\n<h5 id=\"2-再来看看第二种\"><a href=\"#2-再来看看第二种\" class=\"headerlink\" title=\"2. 再来看看第二种\"></a>2. 再来看看第二种</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import pickle</span><br><span class=\"line\">import pprint</span><br><span class=\"line\"></span><br><span class=\"line\">file=open(&quot;./dataset-cornell-length10-filter1-vocabSize40000.pkl&quot;,&quot;rb&quot;)</span><br><span class=\"line\">data=pickle.load(file)</span><br><span class=\"line\">pprint.pprint(data)</span><br><span class=\"line\">file.close()</span><br></pre></td></tr></table></figure>\n\n<p>好吧，读取的方式是一样的，但是显示出来的是不一样的，看看显示</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190819234601553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>明显这个才是我们可以的认识的，恩，就是这样</p>\n","site":{"data":{}},"length":506,"excerpt":"<blockquote>\n<p>.pkl文件是Python的文件格式</p>\n</blockquote>","more":"<h5 id=\"1-根据网上查阅的读取方法\"><a href=\"#1-根据网上查阅的读取方法\" class=\"headerlink\" title=\"1. 根据网上查阅的读取方法\"></a>1. 根据网上查阅的读取方法</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import pickle</span><br><span class=\"line\">file=open(&quot;./dataset-cornell-length10-filter1-vocabSize40000.pkl&quot;,&quot;rb&quot;)</span><br><span class=\"line\">data=pickle.load(file)</span><br><span class=\"line\">print(data)</span><br><span class=\"line\">file.close()</span><br></pre></td></tr></table></figure>\n\n<p>在这里，注意在读取的使用的是”rb”,也就是二进制文件格式，而”r”是普通格式的读取</p>\n<p>用print输出结果显示是这样的</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190819234548841.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>。。。。。。。好吧，全是数字，这怎么看呢</p>\n<h5 id=\"2-再来看看第二种\"><a href=\"#2-再来看看第二种\" class=\"headerlink\" title=\"2. 再来看看第二种\"></a>2. 再来看看第二种</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import pickle</span><br><span class=\"line\">import pprint</span><br><span class=\"line\"></span><br><span class=\"line\">file=open(&quot;./dataset-cornell-length10-filter1-vocabSize40000.pkl&quot;,&quot;rb&quot;)</span><br><span class=\"line\">data=pickle.load(file)</span><br><span class=\"line\">pprint.pprint(data)</span><br><span class=\"line\">file.close()</span><br></pre></td></tr></table></figure>\n\n<p>好吧，读取的方式是一样的，但是显示出来的是不一样的，看看显示</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190819234601553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>明显这个才是我们可以的认识的，恩，就是这样</p>"},{"title":"Tf Faster-Rcnn(一)实现目标检测(cpu)项目环境配置","date":"2019-08-17T11:56:38.000Z","_content":"\n\n> 系统环境说明：Ubuntu18.04\n<!--more-->\n\n- 下载项目\n\n  ```\n  git clone https://github.com/endernewton/tf-faster-rcnn.git\n  ```\n\n- 编译,配置相应的运行环境\n\n  - 安装Cpython (这里相应的模块需要根据个人平时的使用下载，有很多的本人电脑已经存在，便没有一一列举出来)\n\n    ```shell\n    sudo apt-get install cpython\n    ```\n\n  - 修改项目，改为cpu运行\n\n    【1】打开lib->model->config.py,查看第236行(本人的)，实际修改是将__C.USE_GPU_NMS的値由True修改为False.\n    作用：禁用gpu,使用cpu进行计算\n\n    【2】打开lib->model->nms_wrapper.py，进行注释，第12行\n\n    【3】打开lib->setup.py，进行注释，第55行，第120-136行\n\n  - 进入项目的lib目录中执行 \n    ```shell\n     make ```\n  ```\n    \n  - 安装Python COCO API,使用coco数据集\n\n    ```shell\n    cd data\n    git clone https://github.com/pdollar/coco.git\t\t\n    cd coco/PythonAPI\n    make\n    ```\n\n- 运行demo和训练\n\n  - 下载预训练模型[voc_0712_80k-110k.tgz](https://pan.baidu.com/s/1kWkF3fT )\n    放在data文件目录下，解压.\n\n  - 建立训练模型的软连接,data文件目录下进行\n\n    ```shell\n    NET=res101\n    TRAIN_IMDB=voc_2007_trainval+voc_2012_trainval\n    mkdir -p output/${NET}/${TRAIN_IMDB}\n    cd output/${NET}/${TRAIN_IMDB}\n    ln -s ../../../voc_2007_trainval+voc_2012_trainval ./default\n    cd ../../..\n    ```\n\n  - 运行demo\n\n    data目录文件下\n\n    ```python\n    ../tools/demo.py\n    ```\n\n","source":"_posts/tf-faster-rcnn-一-实现目标检测-cpu-项目环境配置.md","raw":"---\ntitle: tf faster-rcnn(一)实现目标检测(cpu)项目环境配置\ndate: 2019-08-17 19:56:38\ncategories: 计算机视觉\ntags: \n- tf faster-rcnn \n- 目标检测 \n- 深度学习\n---\n\n\n> 系统环境说明：Ubuntu18.04\n<!--more-->\n\n- 下载项目\n\n  ```\n  git clone https://github.com/endernewton/tf-faster-rcnn.git\n  ```\n\n- 编译,配置相应的运行环境\n\n  - 安装Cpython (这里相应的模块需要根据个人平时的使用下载，有很多的本人电脑已经存在，便没有一一列举出来)\n\n    ```shell\n    sudo apt-get install cpython\n    ```\n\n  - 修改项目，改为cpu运行\n\n    【1】打开lib->model->config.py,查看第236行(本人的)，实际修改是将__C.USE_GPU_NMS的値由True修改为False.\n    作用：禁用gpu,使用cpu进行计算\n\n    【2】打开lib->model->nms_wrapper.py，进行注释，第12行\n\n    【3】打开lib->setup.py，进行注释，第55行，第120-136行\n\n  - 进入项目的lib目录中执行 \n    ```shell\n     make ```\n  ```\n    \n  - 安装Python COCO API,使用coco数据集\n\n    ```shell\n    cd data\n    git clone https://github.com/pdollar/coco.git\t\t\n    cd coco/PythonAPI\n    make\n    ```\n\n- 运行demo和训练\n\n  - 下载预训练模型[voc_0712_80k-110k.tgz](https://pan.baidu.com/s/1kWkF3fT )\n    放在data文件目录下，解压.\n\n  - 建立训练模型的软连接,data文件目录下进行\n\n    ```shell\n    NET=res101\n    TRAIN_IMDB=voc_2007_trainval+voc_2012_trainval\n    mkdir -p output/${NET}/${TRAIN_IMDB}\n    cd output/${NET}/${TRAIN_IMDB}\n    ln -s ../../../voc_2007_trainval+voc_2012_trainval ./default\n    cd ../../..\n    ```\n\n  - 运行demo\n\n    data目录文件下\n\n    ```python\n    ../tools/demo.py\n    ```\n\n","slug":"tf-faster-rcnn-一-实现目标检测-cpu-项目环境配置","published":1,"updated":"2020-06-27T10:19:47.898Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcphzdvp000j3jmfefrq8typ","content":"<blockquote>\n<p>系统环境说明：Ubuntu18.04</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<ul>\n<li><p>下载项目</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"keyword\">clone</span> <span class=\"title\">https</span>://github.com/endernewton/tf-faster-rcnn.git</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编译,配置相应的运行环境</p>\n<ul>\n<li><p>安装Cpython (这里相应的模块需要根据个人平时的使用下载，有很多的本人电脑已经存在，便没有一一列举出来)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install cpython</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改项目，改为cpu运行</p>\n<p>【1】打开lib-&gt;model-&gt;config.py,查看第236行(本人的)，实际修改是将__C.USE_GPU_NMS的値由True修改为False.<br>作用：禁用gpu,使用cpu进行计算</p>\n<p>【2】打开lib-&gt;model-&gt;nms_wrapper.py，进行注释，第12行</p>\n<p>【3】打开lib-&gt;setup.py，进行注释，第55行，第120-136行</p>\n</li>\n<li><p>进入项目的lib目录中执行 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">- 安装Python COCO API,使用coco数据集</span><br><span class=\"line\"></span><br><span class=\"line\">  ```<span class=\"keyword\">shell</span></span><br><span class=\"line\">  <span class=\"keyword\">cd</span> data</span><br><span class=\"line\">  git clone http<span class=\"variable\">s:</span>//github.<span class=\"keyword\">com</span>/pdollar/coco.git\t\t</span><br><span class=\"line\">  <span class=\"keyword\">cd</span> coco/PythonAPI</span><br><span class=\"line\">  <span class=\"keyword\">make</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行demo和训练</p>\n<ul>\n<li><p>下载预训练模型<a href=\"https://pan.baidu.com/s/1kWkF3fT\" target=\"_blank\" rel=\"noopener\">voc_0712_80k-110k.tgz</a><br>放在data文件目录下，解压.</p>\n</li>\n<li><p>建立训练模型的软连接,data文件目录下进行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NET=res101</span><br><span class=\"line\">TRAIN_IMDB=voc_2007_trainval+voc_2012_trainval</span><br><span class=\"line\">mkdir -p output/$&#123;NET&#125;/$&#123;TRAIN_IMDB&#125;</span><br><span class=\"line\">cd output/$&#123;NET&#125;/$&#123;TRAIN_IMDB&#125;</span><br><span class=\"line\">ln -s ../../../voc_2007_trainval+voc_2012_trainval ./default</span><br><span class=\"line\">cd ../../..</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行demo</p>\n<p>data目录文件下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">../tools/demo.py</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"length":898,"excerpt":"<blockquote>\n<p>系统环境说明：Ubuntu18.04</p>\n</blockquote>","more":"<ul>\n<li><p>下载项目</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"keyword\">clone</span> <span class=\"title\">https</span>://github.com/endernewton/tf-faster-rcnn.git</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编译,配置相应的运行环境</p>\n<ul>\n<li><p>安装Cpython (这里相应的模块需要根据个人平时的使用下载，有很多的本人电脑已经存在，便没有一一列举出来)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install cpython</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改项目，改为cpu运行</p>\n<p>【1】打开lib-&gt;model-&gt;config.py,查看第236行(本人的)，实际修改是将__C.USE_GPU_NMS的値由True修改为False.<br>作用：禁用gpu,使用cpu进行计算</p>\n<p>【2】打开lib-&gt;model-&gt;nms_wrapper.py，进行注释，第12行</p>\n<p>【3】打开lib-&gt;setup.py，进行注释，第55行，第120-136行</p>\n</li>\n<li><p>进入项目的lib目录中执行 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">- 安装Python COCO API,使用coco数据集</span><br><span class=\"line\"></span><br><span class=\"line\">  ```<span class=\"keyword\">shell</span></span><br><span class=\"line\">  <span class=\"keyword\">cd</span> data</span><br><span class=\"line\">  git clone http<span class=\"variable\">s:</span>//github.<span class=\"keyword\">com</span>/pdollar/coco.git\t\t</span><br><span class=\"line\">  <span class=\"keyword\">cd</span> coco/PythonAPI</span><br><span class=\"line\">  <span class=\"keyword\">make</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行demo和训练</p>\n<ul>\n<li><p>下载预训练模型<a href=\"https://pan.baidu.com/s/1kWkF3fT\" target=\"_blank\" rel=\"noopener\">voc_0712_80k-110k.tgz</a><br>放在data文件目录下，解压.</p>\n</li>\n<li><p>建立训练模型的软连接,data文件目录下进行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NET=res101</span><br><span class=\"line\">TRAIN_IMDB=voc_2007_trainval+voc_2012_trainval</span><br><span class=\"line\">mkdir -p output/$&#123;NET&#125;/$&#123;TRAIN_IMDB&#125;</span><br><span class=\"line\">cd output/$&#123;NET&#125;/$&#123;TRAIN_IMDB&#125;</span><br><span class=\"line\">ln -s ../../../voc_2007_trainval+voc_2012_trainval ./default</span><br><span class=\"line\">cd ../../..</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行demo</p>\n<p>data目录文件下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">../tools/demo.py</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ul>"},{"title":"Tf Faster-Rcnn(二)实现目标检测(cpu)模型测试","date":"2019-08-17T12:01:58.000Z","_content":"\n> 继CPU下运行demo之后，现在开始使用res101进行voc数据的训练\n\n<!--more-->\n\n(1)在tf-faster-rcnn根目录下，执行：\n```shell\nNET=res101\nTRAIN_IMDB=voc_2007_trainval+voc_2012_trainval\nmkdir -p output/${NET}/${TRAIN_IMDB}\ncd output/${NET}/${TRAIN_IMDB}\nln -s ../../../data/voc_2007_trainval+voc_2012_trainval ./default\ncd ../../..\n```\n(2)下载res101模型，并建立软连接\n```shell\nmkdir -p data/imagenet_weights\ncd data/imagenet_weights\nwget -v http://download.tensorflow.org/models/resnet_v1_101_2016_08_28.tar.gz\ntar -xzvf resnet_v1_101_2016_08_28.tar.gz\nmv resnet_v1_101.ckpt res101.ckpt\ncd ../..\n```\n(3)下载[voc数据集](https://pan.baidu.com/s/16cFYzwuIDaOc09ExReHHTA)（提取码: 3a8y），并修改名称\n```shell\nmv VOCdevkit VOCdevkit2007\n```\n(4)运行（运行的参数中是GPU运行的参数设置，但是在经过第一次的修改后，为gpu_id参数设置为0的话，也是可以运行的）\n```shell\n./experiments/scripts/test_faster_rcnn.sh 0 pascal_voc_0712 res101\n```\n\n\n\n","source":"_posts/tf-faster-rcnn-二-实现目标检测-cpu-模型测试.md","raw":"---\ntitle: tf faster-rcnn(二)实现目标检测(cpu)模型测试\ndate: 2019-08-17 20:01:58\ncategories: 计算机视觉\ntags: \n- tf faster-rcnn \n- 目标检测 \n- 深度学习\n---\n\n> 继CPU下运行demo之后，现在开始使用res101进行voc数据的训练\n\n<!--more-->\n\n(1)在tf-faster-rcnn根目录下，执行：\n```shell\nNET=res101\nTRAIN_IMDB=voc_2007_trainval+voc_2012_trainval\nmkdir -p output/${NET}/${TRAIN_IMDB}\ncd output/${NET}/${TRAIN_IMDB}\nln -s ../../../data/voc_2007_trainval+voc_2012_trainval ./default\ncd ../../..\n```\n(2)下载res101模型，并建立软连接\n```shell\nmkdir -p data/imagenet_weights\ncd data/imagenet_weights\nwget -v http://download.tensorflow.org/models/resnet_v1_101_2016_08_28.tar.gz\ntar -xzvf resnet_v1_101_2016_08_28.tar.gz\nmv resnet_v1_101.ckpt res101.ckpt\ncd ../..\n```\n(3)下载[voc数据集](https://pan.baidu.com/s/16cFYzwuIDaOc09ExReHHTA)（提取码: 3a8y），并修改名称\n```shell\nmv VOCdevkit VOCdevkit2007\n```\n(4)运行（运行的参数中是GPU运行的参数设置，但是在经过第一次的修改后，为gpu_id参数设置为0的话，也是可以运行的）\n```shell\n./experiments/scripts/test_faster_rcnn.sh 0 pascal_voc_0712 res101\n```\n\n\n\n","slug":"tf-faster-rcnn-二-实现目标检测-cpu-模型测试","published":1,"updated":"2020-06-27T10:19:47.914Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcphzdvq000k3jmfd6lavdma","content":"<blockquote>\n<p>继CPU下运行demo之后，现在开始使用res101进行voc数据的训练</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<p>(1)在tf-faster-rcnn根目录下，执行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NET=res101</span><br><span class=\"line\">TRAIN_IMDB=voc_2007_trainval+voc_2012_trainval</span><br><span class=\"line\">mkdir -p output/$&#123;NET&#125;/$&#123;TRAIN_IMDB&#125;</span><br><span class=\"line\">cd output/$&#123;NET&#125;/$&#123;TRAIN_IMDB&#125;</span><br><span class=\"line\">ln -s ../../../data/voc_2007_trainval+voc_2012_trainval ./default</span><br><span class=\"line\">cd ../../..</span><br></pre></td></tr></table></figure>\n\n<p>(2)下载res101模型，并建立软连接</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p data/imagenet_weights</span><br><span class=\"line\">cd data/imagenet_weights</span><br><span class=\"line\">wget -v http://download.tensorflow.org/models/resnet_v1_101_2016_08_28.tar.gz</span><br><span class=\"line\">tar -xzvf resnet_v1_101_2016_08_28.tar.gz</span><br><span class=\"line\">mv resnet_v1_101.ckpt res101.ckpt</span><br><span class=\"line\">cd ../..</span><br></pre></td></tr></table></figure>\n\n<p>(3)下载<a href=\"https://pan.baidu.com/s/16cFYzwuIDaOc09ExReHHTA\" target=\"_blank\" rel=\"noopener\">voc数据集</a>（提取码: 3a8y），并修改名称</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv VOCdevkit VOCdevkit2007</span><br></pre></td></tr></table></figure>\n\n<p>(4)运行（运行的参数中是GPU运行的参数设置，但是在经过第一次的修改后，为gpu_id参数设置为0的话，也是可以运行的）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./experiments/scripts/test_faster_rcnn.sh 0 pascal_voc_0712 res101</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"length":731,"excerpt":"<blockquote>\n<p>继CPU下运行demo之后，现在开始使用res101进行voc数据的训练</p>\n</blockquote>","more":"<p>(1)在tf-faster-rcnn根目录下，执行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NET=res101</span><br><span class=\"line\">TRAIN_IMDB=voc_2007_trainval+voc_2012_trainval</span><br><span class=\"line\">mkdir -p output/$&#123;NET&#125;/$&#123;TRAIN_IMDB&#125;</span><br><span class=\"line\">cd output/$&#123;NET&#125;/$&#123;TRAIN_IMDB&#125;</span><br><span class=\"line\">ln -s ../../../data/voc_2007_trainval+voc_2012_trainval ./default</span><br><span class=\"line\">cd ../../..</span><br></pre></td></tr></table></figure>\n\n<p>(2)下载res101模型，并建立软连接</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p data/imagenet_weights</span><br><span class=\"line\">cd data/imagenet_weights</span><br><span class=\"line\">wget -v http://download.tensorflow.org/models/resnet_v1_101_2016_08_28.tar.gz</span><br><span class=\"line\">tar -xzvf resnet_v1_101_2016_08_28.tar.gz</span><br><span class=\"line\">mv resnet_v1_101.ckpt res101.ckpt</span><br><span class=\"line\">cd ../..</span><br></pre></td></tr></table></figure>\n\n<p>(3)下载<a href=\"https://pan.baidu.com/s/16cFYzwuIDaOc09ExReHHTA\" target=\"_blank\" rel=\"noopener\">voc数据集</a>（提取码: 3a8y），并修改名称</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv VOCdevkit VOCdevkit2007</span><br></pre></td></tr></table></figure>\n\n<p>(4)运行（运行的参数中是GPU运行的参数设置，但是在经过第一次的修改后，为gpu_id参数设置为0的话，也是可以运行的）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./experiments/scripts/test_faster_rcnn.sh 0 pascal_voc_0712 res101</span><br></pre></td></tr></table></figure>"},{"title":"Ubuntu进入initramfs","date":"2020-06-30T16:14:06.000Z","_content":"\n> Ubuntu系统开机进入initramfs，可能是因为不正常的关闭系统造成的问题\n\n<!--more-->\n\n#### 解决方案\n\n##### 1、重启系统，进入Ubuntu(高级选项)，修复模式（recovery mode）\n\n##### 2、执行命令\n\n```powershell\nfsck -t ext4 /dev/sda4\n\n// 后面的/dev/sda4是进入recovery mode后，系统会提示哪个磁盘出现问题，选择相应的即可\n```\n\n##### 3、全选“yes”，最后重启即可\n\n","source":"_posts/ubuntu进入initramfs.md","raw":"---\ntitle: ubuntu进入initramfs\ndate: 2020-07-01 00:14:06\ncategories: 经验\ntags:\n- ubuntu\n- 系统错误\n- 经验\n---\n\n> Ubuntu系统开机进入initramfs，可能是因为不正常的关闭系统造成的问题\n\n<!--more-->\n\n#### 解决方案\n\n##### 1、重启系统，进入Ubuntu(高级选项)，修复模式（recovery mode）\n\n##### 2、执行命令\n\n```powershell\nfsck -t ext4 /dev/sda4\n\n// 后面的/dev/sda4是进入recovery mode后，系统会提示哪个磁盘出现问题，选择相应的即可\n```\n\n##### 3、全选“yes”，最后重启即可\n\n","slug":"ubuntu进入initramfs","published":1,"updated":"2020-06-30T16:26:14.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcphzdvs000o3jmfou1qlnrx","content":"<blockquote>\n<p>Ubuntu系统开机进入initramfs，可能是因为不正常的关闭系统造成的问题</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><h5 id=\"1、重启系统，进入Ubuntu-高级选项-，修复模式（recovery-mode）\"><a href=\"#1、重启系统，进入Ubuntu-高级选项-，修复模式（recovery-mode）\" class=\"headerlink\" title=\"1、重启系统，进入Ubuntu(高级选项)，修复模式（recovery mode）\"></a>1、重启系统，进入Ubuntu(高级选项)，修复模式（recovery mode）</h5><h5 id=\"2、执行命令\"><a href=\"#2、执行命令\" class=\"headerlink\" title=\"2、执行命令\"></a>2、执行命令</h5><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fsck -t ext4 /dev/sda4</span><br><span class=\"line\"></span><br><span class=\"line\">// 后面的/dev/sda4是进入recovery mode后，系统会提示哪个磁盘出现问题，选择相应的即可</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3、全选“yes”，最后重启即可\"><a href=\"#3、全选“yes”，最后重启即可\" class=\"headerlink\" title=\"3、全选“yes”，最后重启即可\"></a>3、全选“yes”，最后重启即可</h5>","site":{"data":{}},"length":190,"excerpt":"<blockquote>\n<p>Ubuntu系统开机进入initramfs，可能是因为不正常的关闭系统造成的问题</p>\n</blockquote>","more":"<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><h5 id=\"1、重启系统，进入Ubuntu-高级选项-，修复模式（recovery-mode）\"><a href=\"#1、重启系统，进入Ubuntu-高级选项-，修复模式（recovery-mode）\" class=\"headerlink\" title=\"1、重启系统，进入Ubuntu(高级选项)，修复模式（recovery mode）\"></a>1、重启系统，进入Ubuntu(高级选项)，修复模式（recovery mode）</h5><h5 id=\"2、执行命令\"><a href=\"#2、执行命令\" class=\"headerlink\" title=\"2、执行命令\"></a>2、执行命令</h5><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fsck -t ext4 /dev/sda4</span><br><span class=\"line\"></span><br><span class=\"line\">// 后面的/dev/sda4是进入recovery mode后，系统会提示哪个磁盘出现问题，选择相应的即可</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3、全选“yes”，最后重启即可\"><a href=\"#3、全选“yes”，最后重启即可\" class=\"headerlink\" title=\"3、全选“yes”，最后重启即可\"></a>3、全选“yes”，最后重启即可</h5>"},{"title":"/Usr/lib/cnf-Update-Db:notfound","date":"2020-06-30T16:38:53.000Z","_content":"\n>Ubuntu系统``` sudo apt update```报错\n\n\n\n<!--more-->\n\n#### 问题描述\n\n```powershell\nsudo apt update\n```\n\n终端执行之后，出现下面的报错信息\n\n```powershell\ndpkg:警告:无法找到软件包\"xxx\"的文件名列表文件\n\nsh: 1: /usr/lib/cnf-update-db: not found\n正在读取软件包列表... 完成\nE: Problem executing scripts APT::Update::Post-Invoke-Success 'if /usr/bin/test -w /var/lib/command-not-found/ -a -e /usr/lib/cnf-update-db; then /usr/lib/cnf-update-db > /dev/null; fi'\nE: Sub-process returned an error code\n```\n\n#### 解决方案\n\n1、网上的参考方案，没有解决问题\n\n```powershell\n sudo mv /var/lib/dpkg/info /var/lib/dpkg/info_old\n sudo mkdir /var/lib/dpkg/info\n sudo apt update && apt -f install \n sudo apt -f install \n sudo mv /var/lib/dpkg/info/* /var/lib/dpkg/info_old\n sudo rm -rf /var/lib/dpkg/info \n sudo mv /var/lib/dpkg/info_\n sudo mv /var/lib/dpkg/info_old /var/lib/dpkg/info\n sudo apt update\n```\n\n2、这是解决问题的方法\n\n```powershell\nsudo apt-get --reinstall install `dpkg --get-selections | grep '[[:space:]]install' | cut -f1`\n```\n\n\n\n","source":"_posts/usr-lib-cnf-update-db-notfound.md","raw":"---\ntitle: '/usr/lib/cnf-update-db:notfound'\ndate: 2020-07-01 00:38:53\ncategories: 经验\ntags:\n- 经验\n- Ubuntu更新报错\n---\n\n>Ubuntu系统``` sudo apt update```报错\n\n\n\n<!--more-->\n\n#### 问题描述\n\n```powershell\nsudo apt update\n```\n\n终端执行之后，出现下面的报错信息\n\n```powershell\ndpkg:警告:无法找到软件包\"xxx\"的文件名列表文件\n\nsh: 1: /usr/lib/cnf-update-db: not found\n正在读取软件包列表... 完成\nE: Problem executing scripts APT::Update::Post-Invoke-Success 'if /usr/bin/test -w /var/lib/command-not-found/ -a -e /usr/lib/cnf-update-db; then /usr/lib/cnf-update-db > /dev/null; fi'\nE: Sub-process returned an error code\n```\n\n#### 解决方案\n\n1、网上的参考方案，没有解决问题\n\n```powershell\n sudo mv /var/lib/dpkg/info /var/lib/dpkg/info_old\n sudo mkdir /var/lib/dpkg/info\n sudo apt update && apt -f install \n sudo apt -f install \n sudo mv /var/lib/dpkg/info/* /var/lib/dpkg/info_old\n sudo rm -rf /var/lib/dpkg/info \n sudo mv /var/lib/dpkg/info_\n sudo mv /var/lib/dpkg/info_old /var/lib/dpkg/info\n sudo apt update\n```\n\n2、这是解决问题的方法\n\n```powershell\nsudo apt-get --reinstall install `dpkg --get-selections | grep '[[:space:]]install' | cut -f1`\n```\n\n\n\n","slug":"usr-lib-cnf-update-db-notfound","published":1,"updated":"2020-07-04T01:57:05.540Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcphzdvt000r3jmfk153oguc","content":"<blockquote>\n<p>Ubuntu系统<figure class=\"highlight plain\"><figcaption><span>apt update```报错</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--more--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">#### 问题描述</span><br><span class=\"line\"></span><br><span class=\"line\">```powershell</span><br><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>终端执行之后，出现下面的报错信息</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dpkg:警告:无法找到软件包<span class=\"string\">\"xxx\"</span>的文件名列表文件</span><br><span class=\"line\"></span><br><span class=\"line\">sh: <span class=\"number\">1</span>: /usr/lib/cnf-update-db: not found</span><br><span class=\"line\">正在读取软件包列表... 完成</span><br><span class=\"line\">E: Problem executing scripts APT::Update::Post-Invoke-Success <span class=\"string\">'if /usr/bin/test -w /var/lib/command-not-found/ -a -e /usr/lib/cnf-update-db; then /usr/lib/cnf-update-db &gt; /dev/null; fi'</span></span><br><span class=\"line\">E: Sub-process returned an error code</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><p>1、网上的参考方案，没有解决问题</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mv /var/lib/dpkg/info /var/lib/dpkg/info_old</span><br><span class=\"line\">sudo mkdir /var/lib/dpkg/info</span><br><span class=\"line\">sudo apt update &amp;&amp; apt -f install </span><br><span class=\"line\">sudo apt -f install </span><br><span class=\"line\">sudo mv /var/lib/dpkg/info/* /var/lib/dpkg/info_old</span><br><span class=\"line\">sudo rm -rf /var/lib/dpkg/info </span><br><span class=\"line\">sudo mv /var/lib/dpkg/info_</span><br><span class=\"line\">sudo mv /var/lib/dpkg/info_old /var/lib/dpkg/info</span><br><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n\n<p>2、这是解决问题的方法</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get --reinstall install `dpkg --get-selections | grep <span class=\"string\">'[[:space:]]install'</span> | cut -f1`</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"length":851,"excerpt":"","more":"<blockquote>\n<p>Ubuntu系统<figure class=\"highlight plain\"><figcaption><span>apt update```报错</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--more--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">#### 问题描述</span><br><span class=\"line\"></span><br><span class=\"line\">```powershell</span><br><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>终端执行之后，出现下面的报错信息</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dpkg:警告:无法找到软件包<span class=\"string\">\"xxx\"</span>的文件名列表文件</span><br><span class=\"line\"></span><br><span class=\"line\">sh: <span class=\"number\">1</span>: /usr/lib/cnf-update-db: not found</span><br><span class=\"line\">正在读取软件包列表... 完成</span><br><span class=\"line\">E: Problem executing scripts APT::Update::Post-Invoke-Success <span class=\"string\">'if /usr/bin/test -w /var/lib/command-not-found/ -a -e /usr/lib/cnf-update-db; then /usr/lib/cnf-update-db &gt; /dev/null; fi'</span></span><br><span class=\"line\">E: Sub-process returned an error code</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><p>1、网上的参考方案，没有解决问题</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mv /var/lib/dpkg/info /var/lib/dpkg/info_old</span><br><span class=\"line\">sudo mkdir /var/lib/dpkg/info</span><br><span class=\"line\">sudo apt update &amp;&amp; apt -f install </span><br><span class=\"line\">sudo apt -f install </span><br><span class=\"line\">sudo mv /var/lib/dpkg/info/* /var/lib/dpkg/info_old</span><br><span class=\"line\">sudo rm -rf /var/lib/dpkg/info </span><br><span class=\"line\">sudo mv /var/lib/dpkg/info_</span><br><span class=\"line\">sudo mv /var/lib/dpkg/info_old /var/lib/dpkg/info</span><br><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n\n<p>2、这是解决问题的方法</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get --reinstall install `dpkg --get-selections | grep <span class=\"string\">'[[:space:]]install'</span> | cut -f1`</span><br></pre></td></tr></table></figure>\n\n"},{"title":"数据集整理","date":"2019-11-01T04:24:50.000Z","_content":"\n> 整理一份可供下载的数据集地址（持续更新ing）\n\n<!--more-->\n\n## 1. 自动驾驶领域\n\n- [KITTI](http://www.cvlibs.net/datasets/kitti/) \n- [Oxford RobotCar ](http://robotcar-dataset.robots.ox.ac.uk/datasets/)\n- [Udacity ](https://github.com/udacity/self-driving-car/tree/master/datasets)\n- [Baidu Apolloscapes](http://apolloscape.auto/  )\n- [Cityscape Dataset](https://www.cityscapes-dataset.com/)\n- [Waymo](https://waymo.com/open/download/)\n- [CVPR 2018 WAD视频分段挑战赛数据集](https://www.kaggle.com/c/cvpr-2018-autonomous-driving/data)\n\n- [Berkeley DeepDrive BDD100k](http://bdd-data.berkeley.edu/)\n- [Comma.ai](https://github.com/commaai/research)\n- [LISA](http://cvrr.ucsd.edu/LISA/datasets.html)\n\n## 2. 图像分类数据集\n\n- [MNIST](http://yann.lecun.com/exdb/mnist/index.html)\n- [ImageNet](http://www.image-net.org/about-stats)\n- [COCO](http://mscoco.org/)\n- [PASCAL VOC](http://host.robots.ox.ac.uk/pascal/VOC/voc2012/index.html)\n- [CIFAR](http://www.cs.toronto.edu/~kriz/cifar.html)\n- [Open Image](https://github.com/openimages/dataset)\n- [Youtube-8M](https://research.google.com/youtube8m/)\n\n## 3. 目标检测数据集\n\n- [Pascal VOC](https://pjreddie.com/projects/pascal-voc-dataset-mirror/)\n\n  此处提供一个百度网盘链接: https://pan.baidu.com/s/1w4B63OlS7I38hrNx6ZcQTw  密码: sllv\n\n- [COCO](http://mscoco.org/)\n\n## 4. 语义分割\n\n- [CamVid](http://mi.eng.cam.ac.uk/projects/segnet/)\n- [PascalVOC 2012](http://host.robots.ox.ac.uk/pascal/VOC/voc2012/)\n- [NYUDv2](http://cs.nyu.edu/~silberman/datasets/nyu_depth_v2.html)\n- [Cityscapes](https://www.cityscapes-dataset.com/)\n- [Sun-RGBD](http://rgbd.cs.princeton.edu/)\n- [MS COCO](http://mscoco.org/)\n- [ADE20K](http://groups.csail.mit.edu/vision/datasets/ADE20K/)","source":"_posts/数据集整理.md","raw":"---\ntitle: 数据集整理\ndate: 2019-11-01 12:24:50\ncategories: \ntags:\n---\n\n> 整理一份可供下载的数据集地址（持续更新ing）\n\n<!--more-->\n\n## 1. 自动驾驶领域\n\n- [KITTI](http://www.cvlibs.net/datasets/kitti/) \n- [Oxford RobotCar ](http://robotcar-dataset.robots.ox.ac.uk/datasets/)\n- [Udacity ](https://github.com/udacity/self-driving-car/tree/master/datasets)\n- [Baidu Apolloscapes](http://apolloscape.auto/  )\n- [Cityscape Dataset](https://www.cityscapes-dataset.com/)\n- [Waymo](https://waymo.com/open/download/)\n- [CVPR 2018 WAD视频分段挑战赛数据集](https://www.kaggle.com/c/cvpr-2018-autonomous-driving/data)\n\n- [Berkeley DeepDrive BDD100k](http://bdd-data.berkeley.edu/)\n- [Comma.ai](https://github.com/commaai/research)\n- [LISA](http://cvrr.ucsd.edu/LISA/datasets.html)\n\n## 2. 图像分类数据集\n\n- [MNIST](http://yann.lecun.com/exdb/mnist/index.html)\n- [ImageNet](http://www.image-net.org/about-stats)\n- [COCO](http://mscoco.org/)\n- [PASCAL VOC](http://host.robots.ox.ac.uk/pascal/VOC/voc2012/index.html)\n- [CIFAR](http://www.cs.toronto.edu/~kriz/cifar.html)\n- [Open Image](https://github.com/openimages/dataset)\n- [Youtube-8M](https://research.google.com/youtube8m/)\n\n## 3. 目标检测数据集\n\n- [Pascal VOC](https://pjreddie.com/projects/pascal-voc-dataset-mirror/)\n\n  此处提供一个百度网盘链接: https://pan.baidu.com/s/1w4B63OlS7I38hrNx6ZcQTw  密码: sllv\n\n- [COCO](http://mscoco.org/)\n\n## 4. 语义分割\n\n- [CamVid](http://mi.eng.cam.ac.uk/projects/segnet/)\n- [PascalVOC 2012](http://host.robots.ox.ac.uk/pascal/VOC/voc2012/)\n- [NYUDv2](http://cs.nyu.edu/~silberman/datasets/nyu_depth_v2.html)\n- [Cityscapes](https://www.cityscapes-dataset.com/)\n- [Sun-RGBD](http://rgbd.cs.princeton.edu/)\n- [MS COCO](http://mscoco.org/)\n- [ADE20K](http://groups.csail.mit.edu/vision/datasets/ADE20K/)","slug":"数据集整理","published":1,"updated":"2020-06-27T10:19:47.854Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcphzdvu000w3jmfea7g6mno","content":"<blockquote>\n<p>整理一份可供下载的数据集地址（持续更新ing）</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<h2 id=\"1-自动驾驶领域\"><a href=\"#1-自动驾驶领域\" class=\"headerlink\" title=\"1. 自动驾驶领域\"></a>1. 自动驾驶领域</h2><ul>\n<li><p><a href=\"http://www.cvlibs.net/datasets/kitti/\" target=\"_blank\" rel=\"noopener\">KITTI</a> </p>\n</li>\n<li><p><a href=\"http://robotcar-dataset.robots.ox.ac.uk/datasets/\" target=\"_blank\" rel=\"noopener\">Oxford RobotCar </a></p>\n</li>\n<li><p><a href=\"https://github.com/udacity/self-driving-car/tree/master/datasets\" target=\"_blank\" rel=\"noopener\">Udacity </a></p>\n</li>\n<li><p><a href=\"http://apolloscape.auto/\" target=\"_blank\" rel=\"noopener\">Baidu Apolloscapes</a></p>\n</li>\n<li><p><a href=\"https://www.cityscapes-dataset.com/\" target=\"_blank\" rel=\"noopener\">Cityscape Dataset</a></p>\n</li>\n<li><p><a href=\"https://waymo.com/open/download/\" target=\"_blank\" rel=\"noopener\">Waymo</a></p>\n</li>\n<li><p><a href=\"https://www.kaggle.com/c/cvpr-2018-autonomous-driving/data\" target=\"_blank\" rel=\"noopener\">CVPR 2018 WAD视频分段挑战赛数据集</a></p>\n</li>\n<li><p><a href=\"http://bdd-data.berkeley.edu/\" target=\"_blank\" rel=\"noopener\">Berkeley DeepDrive BDD100k</a></p>\n</li>\n<li><p><a href=\"https://github.com/commaai/research\" target=\"_blank\" rel=\"noopener\">Comma.ai</a></p>\n</li>\n<li><p><a href=\"http://cvrr.ucsd.edu/LISA/datasets.html\" target=\"_blank\" rel=\"noopener\">LISA</a></p>\n</li>\n</ul>\n<h2 id=\"2-图像分类数据集\"><a href=\"#2-图像分类数据集\" class=\"headerlink\" title=\"2. 图像分类数据集\"></a>2. 图像分类数据集</h2><ul>\n<li><a href=\"http://yann.lecun.com/exdb/mnist/index.html\" target=\"_blank\" rel=\"noopener\">MNIST</a></li>\n<li><a href=\"http://www.image-net.org/about-stats\" target=\"_blank\" rel=\"noopener\">ImageNet</a></li>\n<li><a href=\"http://mscoco.org/\" target=\"_blank\" rel=\"noopener\">COCO</a></li>\n<li><a href=\"http://host.robots.ox.ac.uk/pascal/VOC/voc2012/index.html\" target=\"_blank\" rel=\"noopener\">PASCAL VOC</a></li>\n<li><a href=\"http://www.cs.toronto.edu/~kriz/cifar.html\" target=\"_blank\" rel=\"noopener\">CIFAR</a></li>\n<li><a href=\"https://github.com/openimages/dataset\" target=\"_blank\" rel=\"noopener\">Open Image</a></li>\n<li><a href=\"https://research.google.com/youtube8m/\" target=\"_blank\" rel=\"noopener\">Youtube-8M</a></li>\n</ul>\n<h2 id=\"3-目标检测数据集\"><a href=\"#3-目标检测数据集\" class=\"headerlink\" title=\"3. 目标检测数据集\"></a>3. 目标检测数据集</h2><ul>\n<li><p><a href=\"https://pjreddie.com/projects/pascal-voc-dataset-mirror/\" target=\"_blank\" rel=\"noopener\">Pascal VOC</a></p>\n<p>此处提供一个百度网盘链接: <a href=\"https://pan.baidu.com/s/1w4B63OlS7I38hrNx6ZcQTw\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1w4B63OlS7I38hrNx6ZcQTw</a>  密码: sllv</p>\n</li>\n<li><p><a href=\"http://mscoco.org/\" target=\"_blank\" rel=\"noopener\">COCO</a></p>\n</li>\n</ul>\n<h2 id=\"4-语义分割\"><a href=\"#4-语义分割\" class=\"headerlink\" title=\"4. 语义分割\"></a>4. 语义分割</h2><ul>\n<li><a href=\"http://mi.eng.cam.ac.uk/projects/segnet/\" target=\"_blank\" rel=\"noopener\">CamVid</a></li>\n<li><a href=\"http://host.robots.ox.ac.uk/pascal/VOC/voc2012/\" target=\"_blank\" rel=\"noopener\">PascalVOC 2012</a></li>\n<li><a href=\"http://cs.nyu.edu/~silberman/datasets/nyu_depth_v2.html\" target=\"_blank\" rel=\"noopener\">NYUDv2</a></li>\n<li><a href=\"https://www.cityscapes-dataset.com/\" target=\"_blank\" rel=\"noopener\">Cityscapes</a></li>\n<li><a href=\"http://rgbd.cs.princeton.edu/\" target=\"_blank\" rel=\"noopener\">Sun-RGBD</a></li>\n<li><a href=\"http://mscoco.org/\" target=\"_blank\" rel=\"noopener\">MS COCO</a></li>\n<li><a href=\"http://groups.csail.mit.edu/vision/datasets/ADE20K/\" target=\"_blank\" rel=\"noopener\">ADE20K</a></li>\n</ul>\n","site":{"data":{}},"length":436,"excerpt":"<blockquote>\n<p>整理一份可供下载的数据集地址（持续更新ing）</p>\n</blockquote>","more":"<h2 id=\"1-自动驾驶领域\"><a href=\"#1-自动驾驶领域\" class=\"headerlink\" title=\"1. 自动驾驶领域\"></a>1. 自动驾驶领域</h2><ul>\n<li><p><a href=\"http://www.cvlibs.net/datasets/kitti/\" target=\"_blank\" rel=\"noopener\">KITTI</a> </p>\n</li>\n<li><p><a href=\"http://robotcar-dataset.robots.ox.ac.uk/datasets/\" target=\"_blank\" rel=\"noopener\">Oxford RobotCar </a></p>\n</li>\n<li><p><a href=\"https://github.com/udacity/self-driving-car/tree/master/datasets\" target=\"_blank\" rel=\"noopener\">Udacity </a></p>\n</li>\n<li><p><a href=\"http://apolloscape.auto/\" target=\"_blank\" rel=\"noopener\">Baidu Apolloscapes</a></p>\n</li>\n<li><p><a href=\"https://www.cityscapes-dataset.com/\" target=\"_blank\" rel=\"noopener\">Cityscape Dataset</a></p>\n</li>\n<li><p><a href=\"https://waymo.com/open/download/\" target=\"_blank\" rel=\"noopener\">Waymo</a></p>\n</li>\n<li><p><a href=\"https://www.kaggle.com/c/cvpr-2018-autonomous-driving/data\" target=\"_blank\" rel=\"noopener\">CVPR 2018 WAD视频分段挑战赛数据集</a></p>\n</li>\n<li><p><a href=\"http://bdd-data.berkeley.edu/\" target=\"_blank\" rel=\"noopener\">Berkeley DeepDrive BDD100k</a></p>\n</li>\n<li><p><a href=\"https://github.com/commaai/research\" target=\"_blank\" rel=\"noopener\">Comma.ai</a></p>\n</li>\n<li><p><a href=\"http://cvrr.ucsd.edu/LISA/datasets.html\" target=\"_blank\" rel=\"noopener\">LISA</a></p>\n</li>\n</ul>\n<h2 id=\"2-图像分类数据集\"><a href=\"#2-图像分类数据集\" class=\"headerlink\" title=\"2. 图像分类数据集\"></a>2. 图像分类数据集</h2><ul>\n<li><a href=\"http://yann.lecun.com/exdb/mnist/index.html\" target=\"_blank\" rel=\"noopener\">MNIST</a></li>\n<li><a href=\"http://www.image-net.org/about-stats\" target=\"_blank\" rel=\"noopener\">ImageNet</a></li>\n<li><a href=\"http://mscoco.org/\" target=\"_blank\" rel=\"noopener\">COCO</a></li>\n<li><a href=\"http://host.robots.ox.ac.uk/pascal/VOC/voc2012/index.html\" target=\"_blank\" rel=\"noopener\">PASCAL VOC</a></li>\n<li><a href=\"http://www.cs.toronto.edu/~kriz/cifar.html\" target=\"_blank\" rel=\"noopener\">CIFAR</a></li>\n<li><a href=\"https://github.com/openimages/dataset\" target=\"_blank\" rel=\"noopener\">Open Image</a></li>\n<li><a href=\"https://research.google.com/youtube8m/\" target=\"_blank\" rel=\"noopener\">Youtube-8M</a></li>\n</ul>\n<h2 id=\"3-目标检测数据集\"><a href=\"#3-目标检测数据集\" class=\"headerlink\" title=\"3. 目标检测数据集\"></a>3. 目标检测数据集</h2><ul>\n<li><p><a href=\"https://pjreddie.com/projects/pascal-voc-dataset-mirror/\" target=\"_blank\" rel=\"noopener\">Pascal VOC</a></p>\n<p>此处提供一个百度网盘链接: <a href=\"https://pan.baidu.com/s/1w4B63OlS7I38hrNx6ZcQTw\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1w4B63OlS7I38hrNx6ZcQTw</a>  密码: sllv</p>\n</li>\n<li><p><a href=\"http://mscoco.org/\" target=\"_blank\" rel=\"noopener\">COCO</a></p>\n</li>\n</ul>\n<h2 id=\"4-语义分割\"><a href=\"#4-语义分割\" class=\"headerlink\" title=\"4. 语义分割\"></a>4. 语义分割</h2><ul>\n<li><a href=\"http://mi.eng.cam.ac.uk/projects/segnet/\" target=\"_blank\" rel=\"noopener\">CamVid</a></li>\n<li><a href=\"http://host.robots.ox.ac.uk/pascal/VOC/voc2012/\" target=\"_blank\" rel=\"noopener\">PascalVOC 2012</a></li>\n<li><a href=\"http://cs.nyu.edu/~silberman/datasets/nyu_depth_v2.html\" target=\"_blank\" rel=\"noopener\">NYUDv2</a></li>\n<li><a href=\"https://www.cityscapes-dataset.com/\" target=\"_blank\" rel=\"noopener\">Cityscapes</a></li>\n<li><a href=\"http://rgbd.cs.princeton.edu/\" target=\"_blank\" rel=\"noopener\">Sun-RGBD</a></li>\n<li><a href=\"http://mscoco.org/\" target=\"_blank\" rel=\"noopener\">MS COCO</a></li>\n<li><a href=\"http://groups.csail.mit.edu/vision/datasets/ADE20K/\" target=\"_blank\" rel=\"noopener\">ADE20K</a></li>\n</ul>"},{"title":"好玩的在线应用程序","date":"2019-09-19T15:49:59.000Z","_content":"\n> 整理搜集的一些好玩的在线应用程序，属于比较前沿的技术demo。\n\n<!--more-->\n\n#### 1. “神笔马良”\n\n作者：NVIDIA\n\ndemo链接：http://nvidia-research-mingyuliu.com/gaugan/\n\n#### 2. \"猫狗转换\"\n\n作者：NVIDIA\n\ndemo链接：http://nvidia-research-mingyuliu.com/petswap/\n\n#### 3. \"一键修图\"\n\n作者：NVIDIA\n\ndemo链接：","source":"_posts/好玩的在线应用程序.md","raw":"---\ntitle: 好玩的在线应用程序\ndate: 2019-09-19 23:49:59\ncategories: 计算机视觉\ntags: \n- 在线应用\n- 前沿技术\n---\n\n> 整理搜集的一些好玩的在线应用程序，属于比较前沿的技术demo。\n\n<!--more-->\n\n#### 1. “神笔马良”\n\n作者：NVIDIA\n\ndemo链接：http://nvidia-research-mingyuliu.com/gaugan/\n\n#### 2. \"猫狗转换\"\n\n作者：NVIDIA\n\ndemo链接：http://nvidia-research-mingyuliu.com/petswap/\n\n#### 3. \"一键修图\"\n\n作者：NVIDIA\n\ndemo链接：","slug":"好玩的在线应用程序","published":1,"updated":"2020-06-27T10:19:48.174Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcphzdvv000y3jmfca893sl9","content":"<blockquote>\n<p>整理搜集的一些好玩的在线应用程序，属于比较前沿的技术demo。</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<h4 id=\"1-“神笔马良”\"><a href=\"#1-“神笔马良”\" class=\"headerlink\" title=\"1. “神笔马良”\"></a>1. “神笔马良”</h4><p>作者：NVIDIA</p>\n<p>demo链接：<a href=\"http://nvidia-research-mingyuliu.com/gaugan/\" target=\"_blank\" rel=\"noopener\">http://nvidia-research-mingyuliu.com/gaugan/</a></p>\n<h4 id=\"2-“猫狗转换”\"><a href=\"#2-“猫狗转换”\" class=\"headerlink\" title=\"2. “猫狗转换”\"></a>2. “猫狗转换”</h4><p>作者：NVIDIA</p>\n<p>demo链接：<a href=\"http://nvidia-research-mingyuliu.com/petswap/\" target=\"_blank\" rel=\"noopener\">http://nvidia-research-mingyuliu.com/petswap/</a></p>\n<h4 id=\"3-“一键修图”\"><a href=\"#3-“一键修图”\" class=\"headerlink\" title=\"3. “一键修图”\"></a>3. “一键修图”</h4><p>作者：NVIDIA</p>\n<p>demo链接：</p>\n","site":{"data":{}},"length":206,"excerpt":"<blockquote>\n<p>整理搜集的一些好玩的在线应用程序，属于比较前沿的技术demo。</p>\n</blockquote>","more":"<h4 id=\"1-“神笔马良”\"><a href=\"#1-“神笔马良”\" class=\"headerlink\" title=\"1. “神笔马良”\"></a>1. “神笔马良”</h4><p>作者：NVIDIA</p>\n<p>demo链接：<a href=\"http://nvidia-research-mingyuliu.com/gaugan/\" target=\"_blank\" rel=\"noopener\">http://nvidia-research-mingyuliu.com/gaugan/</a></p>\n<h4 id=\"2-“猫狗转换”\"><a href=\"#2-“猫狗转换”\" class=\"headerlink\" title=\"2. “猫狗转换”\"></a>2. “猫狗转换”</h4><p>作者：NVIDIA</p>\n<p>demo链接：<a href=\"http://nvidia-research-mingyuliu.com/petswap/\" target=\"_blank\" rel=\"noopener\">http://nvidia-research-mingyuliu.com/petswap/</a></p>\n<h4 id=\"3-“一键修图”\"><a href=\"#3-“一键修图”\" class=\"headerlink\" title=\"3. “一键修图”\"></a>3. “一键修图”</h4><p>作者：NVIDIA</p>\n<p>demo链接：</p>"},{"title":"Tf Faster-Rcnn(三)实现目标检测(cpu)训练自己的数据","date":"2019-08-17T14:28:22.000Z","_content":"\n\n> 在前两篇博客中我们分别[配置了环境](https://blog.csdn.net/King_key/article/details/84781608)和进行了[demo的测试](https://blog.csdn.net/King_key/article/details/84900581),接下来我们训练自己的图像数据并进行检测.\n\n<!-- more -->\n\n### 制作数据集\n\n我们采用VOC2007的数据模板,进行数据制作\n\n- VOC2007数据文件图:\n```shell\nVOC2007\n├── Annotations    #图像标签文件,是.xml格式\n├── ImageSets   \n│   ├── Layout\n│   ├── Main    #训练和测试用到的数据文件\n│   └── Segmentation\n└── JPEGImages   #图像文件\n#Layout和Segmentation文件在这里不需要\n```\n- 采用[labelimg](https://github.com/tzutalin/labelImg)进行图像标记.可以[下载](https://pan.baidu.com/s/1t3usWCqnkgN7NtGyvNVPCw),直接运行可能会出现错误,先根据项目网址中的提示安装依赖文件,再运行.\n  \n  1. 修改data/predefined_classes.txt文件,改成自己的类名.\n  \n  2. 运行程序,界面如下图所示:\n  \n  ![在这里插入图片描述](https://img-blog.csdnimg.cn/20181228160926475.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70)    \n  \n  3. 点击Change Save Dir修改标签文件的保存目录.\n  \n  4. 点击Open Dir ,打开图片路径.\n  \n  5. 点击图片进行标注,如下图:\n  \n  ![在这里插入图片描述](https://img-blog.csdnimg.cn/20181228162049732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70)\n  详细的使用可以参考网上的其他说明.至此,标签数据我们已经做好.我们将制作的数据按照VOC2007的格式进行放入.\n  \n  6. 生成训练,测试数据.在这里,我们利用代码来生成:\n  \n  ```shell\n  import os\n  import random\n  \n  def _main():\n      trainval_percent = 0.5\n    train_percent = 0.5\n      xmlfilepath = 'Annotations'\n      total_xml = os.listdir(xmlfilepath)\n  \n      num = len(total_xml)\n      list = range(num)\n      tv = int(num * trainval_percent)\n    tr = int(tv * train_percent)\n      trainval = random.sample(list, tv)\n      train = random.sample(trainval, tr)\n  \n      ftrainval = open('ImageSets/Main/trainval.txt', 'w')\n    ftest = open('ImageSets/Main/test.txt', 'w')\n      ftrain = open('ImageSets/Main/train.txt', 'w')\n      fval = open('ImageSets/Main/val.txt', 'w')\n  \n       for i in list:\n          name = total_xml[i][:-4] + '\\n'\n          if i in trainval:\n              ftrainval.write(name)\n              if i in train:\n                  ftest.write(name)\n              else:\n                  fval.write(name)\n          else:\n              ftrain.write(name)\n      ftrainval.close()\n      ftrain.close()\n      fval.close()\n      ftest.close()\n      \n  if __name__ == '__main__':\n      _main()\n  ```\n  \n  7. 将程序文件放在VOC2007文件夹下(本人是按照这个路径进行编写的),其中trainval_percent与 train_percent可以根据需要修改,随后执行,会生成四个文件:\n  \n  ```shell\n  /ImageSets/Main$ tree\n  .\n  ├── test.txt\n  ├── train.txt\n  ├── trainval.txt\n  └── val.txt\n  ```\n  \n  8. 在VOC数据中,对图像的像素比例有一定的要求,因此我们将图像进行修改.代码如下:\n  \n  ```shell\n  import cv2\n  import os\n  \n     file_path='./JPEGImages/'\n     for filename in os.listdir(file_path):\n  \n      print(filename)\n      img=cv2.imread(file_path+filename)\n    \n     size=cv2.resize(img,(500,375))\n     cv2.imwrite(file_path+filename,size)\n     if img is not None:\n     \tcontinue\n  ```\n\n  现在,我们自己的数据集总算是完成了,将制作好的数据集与原先的数据进行替换,就可以开始训练自己的模型了.\n\n### 训练自己的数据模型\n\n- 在lib/pascal_voc.py文件中,修改类别参数\n    ```python\n    self._classes = ('__background__',  # always index 0\n                     '#自己的类名')\n    ```\n- 在train_faster_rcnn.sh和test_faster_rcnn.sh修改\n    ```python \n    ITEMS=#自己设置,本人设置为10000\n    ```\n- 在项目根目录下执行\n    ```shell\n    ./experiments/scripts/train_faster_rcnn.sh 0 pascal_voc_0712 res101\n    ```\n- 此时会生成:\n    ```shell\n    output #生成的训练模型\n    └── res101\n        ├── voc_2007_test\n        │   └── default\n        │       └── res101_faster_rcnn_iter_100\n        │           ├── detections.pkl\n        │           ├── license_pr.pkl\n        │           └── _pr.pkl\n        └── voc_2007_trainval+voc_2012_trainval\n            └── default\n                ├── checkpoint\n                ├── res101_faster_rcnn_iter_10000.ckpt.data-00000-of-00001\n                ├── res101_faster_rcnn_iter_10000.ckpt.index\n                ├── res101_faster_rcnn_iter_10000.ckpt.meta\n                ├── res101_faster_rcnn_iter_10000.pkl\n\n    tensorboard #可视化文件,可利用命令tensorboard --logdir=tensorborad/res101进行可视化观察\n    └── res101\n        └── voc_2007_trainval+voc_2012_trainval\n            ├── default\n            │   ├── events.out.tfevents.1545706608.guo-ThinkPad-E550\n            │   ├── events.out.tfevents.1545711447.guo-ThinkPad-E550\n            │   ├── events.out.tfevents.1545732554.guo-ThinkPad-E550\n            │   └── events.out.tfevents.1545818970.guo-ThinkPad-E550\n            └── default_val\n                ├── events.out.tfevents.1545706693.guo-ThinkPad-E550\n                ├── events.out.tfevents.1545711504.guo-ThinkPad-E550\n                ├── events.out.tfevents.1545732622.guo-ThinkPad-E550\n                └── events.out.tfevents.1545819033.guo-ThinkPad-E550\n    ```\n\n### 然后,就是测试了\n\n修改demo.py\n\n- 修改类名\n```python\nCLASSES = ('__background__',\n           '#自己的类')\n```\n- 修改模型\n```python\nNETS = {'vgg16': ('vgg16_faster_rcnn_iter_70000.ckpt',),'res101': ('res101_faster_rcnn_iter_10000.ckpt',)}#其中的10000,是我自己的训练设置,个人要根据自己的设置修改,一定要和初始设置的参数一致\n```\n- 修改测试图片\n原文是:\n```python\nim_names=['#demo中图片的名称']\n```\n本人进行了修改,遍历文件夹下所有的图片进行读取,修改代码如下\n```python\nim_path='#图片文件的路径'\nim_names = os.listdir(im_path)\n#这里的im_path是以项目的根路径进行设置的,此时如果你读取的不是demo或者demo下的文件夹,那就需要再修改一处\n#im_file = os.path.join(cfg.DATA_DIR, 'demo', image_name)其中的demo就要根据自己的进行修改\n```\n- 执行测试,执行命令\n```shell\n./tools/demo.py\n```\n在这里,如果图片太多,或者不想显示的时候,可以进行结果的保存,添加一行代码,如下:\n```python \ndemo(sess,net,im_name)\nplt.savefig('./../data/demo-show/'+im_name)\n#前面是路径,demo-show文件需要自己创建,也是以项目的根路径进行设置的\n#im_name是图片原本的名称,所以在保存的时候,如果还是在测试图片的文件下进行保存,会被覆盖\n```\n### 最后,就是小小的庆祝一下,总算是完成了...\n\n这是本人自己的记录,其中可能遇到和大家不一样的问题,的如果有什么疑问,可以下方留言讨论!!!!\n\n","source":"_posts/tf-faster-rcnn-三-实现目标检测-cpu-训练自己的数据.md","raw":"---\ntitle: tf faster-rcnn(三)实现目标检测(cpu)训练自己的数据\ndate: 2019-08-17 22:28:22\ncategories: 计算机视觉\ntags: \n- tf faster-rcnn \n- 目标检测 \n- 深度学习\n---\n\n\n> 在前两篇博客中我们分别[配置了环境](https://blog.csdn.net/King_key/article/details/84781608)和进行了[demo的测试](https://blog.csdn.net/King_key/article/details/84900581),接下来我们训练自己的图像数据并进行检测.\n\n<!-- more -->\n\n### 制作数据集\n\n我们采用VOC2007的数据模板,进行数据制作\n\n- VOC2007数据文件图:\n```shell\nVOC2007\n├── Annotations    #图像标签文件,是.xml格式\n├── ImageSets   \n│   ├── Layout\n│   ├── Main    #训练和测试用到的数据文件\n│   └── Segmentation\n└── JPEGImages   #图像文件\n#Layout和Segmentation文件在这里不需要\n```\n- 采用[labelimg](https://github.com/tzutalin/labelImg)进行图像标记.可以[下载](https://pan.baidu.com/s/1t3usWCqnkgN7NtGyvNVPCw),直接运行可能会出现错误,先根据项目网址中的提示安装依赖文件,再运行.\n  \n  1. 修改data/predefined_classes.txt文件,改成自己的类名.\n  \n  2. 运行程序,界面如下图所示:\n  \n  ![在这里插入图片描述](https://img-blog.csdnimg.cn/20181228160926475.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70)    \n  \n  3. 点击Change Save Dir修改标签文件的保存目录.\n  \n  4. 点击Open Dir ,打开图片路径.\n  \n  5. 点击图片进行标注,如下图:\n  \n  ![在这里插入图片描述](https://img-blog.csdnimg.cn/20181228162049732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70)\n  详细的使用可以参考网上的其他说明.至此,标签数据我们已经做好.我们将制作的数据按照VOC2007的格式进行放入.\n  \n  6. 生成训练,测试数据.在这里,我们利用代码来生成:\n  \n  ```shell\n  import os\n  import random\n  \n  def _main():\n      trainval_percent = 0.5\n    train_percent = 0.5\n      xmlfilepath = 'Annotations'\n      total_xml = os.listdir(xmlfilepath)\n  \n      num = len(total_xml)\n      list = range(num)\n      tv = int(num * trainval_percent)\n    tr = int(tv * train_percent)\n      trainval = random.sample(list, tv)\n      train = random.sample(trainval, tr)\n  \n      ftrainval = open('ImageSets/Main/trainval.txt', 'w')\n    ftest = open('ImageSets/Main/test.txt', 'w')\n      ftrain = open('ImageSets/Main/train.txt', 'w')\n      fval = open('ImageSets/Main/val.txt', 'w')\n  \n       for i in list:\n          name = total_xml[i][:-4] + '\\n'\n          if i in trainval:\n              ftrainval.write(name)\n              if i in train:\n                  ftest.write(name)\n              else:\n                  fval.write(name)\n          else:\n              ftrain.write(name)\n      ftrainval.close()\n      ftrain.close()\n      fval.close()\n      ftest.close()\n      \n  if __name__ == '__main__':\n      _main()\n  ```\n  \n  7. 将程序文件放在VOC2007文件夹下(本人是按照这个路径进行编写的),其中trainval_percent与 train_percent可以根据需要修改,随后执行,会生成四个文件:\n  \n  ```shell\n  /ImageSets/Main$ tree\n  .\n  ├── test.txt\n  ├── train.txt\n  ├── trainval.txt\n  └── val.txt\n  ```\n  \n  8. 在VOC数据中,对图像的像素比例有一定的要求,因此我们将图像进行修改.代码如下:\n  \n  ```shell\n  import cv2\n  import os\n  \n     file_path='./JPEGImages/'\n     for filename in os.listdir(file_path):\n  \n      print(filename)\n      img=cv2.imread(file_path+filename)\n    \n     size=cv2.resize(img,(500,375))\n     cv2.imwrite(file_path+filename,size)\n     if img is not None:\n     \tcontinue\n  ```\n\n  现在,我们自己的数据集总算是完成了,将制作好的数据集与原先的数据进行替换,就可以开始训练自己的模型了.\n\n### 训练自己的数据模型\n\n- 在lib/pascal_voc.py文件中,修改类别参数\n    ```python\n    self._classes = ('__background__',  # always index 0\n                     '#自己的类名')\n    ```\n- 在train_faster_rcnn.sh和test_faster_rcnn.sh修改\n    ```python \n    ITEMS=#自己设置,本人设置为10000\n    ```\n- 在项目根目录下执行\n    ```shell\n    ./experiments/scripts/train_faster_rcnn.sh 0 pascal_voc_0712 res101\n    ```\n- 此时会生成:\n    ```shell\n    output #生成的训练模型\n    └── res101\n        ├── voc_2007_test\n        │   └── default\n        │       └── res101_faster_rcnn_iter_100\n        │           ├── detections.pkl\n        │           ├── license_pr.pkl\n        │           └── _pr.pkl\n        └── voc_2007_trainval+voc_2012_trainval\n            └── default\n                ├── checkpoint\n                ├── res101_faster_rcnn_iter_10000.ckpt.data-00000-of-00001\n                ├── res101_faster_rcnn_iter_10000.ckpt.index\n                ├── res101_faster_rcnn_iter_10000.ckpt.meta\n                ├── res101_faster_rcnn_iter_10000.pkl\n\n    tensorboard #可视化文件,可利用命令tensorboard --logdir=tensorborad/res101进行可视化观察\n    └── res101\n        └── voc_2007_trainval+voc_2012_trainval\n            ├── default\n            │   ├── events.out.tfevents.1545706608.guo-ThinkPad-E550\n            │   ├── events.out.tfevents.1545711447.guo-ThinkPad-E550\n            │   ├── events.out.tfevents.1545732554.guo-ThinkPad-E550\n            │   └── events.out.tfevents.1545818970.guo-ThinkPad-E550\n            └── default_val\n                ├── events.out.tfevents.1545706693.guo-ThinkPad-E550\n                ├── events.out.tfevents.1545711504.guo-ThinkPad-E550\n                ├── events.out.tfevents.1545732622.guo-ThinkPad-E550\n                └── events.out.tfevents.1545819033.guo-ThinkPad-E550\n    ```\n\n### 然后,就是测试了\n\n修改demo.py\n\n- 修改类名\n```python\nCLASSES = ('__background__',\n           '#自己的类')\n```\n- 修改模型\n```python\nNETS = {'vgg16': ('vgg16_faster_rcnn_iter_70000.ckpt',),'res101': ('res101_faster_rcnn_iter_10000.ckpt',)}#其中的10000,是我自己的训练设置,个人要根据自己的设置修改,一定要和初始设置的参数一致\n```\n- 修改测试图片\n原文是:\n```python\nim_names=['#demo中图片的名称']\n```\n本人进行了修改,遍历文件夹下所有的图片进行读取,修改代码如下\n```python\nim_path='#图片文件的路径'\nim_names = os.listdir(im_path)\n#这里的im_path是以项目的根路径进行设置的,此时如果你读取的不是demo或者demo下的文件夹,那就需要再修改一处\n#im_file = os.path.join(cfg.DATA_DIR, 'demo', image_name)其中的demo就要根据自己的进行修改\n```\n- 执行测试,执行命令\n```shell\n./tools/demo.py\n```\n在这里,如果图片太多,或者不想显示的时候,可以进行结果的保存,添加一行代码,如下:\n```python \ndemo(sess,net,im_name)\nplt.savefig('./../data/demo-show/'+im_name)\n#前面是路径,demo-show文件需要自己创建,也是以项目的根路径进行设置的\n#im_name是图片原本的名称,所以在保存的时候,如果还是在测试图片的文件下进行保存,会被覆盖\n```\n### 最后,就是小小的庆祝一下,总算是完成了...\n\n这是本人自己的记录,其中可能遇到和大家不一样的问题,的如果有什么疑问,可以下方留言讨论!!!!\n\n","slug":"tf-faster-rcnn-三-实现目标检测-cpu-训练自己的数据","published":1,"updated":"2020-06-27T10:19:47.914Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcphzdvw00113jmfkblckoni","content":"<blockquote>\n<p>在前两篇博客中我们分别<a href=\"https://blog.csdn.net/King_key/article/details/84781608\" target=\"_blank\" rel=\"noopener\">配置了环境</a>和进行了<a href=\"https://blog.csdn.net/King_key/article/details/84900581\" target=\"_blank\" rel=\"noopener\">demo的测试</a>,接下来我们训练自己的图像数据并进行检测.</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<h3 id=\"制作数据集\"><a href=\"#制作数据集\" class=\"headerlink\" title=\"制作数据集\"></a>制作数据集</h3><p>我们采用VOC2007的数据模板,进行数据制作</p>\n<ul>\n<li><p>VOC2007数据文件图:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VOC2007</span><br><span class=\"line\">├── Annotations    #图像标签文件,是.xml格式</span><br><span class=\"line\">├── ImageSets   </span><br><span class=\"line\">│   ├── Layout</span><br><span class=\"line\">│   ├── Main    #训练和测试用到的数据文件</span><br><span class=\"line\">│   └── Segmentation</span><br><span class=\"line\">└── JPEGImages   #图像文件</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Layout和Segmentation文件在这里不需要</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>采用<a href=\"https://github.com/tzutalin/labelImg\" target=\"_blank\" rel=\"noopener\">labelimg</a>进行图像标记.可以<a href=\"https://pan.baidu.com/s/1t3usWCqnkgN7NtGyvNVPCw\" target=\"_blank\" rel=\"noopener\">下载</a>,直接运行可能会出现错误,先根据项目网址中的提示安装依赖文件,再运行.</p>\n<ol>\n<li><p>修改data/predefined_classes.txt文件,改成自己的类名.</p>\n</li>\n<li><p>运行程序,界面如下图所示:</p>\n</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20181228160926475.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">    </p>\n<ol start=\"3\">\n<li><p>点击Change Save Dir修改标签文件的保存目录.</p>\n</li>\n<li><p>点击Open Dir ,打开图片路径.</p>\n</li>\n<li><p>点击图片进行标注,如下图:</p>\n</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20181228162049732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>详细的使用可以参考网上的其他说明.至此,标签数据我们已经做好.我们将制作的数据按照VOC2007的格式进行放入.</p>\n<ol start=\"6\">\n<li>生成训练,测试数据.在这里,我们利用代码来生成:</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import os</span><br><span class=\"line\">import random</span><br><span class=\"line\"></span><br><span class=\"line\">def _main():</span><br><span class=\"line\">    trainval_percent = 0.5</span><br><span class=\"line\">  train_percent = 0.5</span><br><span class=\"line\">    xmlfilepath = 'Annotations'</span><br><span class=\"line\">    total_xml = os.listdir(xmlfilepath)</span><br><span class=\"line\"></span><br><span class=\"line\">    num = len(total_xml)</span><br><span class=\"line\">    list = range(num)</span><br><span class=\"line\">    tv = int(num * trainval_percent)</span><br><span class=\"line\">  tr = int(tv * train_percent)</span><br><span class=\"line\">    trainval = random.sample(list, tv)</span><br><span class=\"line\">    train = random.sample(trainval, tr)</span><br><span class=\"line\"></span><br><span class=\"line\">    ftrainval = open('ImageSets/Main/trainval.txt', 'w')</span><br><span class=\"line\">  ftest = open('ImageSets/Main/test.txt', 'w')</span><br><span class=\"line\">    ftrain = open('ImageSets/Main/train.txt', 'w')</span><br><span class=\"line\">    fval = open('ImageSets/Main/val.txt', 'w')</span><br><span class=\"line\"></span><br><span class=\"line\">     for i in list:</span><br><span class=\"line\">        name = total_xml[i][:-4] + '\\n'</span><br><span class=\"line\">        if i in trainval:</span><br><span class=\"line\">            ftrainval.write(name)</span><br><span class=\"line\">            if i in train:</span><br><span class=\"line\">                ftest.write(name)</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                fval.write(name)</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            ftrain.write(name)</span><br><span class=\"line\">    ftrainval.close()</span><br><span class=\"line\">    ftrain.close()</span><br><span class=\"line\">    fval.close()</span><br><span class=\"line\">    ftest.close()</span><br><span class=\"line\">    </span><br><span class=\"line\">if __name__ == '__main__':</span><br><span class=\"line\">    _main()</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n<ol start=\"7\">\n<li><p>将程序文件放在VOC2007文件夹下(本人是按照这个路径进行编写的),其中trainval_percent与 train_percent可以根据需要修改,随后执行,会生成四个文件:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/ImageSets/Main$ tree</span><br><span class=\"line\">.</span><br><span class=\"line\">├── test.txt</span><br><span class=\"line\">├── train.txt</span><br><span class=\"line\">├── trainval.txt</span><br><span class=\"line\">└── val.txt</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ol>\n<ol start=\"8\">\n<li><p>在VOC数据中,对图像的像素比例有一定的要求,因此我们将图像进行修改.代码如下:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import cv2</span><br><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\">   file_path='./JPEGImages/'</span><br><span class=\"line\">   for filename in os.listdir(file_path):</span><br><span class=\"line\"></span><br><span class=\"line\">    print(filename)</span><br><span class=\"line\">    img=cv2.imread(file_path+filename)</span><br><span class=\"line\">  </span><br><span class=\"line\">   size=cv2.resize(img,(500,375))</span><br><span class=\"line\">   cv2.imwrite(file_path+filename,size)</span><br><span class=\"line\">   if img is not None:</span><br><span class=\"line\">   \tcontinue</span><br></pre></td></tr></table></figure>\n\n<p>现在,我们自己的数据集总算是完成了,将制作好的数据集与原先的数据进行替换,就可以开始训练自己的模型了.</p>\n</li>\n</ol>\n<h3 id=\"训练自己的数据模型\"><a href=\"#训练自己的数据模型\" class=\"headerlink\" title=\"训练自己的数据模型\"></a>训练自己的数据模型</h3><ul>\n<li><p>在lib/pascal_voc.py文件中,修改类别参数</p>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self._classes = (<span class=\"string\">'__background__'</span>,  <span class=\"comment\"># always index 0</span></span><br><span class=\"line\">                 <span class=\"string\">'#自己的类名'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在train_faster_rcnn.sh和test_faster_rcnn.sh修改</p>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ITEMS=<span class=\"comment\">#自己设置,本人设置为10000</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在项目根目录下执行</p>\n  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./experiments/scripts/train_faster_rcnn.sh 0 pascal_voc_0712 res101</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>此时会生成:</p>\n  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output #生成的训练模型</span><br><span class=\"line\">└── res101</span><br><span class=\"line\">    ├── voc_2007_test</span><br><span class=\"line\">    │   └── default</span><br><span class=\"line\">    │       └── res101_faster_rcnn_iter_100</span><br><span class=\"line\">    │           ├── detections.pkl</span><br><span class=\"line\">    │           ├── license_pr.pkl</span><br><span class=\"line\">    │           └── _pr.pkl</span><br><span class=\"line\">    └── voc_2007_trainval+voc_2012_trainval</span><br><span class=\"line\">        └── default</span><br><span class=\"line\">            ├── checkpoint</span><br><span class=\"line\">            ├── res101_faster_rcnn_iter_10000.ckpt.data-00000-of-00001</span><br><span class=\"line\">            ├── res101_faster_rcnn_iter_10000.ckpt.index</span><br><span class=\"line\">            ├── res101_faster_rcnn_iter_10000.ckpt.meta</span><br><span class=\"line\">            ├── res101_faster_rcnn_iter_10000.pkl</span><br><span class=\"line\"></span><br><span class=\"line\">tensorboard #可视化文件,可利用命令tensorboard --logdir=tensorborad/res101进行可视化观察</span><br><span class=\"line\">└── res101</span><br><span class=\"line\">    └── voc_2007_trainval+voc_2012_trainval</span><br><span class=\"line\">        ├── default</span><br><span class=\"line\">        │   ├── events.out.tfevents.1545706608.guo-ThinkPad-E550</span><br><span class=\"line\">        │   ├── events.out.tfevents.1545711447.guo-ThinkPad-E550</span><br><span class=\"line\">        │   ├── events.out.tfevents.1545732554.guo-ThinkPad-E550</span><br><span class=\"line\">        │   └── events.out.tfevents.1545818970.guo-ThinkPad-E550</span><br><span class=\"line\">        └── default_val</span><br><span class=\"line\">            ├── events.out.tfevents.1545706693.guo-ThinkPad-E550</span><br><span class=\"line\">            ├── events.out.tfevents.1545711504.guo-ThinkPad-E550</span><br><span class=\"line\">            ├── events.out.tfevents.1545732622.guo-ThinkPad-E550</span><br><span class=\"line\">            └── events.out.tfevents.1545819033.guo-ThinkPad-E550</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"然后-就是测试了\"><a href=\"#然后-就是测试了\" class=\"headerlink\" title=\"然后,就是测试了\"></a>然后,就是测试了</h3><p>修改demo.py</p>\n<ul>\n<li><p>修改类名</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CLASSES = (<span class=\"string\">'__background__'</span>,</span><br><span class=\"line\">           <span class=\"string\">'#自己的类'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改模型</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NETS = &#123;<span class=\"string\">'vgg16'</span>: (<span class=\"string\">'vgg16_faster_rcnn_iter_70000.ckpt'</span>,),<span class=\"string\">'res101'</span>: (<span class=\"string\">'res101_faster_rcnn_iter_10000.ckpt'</span>,)&#125;<span class=\"comment\">#其中的10000,是我自己的训练设置,个人要根据自己的设置修改,一定要和初始设置的参数一致</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改测试图片<br>原文是:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">im_names=[<span class=\"string\">'#demo中图片的名称'</span>]</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>本人进行了修改,遍历文件夹下所有的图片进行读取,修改代码如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">im_path=<span class=\"string\">'#图片文件的路径'</span></span><br><span class=\"line\">im_names = os.listdir(im_path)</span><br><span class=\"line\"><span class=\"comment\">#这里的im_path是以项目的根路径进行设置的,此时如果你读取的不是demo或者demo下的文件夹,那就需要再修改一处</span></span><br><span class=\"line\"><span class=\"comment\">#im_file = os.path.join(cfg.DATA_DIR, 'demo', image_name)其中的demo就要根据自己的进行修改</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>执行测试,执行命令<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./tools/demo.py</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>在这里,如果图片太多,或者不想显示的时候,可以进行结果的保存,添加一行代码,如下:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">demo(sess,net,im_name)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">'./../data/demo-show/'</span>+im_name)</span><br><span class=\"line\"><span class=\"comment\">#前面是路径,demo-show文件需要自己创建,也是以项目的根路径进行设置的</span></span><br><span class=\"line\"><span class=\"comment\">#im_name是图片原本的名称,所以在保存的时候,如果还是在测试图片的文件下进行保存,会被覆盖</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"最后-就是小小的庆祝一下-总算是完成了…\"><a href=\"#最后-就是小小的庆祝一下-总算是完成了…\" class=\"headerlink\" title=\"最后,就是小小的庆祝一下,总算是完成了…\"></a>最后,就是小小的庆祝一下,总算是完成了…</h3><p>这是本人自己的记录,其中可能遇到和大家不一样的问题,的如果有什么疑问,可以下方留言讨论!!!!</p>\n","site":{"data":{}},"length":4260,"excerpt":"<blockquote>\n<p>在前两篇博客中我们分别<a href=\"https://blog.csdn.net/King_key/article/details/84781608\" target=\"_blank\" rel=\"noopener\">配置了环境</a>和进行了<a href=\"https://blog.csdn.net/King_key/article/details/84900581\" target=\"_blank\" rel=\"noopener\">demo的测试</a>,接下来我们训练自己的图像数据并进行检测.</p>\n</blockquote>","more":"<h3 id=\"制作数据集\"><a href=\"#制作数据集\" class=\"headerlink\" title=\"制作数据集\"></a>制作数据集</h3><p>我们采用VOC2007的数据模板,进行数据制作</p>\n<ul>\n<li><p>VOC2007数据文件图:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VOC2007</span><br><span class=\"line\">├── Annotations    #图像标签文件,是.xml格式</span><br><span class=\"line\">├── ImageSets   </span><br><span class=\"line\">│   ├── Layout</span><br><span class=\"line\">│   ├── Main    #训练和测试用到的数据文件</span><br><span class=\"line\">│   └── Segmentation</span><br><span class=\"line\">└── JPEGImages   #图像文件</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Layout和Segmentation文件在这里不需要</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>采用<a href=\"https://github.com/tzutalin/labelImg\" target=\"_blank\" rel=\"noopener\">labelimg</a>进行图像标记.可以<a href=\"https://pan.baidu.com/s/1t3usWCqnkgN7NtGyvNVPCw\" target=\"_blank\" rel=\"noopener\">下载</a>,直接运行可能会出现错误,先根据项目网址中的提示安装依赖文件,再运行.</p>\n<ol>\n<li><p>修改data/predefined_classes.txt文件,改成自己的类名.</p>\n</li>\n<li><p>运行程序,界面如下图所示:</p>\n</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20181228160926475.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">    </p>\n<ol start=\"3\">\n<li><p>点击Change Save Dir修改标签文件的保存目录.</p>\n</li>\n<li><p>点击Open Dir ,打开图片路径.</p>\n</li>\n<li><p>点击图片进行标注,如下图:</p>\n</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20181228162049732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpbmdfa2V5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>详细的使用可以参考网上的其他说明.至此,标签数据我们已经做好.我们将制作的数据按照VOC2007的格式进行放入.</p>\n<ol start=\"6\">\n<li>生成训练,测试数据.在这里,我们利用代码来生成:</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import os</span><br><span class=\"line\">import random</span><br><span class=\"line\"></span><br><span class=\"line\">def _main():</span><br><span class=\"line\">    trainval_percent = 0.5</span><br><span class=\"line\">  train_percent = 0.5</span><br><span class=\"line\">    xmlfilepath = 'Annotations'</span><br><span class=\"line\">    total_xml = os.listdir(xmlfilepath)</span><br><span class=\"line\"></span><br><span class=\"line\">    num = len(total_xml)</span><br><span class=\"line\">    list = range(num)</span><br><span class=\"line\">    tv = int(num * trainval_percent)</span><br><span class=\"line\">  tr = int(tv * train_percent)</span><br><span class=\"line\">    trainval = random.sample(list, tv)</span><br><span class=\"line\">    train = random.sample(trainval, tr)</span><br><span class=\"line\"></span><br><span class=\"line\">    ftrainval = open('ImageSets/Main/trainval.txt', 'w')</span><br><span class=\"line\">  ftest = open('ImageSets/Main/test.txt', 'w')</span><br><span class=\"line\">    ftrain = open('ImageSets/Main/train.txt', 'w')</span><br><span class=\"line\">    fval = open('ImageSets/Main/val.txt', 'w')</span><br><span class=\"line\"></span><br><span class=\"line\">     for i in list:</span><br><span class=\"line\">        name = total_xml[i][:-4] + '\\n'</span><br><span class=\"line\">        if i in trainval:</span><br><span class=\"line\">            ftrainval.write(name)</span><br><span class=\"line\">            if i in train:</span><br><span class=\"line\">                ftest.write(name)</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                fval.write(name)</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            ftrain.write(name)</span><br><span class=\"line\">    ftrainval.close()</span><br><span class=\"line\">    ftrain.close()</span><br><span class=\"line\">    fval.close()</span><br><span class=\"line\">    ftest.close()</span><br><span class=\"line\">    </span><br><span class=\"line\">if __name__ == '__main__':</span><br><span class=\"line\">    _main()</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n<ol start=\"7\">\n<li><p>将程序文件放在VOC2007文件夹下(本人是按照这个路径进行编写的),其中trainval_percent与 train_percent可以根据需要修改,随后执行,会生成四个文件:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/ImageSets/Main$ tree</span><br><span class=\"line\">.</span><br><span class=\"line\">├── test.txt</span><br><span class=\"line\">├── train.txt</span><br><span class=\"line\">├── trainval.txt</span><br><span class=\"line\">└── val.txt</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ol>\n<ol start=\"8\">\n<li><p>在VOC数据中,对图像的像素比例有一定的要求,因此我们将图像进行修改.代码如下:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import cv2</span><br><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\">   file_path='./JPEGImages/'</span><br><span class=\"line\">   for filename in os.listdir(file_path):</span><br><span class=\"line\"></span><br><span class=\"line\">    print(filename)</span><br><span class=\"line\">    img=cv2.imread(file_path+filename)</span><br><span class=\"line\">  </span><br><span class=\"line\">   size=cv2.resize(img,(500,375))</span><br><span class=\"line\">   cv2.imwrite(file_path+filename,size)</span><br><span class=\"line\">   if img is not None:</span><br><span class=\"line\">   \tcontinue</span><br></pre></td></tr></table></figure>\n\n<p>现在,我们自己的数据集总算是完成了,将制作好的数据集与原先的数据进行替换,就可以开始训练自己的模型了.</p>\n</li>\n</ol>\n<h3 id=\"训练自己的数据模型\"><a href=\"#训练自己的数据模型\" class=\"headerlink\" title=\"训练自己的数据模型\"></a>训练自己的数据模型</h3><ul>\n<li><p>在lib/pascal_voc.py文件中,修改类别参数</p>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self._classes = (<span class=\"string\">'__background__'</span>,  <span class=\"comment\"># always index 0</span></span><br><span class=\"line\">                 <span class=\"string\">'#自己的类名'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在train_faster_rcnn.sh和test_faster_rcnn.sh修改</p>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ITEMS=<span class=\"comment\">#自己设置,本人设置为10000</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在项目根目录下执行</p>\n  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./experiments/scripts/train_faster_rcnn.sh 0 pascal_voc_0712 res101</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>此时会生成:</p>\n  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output #生成的训练模型</span><br><span class=\"line\">└── res101</span><br><span class=\"line\">    ├── voc_2007_test</span><br><span class=\"line\">    │   └── default</span><br><span class=\"line\">    │       └── res101_faster_rcnn_iter_100</span><br><span class=\"line\">    │           ├── detections.pkl</span><br><span class=\"line\">    │           ├── license_pr.pkl</span><br><span class=\"line\">    │           └── _pr.pkl</span><br><span class=\"line\">    └── voc_2007_trainval+voc_2012_trainval</span><br><span class=\"line\">        └── default</span><br><span class=\"line\">            ├── checkpoint</span><br><span class=\"line\">            ├── res101_faster_rcnn_iter_10000.ckpt.data-00000-of-00001</span><br><span class=\"line\">            ├── res101_faster_rcnn_iter_10000.ckpt.index</span><br><span class=\"line\">            ├── res101_faster_rcnn_iter_10000.ckpt.meta</span><br><span class=\"line\">            ├── res101_faster_rcnn_iter_10000.pkl</span><br><span class=\"line\"></span><br><span class=\"line\">tensorboard #可视化文件,可利用命令tensorboard --logdir=tensorborad/res101进行可视化观察</span><br><span class=\"line\">└── res101</span><br><span class=\"line\">    └── voc_2007_trainval+voc_2012_trainval</span><br><span class=\"line\">        ├── default</span><br><span class=\"line\">        │   ├── events.out.tfevents.1545706608.guo-ThinkPad-E550</span><br><span class=\"line\">        │   ├── events.out.tfevents.1545711447.guo-ThinkPad-E550</span><br><span class=\"line\">        │   ├── events.out.tfevents.1545732554.guo-ThinkPad-E550</span><br><span class=\"line\">        │   └── events.out.tfevents.1545818970.guo-ThinkPad-E550</span><br><span class=\"line\">        └── default_val</span><br><span class=\"line\">            ├── events.out.tfevents.1545706693.guo-ThinkPad-E550</span><br><span class=\"line\">            ├── events.out.tfevents.1545711504.guo-ThinkPad-E550</span><br><span class=\"line\">            ├── events.out.tfevents.1545732622.guo-ThinkPad-E550</span><br><span class=\"line\">            └── events.out.tfevents.1545819033.guo-ThinkPad-E550</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"然后-就是测试了\"><a href=\"#然后-就是测试了\" class=\"headerlink\" title=\"然后,就是测试了\"></a>然后,就是测试了</h3><p>修改demo.py</p>\n<ul>\n<li><p>修改类名</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CLASSES = (<span class=\"string\">'__background__'</span>,</span><br><span class=\"line\">           <span class=\"string\">'#自己的类'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改模型</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NETS = &#123;<span class=\"string\">'vgg16'</span>: (<span class=\"string\">'vgg16_faster_rcnn_iter_70000.ckpt'</span>,),<span class=\"string\">'res101'</span>: (<span class=\"string\">'res101_faster_rcnn_iter_10000.ckpt'</span>,)&#125;<span class=\"comment\">#其中的10000,是我自己的训练设置,个人要根据自己的设置修改,一定要和初始设置的参数一致</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改测试图片<br>原文是:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">im_names=[<span class=\"string\">'#demo中图片的名称'</span>]</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>本人进行了修改,遍历文件夹下所有的图片进行读取,修改代码如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">im_path=<span class=\"string\">'#图片文件的路径'</span></span><br><span class=\"line\">im_names = os.listdir(im_path)</span><br><span class=\"line\"><span class=\"comment\">#这里的im_path是以项目的根路径进行设置的,此时如果你读取的不是demo或者demo下的文件夹,那就需要再修改一处</span></span><br><span class=\"line\"><span class=\"comment\">#im_file = os.path.join(cfg.DATA_DIR, 'demo', image_name)其中的demo就要根据自己的进行修改</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>执行测试,执行命令<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./tools/demo.py</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>在这里,如果图片太多,或者不想显示的时候,可以进行结果的保存,添加一行代码,如下:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">demo(sess,net,im_name)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">'./../data/demo-show/'</span>+im_name)</span><br><span class=\"line\"><span class=\"comment\">#前面是路径,demo-show文件需要自己创建,也是以项目的根路径进行设置的</span></span><br><span class=\"line\"><span class=\"comment\">#im_name是图片原本的名称,所以在保存的时候,如果还是在测试图片的文件下进行保存,会被覆盖</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"最后-就是小小的庆祝一下-总算是完成了…\"><a href=\"#最后-就是小小的庆祝一下-总算是完成了…\" class=\"headerlink\" title=\"最后,就是小小的庆祝一下,总算是完成了…\"></a>最后,就是小小的庆祝一下,总算是完成了…</h3><p>这是本人自己的记录,其中可能遇到和大家不一样的问题,的如果有什么疑问,可以下方留言讨论!!!!</p>"},{"title":"用Python画丘比特之心","date":"2019-08-21T23:56:47.000Z","_content":"\n> Python语言真的是无所不能，作为一种程序语言，也有属于自己的浪漫，今天，我们用Python来画一个丘比特之心，向你喜欢的人展现程序员的浪漫！\n\n<!--more-->\n\n#### 1. 需要的扩展包\n\n```shell\nTurtle\nPyGame\n```\n\n- ``` Turtle ```是一个很好用的绘图扩展，可以去通过指令控制坐标点的移动。[官网链接]([http://www.pythonturtle.org](http://www.pythonturtle.org/))　这个是我们今天需要用到的工具\n- ``` PyGame```是``` Python```里面的游戏扩展包，可以用来写游戏，不过这次我们用这个来添加背景音乐\n\n#### 2. 安装\n\nPython下的安装就只需要一条命令就可以解决，很是方便\n\n```shell\npip install turtle\npip install pygame\n```\n\n#### 3.重头戏：画心\n\n话不多说，上代码\n\n```python\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# @Date    : 2019-08-11 21:34:13\n# @Author  : WangGuo\n# @GitHub  : https://github.com/King-Key\n# @Blog    : https://blog.csdn.net/King_key\n# @Emeil   : guo_wang_113@163.com\n\nimport turtle\nimport time\nimport pygame\n\n#添加音乐\ndef add_music(path):\n\tpygame.mixer.init()\n\ttrack = pygame.mixer.music.load(path)\n\tpygame.mixer.music.play()\n\ttime.sleep(2)\n\n# 画心形圆弧\ndef hart_arc():\n\tfor i in range(200):\n\t\tturtle.right(1)\n\t\tturtle.forward(2)\ndef move_pen_position(x, y):\n\tturtle.hideturtle()\n\tturtle.up()　#提起画笔\n\tturtle.goto(x, y)　#修改落点\n\tturtle.down()　#放下画笔\n\tturtle.showturtle()\n\n#心\ndef love(self_x,self_y,self_left):\n\tturtle.setup(width=900, height=600)　#控制起始位置\n\tturtle.color('red', 'pink')\n\tturtle.pensize(5)\n\tturtle.speed(50)\n\t# 初始化画笔起始坐标\n\tmove_pen_position(x=self_x,y=self_y)\n\tturtle.left(self_left)\n\tturtle.begin_fill()\n\t# 画心形直线（ 左下方 ）\n\tturtle.forward(224)\n\t# 画爱心圆弧\n\thart_arc()\n\tturtle.left(120)\n\thart_arc()\n\t# 画心形直线（ 右下方 ）\n\tturtle.forward(224)\n\tturtle.end_fill()\n\n#文字\ndef text(txt,x,y,color,):\n\tmove_pen_position(x,y)\n\tturtle.hideturtle()\n\tturtle.color(color, 'pink')\n\tturtle.write(txt, font=('Arial', 30, 'bold'), align=\"center\")\n\n#箭\ndef arrow():\n\tturtle.pencolor('red')　#控制颜色\n\tturtle.pensize(20) 　#控制画笔大小\n\tturtle.speed(20)　#控制速度\n\n\tmove_pen_position(x=-400,y=-80)\n\tturtle.right(205)\n\tturtle.forward(850)\n\n\tmove_pen_position(x=410,y=155)\n\tturtle.right(45)\n\tturtle.forward(25)\n\tturtle.right(90)\n\tturtle.forward(25)\n\n\tmove_pen_position(x=660,y=-130)\n\n\nif __name__ == '__main__':\n\tpath=\"用Python画丘比特之心/咱们结婚吧-齐晨.mp3\"\n\tadd_music(path)\n\n\tlove(self_x=170,self_y=-140,self_left=140)\n\tlove(self_x=-170,self_y=-200,self_left=280)\n\n\ttext('老婆',180,90,'#CD5C5C')\n\ttext('老公',-160,20,'red')\n\tarrow()\n\n\t# 点击窗口关闭程序\n\twindow = turtle.Screen()\n\twindow.exitonclick()\n```\n\n``` turtle```的用法并不难，不过却很方便，具体的函数可以去官网上看看\n\n最后给大家看一下效果图,当然图片里面是听不到音乐的了\n\n![1566433454275](./用Python画丘比特之心/1566433454275.png)","source":"_posts/用Python画丘比特之心.md","raw":"---\ntitle: 用Python画丘比特之心\ndate: 2019-08-22 07:56:47\ncategories: Python\ntags:\n- Python\n- 心\n---\n\n> Python语言真的是无所不能，作为一种程序语言，也有属于自己的浪漫，今天，我们用Python来画一个丘比特之心，向你喜欢的人展现程序员的浪漫！\n\n<!--more-->\n\n#### 1. 需要的扩展包\n\n```shell\nTurtle\nPyGame\n```\n\n- ``` Turtle ```是一个很好用的绘图扩展，可以去通过指令控制坐标点的移动。[官网链接]([http://www.pythonturtle.org](http://www.pythonturtle.org/))　这个是我们今天需要用到的工具\n- ``` PyGame```是``` Python```里面的游戏扩展包，可以用来写游戏，不过这次我们用这个来添加背景音乐\n\n#### 2. 安装\n\nPython下的安装就只需要一条命令就可以解决，很是方便\n\n```shell\npip install turtle\npip install pygame\n```\n\n#### 3.重头戏：画心\n\n话不多说，上代码\n\n```python\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# @Date    : 2019-08-11 21:34:13\n# @Author  : WangGuo\n# @GitHub  : https://github.com/King-Key\n# @Blog    : https://blog.csdn.net/King_key\n# @Emeil   : guo_wang_113@163.com\n\nimport turtle\nimport time\nimport pygame\n\n#添加音乐\ndef add_music(path):\n\tpygame.mixer.init()\n\ttrack = pygame.mixer.music.load(path)\n\tpygame.mixer.music.play()\n\ttime.sleep(2)\n\n# 画心形圆弧\ndef hart_arc():\n\tfor i in range(200):\n\t\tturtle.right(1)\n\t\tturtle.forward(2)\ndef move_pen_position(x, y):\n\tturtle.hideturtle()\n\tturtle.up()　#提起画笔\n\tturtle.goto(x, y)　#修改落点\n\tturtle.down()　#放下画笔\n\tturtle.showturtle()\n\n#心\ndef love(self_x,self_y,self_left):\n\tturtle.setup(width=900, height=600)　#控制起始位置\n\tturtle.color('red', 'pink')\n\tturtle.pensize(5)\n\tturtle.speed(50)\n\t# 初始化画笔起始坐标\n\tmove_pen_position(x=self_x,y=self_y)\n\tturtle.left(self_left)\n\tturtle.begin_fill()\n\t# 画心形直线（ 左下方 ）\n\tturtle.forward(224)\n\t# 画爱心圆弧\n\thart_arc()\n\tturtle.left(120)\n\thart_arc()\n\t# 画心形直线（ 右下方 ）\n\tturtle.forward(224)\n\tturtle.end_fill()\n\n#文字\ndef text(txt,x,y,color,):\n\tmove_pen_position(x,y)\n\tturtle.hideturtle()\n\tturtle.color(color, 'pink')\n\tturtle.write(txt, font=('Arial', 30, 'bold'), align=\"center\")\n\n#箭\ndef arrow():\n\tturtle.pencolor('red')　#控制颜色\n\tturtle.pensize(20) 　#控制画笔大小\n\tturtle.speed(20)　#控制速度\n\n\tmove_pen_position(x=-400,y=-80)\n\tturtle.right(205)\n\tturtle.forward(850)\n\n\tmove_pen_position(x=410,y=155)\n\tturtle.right(45)\n\tturtle.forward(25)\n\tturtle.right(90)\n\tturtle.forward(25)\n\n\tmove_pen_position(x=660,y=-130)\n\n\nif __name__ == '__main__':\n\tpath=\"用Python画丘比特之心/咱们结婚吧-齐晨.mp3\"\n\tadd_music(path)\n\n\tlove(self_x=170,self_y=-140,self_left=140)\n\tlove(self_x=-170,self_y=-200,self_left=280)\n\n\ttext('老婆',180,90,'#CD5C5C')\n\ttext('老公',-160,20,'red')\n\tarrow()\n\n\t# 点击窗口关闭程序\n\twindow = turtle.Screen()\n\twindow.exitonclick()\n```\n\n``` turtle```的用法并不难，不过却很方便，具体的函数可以去官网上看看\n\n最后给大家看一下效果图,当然图片里面是听不到音乐的了\n\n![1566433454275](./用Python画丘比特之心/1566433454275.png)","slug":"用Python画丘比特之心","published":1,"updated":"2020-06-27T10:19:47.926Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcphzdvx00143jmf6f6hpyc6","content":"<blockquote>\n<p>Python语言真的是无所不能，作为一种程序语言，也有属于自己的浪漫，今天，我们用Python来画一个丘比特之心，向你喜欢的人展现程序员的浪漫！</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<h4 id=\"1-需要的扩展包\"><a href=\"#1-需要的扩展包\" class=\"headerlink\" title=\"1. 需要的扩展包\"></a>1. 需要的扩展包</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Turtle</span><br><span class=\"line\">PyGame</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><figure class=\"highlight plain\"><figcaption><span>```是一个很好用的绘图扩展，可以去通过指令控制坐标点的移动。[官网链接]([http://www.pythonturtle.org](http://www.pythonturtle.org/))　这个是我们今天需要用到的工具</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- ``` PyGame```是``` Python```里面的游戏扩展包，可以用来写游戏，不过这次我们用这个来添加背景音乐</span><br><span class=\"line\"></span><br><span class=\"line\">#### 2. 安装</span><br><span class=\"line\"></span><br><span class=\"line\">Python下的安装就只需要一条命令就可以解决，很是方便</span><br><span class=\"line\"></span><br><span class=\"line\">```shell</span><br><span class=\"line\">pip install turtle</span><br><span class=\"line\">pip install pygame</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h4 id=\"3-重头戏：画心\"><a href=\"#3-重头戏：画心\" class=\"headerlink\" title=\"3.重头戏：画心\"></a>3.重头戏：画心</h4><p>话不多说，上代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># @Date    : 2019-08-11 21:34:13</span></span><br><span class=\"line\"><span class=\"comment\"># @Author  : WangGuo</span></span><br><span class=\"line\"><span class=\"comment\"># @GitHub  : https://github.com/King-Key</span></span><br><span class=\"line\"><span class=\"comment\"># @Blog    : https://blog.csdn.net/King_key</span></span><br><span class=\"line\"><span class=\"comment\"># @Emeil   : guo_wang_113@163.com</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> turtle</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> pygame</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#添加音乐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add_music</span><span class=\"params\">(path)</span>:</span></span><br><span class=\"line\">truepygame.mixer.init()</span><br><span class=\"line\">truetrack = pygame.mixer.music.load(path)</span><br><span class=\"line\">truepygame.mixer.music.play()</span><br><span class=\"line\">truetime.sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 画心形圆弧</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hart_arc</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">true<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">200</span>):</span><br><span class=\"line\">truetrueturtle.right(<span class=\"number\">1</span>)</span><br><span class=\"line\">truetrueturtle.forward(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">move_pen_position</span><span class=\"params\">(x, y)</span>:</span></span><br><span class=\"line\">trueturtle.hideturtle()</span><br><span class=\"line\">trueturtle.up()　<span class=\"comment\">#提起画笔</span></span><br><span class=\"line\">trueturtle.goto(x, y)　<span class=\"comment\">#修改落点</span></span><br><span class=\"line\">trueturtle.down()　<span class=\"comment\">#放下画笔</span></span><br><span class=\"line\">trueturtle.showturtle()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#心</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">love</span><span class=\"params\">(self_x,self_y,self_left)</span>:</span></span><br><span class=\"line\">trueturtle.setup(width=<span class=\"number\">900</span>, height=<span class=\"number\">600</span>)　<span class=\"comment\">#控制起始位置</span></span><br><span class=\"line\">trueturtle.color(<span class=\"string\">'red'</span>, <span class=\"string\">'pink'</span>)</span><br><span class=\"line\">trueturtle.pensize(<span class=\"number\">5</span>)</span><br><span class=\"line\">trueturtle.speed(<span class=\"number\">50</span>)</span><br><span class=\"line\">true<span class=\"comment\"># 初始化画笔起始坐标</span></span><br><span class=\"line\">truemove_pen_position(x=self_x,y=self_y)</span><br><span class=\"line\">trueturtle.left(self_left)</span><br><span class=\"line\">trueturtle.begin_fill()</span><br><span class=\"line\">true<span class=\"comment\"># 画心形直线（ 左下方 ）</span></span><br><span class=\"line\">trueturtle.forward(<span class=\"number\">224</span>)</span><br><span class=\"line\">true<span class=\"comment\"># 画爱心圆弧</span></span><br><span class=\"line\">truehart_arc()</span><br><span class=\"line\">trueturtle.left(<span class=\"number\">120</span>)</span><br><span class=\"line\">truehart_arc()</span><br><span class=\"line\">true<span class=\"comment\"># 画心形直线（ 右下方 ）</span></span><br><span class=\"line\">trueturtle.forward(<span class=\"number\">224</span>)</span><br><span class=\"line\">trueturtle.end_fill()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#文字</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">text</span><span class=\"params\">(txt,x,y,color,)</span>:</span></span><br><span class=\"line\">truemove_pen_position(x,y)</span><br><span class=\"line\">trueturtle.hideturtle()</span><br><span class=\"line\">trueturtle.color(color, <span class=\"string\">'pink'</span>)</span><br><span class=\"line\">trueturtle.write(txt, font=(<span class=\"string\">'Arial'</span>, <span class=\"number\">30</span>, <span class=\"string\">'bold'</span>), align=<span class=\"string\">\"center\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#箭</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">arrow</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">trueturtle.pencolor(<span class=\"string\">'red'</span>)　<span class=\"comment\">#控制颜色</span></span><br><span class=\"line\">trueturtle.pensize(<span class=\"number\">20</span>) 　<span class=\"comment\">#控制画笔大小</span></span><br><span class=\"line\">trueturtle.speed(<span class=\"number\">20</span>)　<span class=\"comment\">#控制速度</span></span><br><span class=\"line\"></span><br><span class=\"line\">truemove_pen_position(x=<span class=\"number\">-400</span>,y=<span class=\"number\">-80</span>)</span><br><span class=\"line\">trueturtle.right(<span class=\"number\">205</span>)</span><br><span class=\"line\">trueturtle.forward(<span class=\"number\">850</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">truemove_pen_position(x=<span class=\"number\">410</span>,y=<span class=\"number\">155</span>)</span><br><span class=\"line\">trueturtle.right(<span class=\"number\">45</span>)</span><br><span class=\"line\">trueturtle.forward(<span class=\"number\">25</span>)</span><br><span class=\"line\">trueturtle.right(<span class=\"number\">90</span>)</span><br><span class=\"line\">trueturtle.forward(<span class=\"number\">25</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">truemove_pen_position(x=<span class=\"number\">660</span>,y=<span class=\"number\">-130</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">truepath=<span class=\"string\">\"用Python画丘比特之心/咱们结婚吧-齐晨.mp3\"</span></span><br><span class=\"line\">trueadd_music(path)</span><br><span class=\"line\"></span><br><span class=\"line\">truelove(self_x=<span class=\"number\">170</span>,self_y=<span class=\"number\">-140</span>,self_left=<span class=\"number\">140</span>)</span><br><span class=\"line\">truelove(self_x=<span class=\"number\">-170</span>,self_y=<span class=\"number\">-200</span>,self_left=<span class=\"number\">280</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">truetext(<span class=\"string\">'老婆'</span>,<span class=\"number\">180</span>,<span class=\"number\">90</span>,<span class=\"string\">'#CD5C5C'</span>)</span><br><span class=\"line\">truetext(<span class=\"string\">'老公'</span>,<span class=\"number\">-160</span>,<span class=\"number\">20</span>,<span class=\"string\">'red'</span>)</span><br><span class=\"line\">truearrow()</span><br><span class=\"line\"></span><br><span class=\"line\">true<span class=\"comment\"># 点击窗口关闭程序</span></span><br><span class=\"line\">truewindow = turtle.Screen()</span><br><span class=\"line\">truewindow.exitonclick()</span><br></pre></td></tr></table></figure>\n\n<p><code>turtle</code>的用法并不难，不过却很方便，具体的函数可以去官网上看看</p>\n<p>最后给大家看一下效果图,当然图片里面是听不到音乐的了</p>\n<p><img src=\"/.club//1566433454275.png\" alt=\"1566433454275\"></p>\n","site":{"data":{}},"length":2306,"excerpt":"<blockquote>\n<p>Python语言真的是无所不能，作为一种程序语言，也有属于自己的浪漫，今天，我们用Python来画一个丘比特之心，向你喜欢的人展现程序员的浪漫！</p>\n</blockquote>","more":"<h4 id=\"1-需要的扩展包\"><a href=\"#1-需要的扩展包\" class=\"headerlink\" title=\"1. 需要的扩展包\"></a>1. 需要的扩展包</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Turtle</span><br><span class=\"line\">PyGame</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><figure class=\"highlight plain\"><figcaption><span>```是一个很好用的绘图扩展，可以去通过指令控制坐标点的移动。[官网链接]([http://www.pythonturtle.org](http://www.pythonturtle.org/))　这个是我们今天需要用到的工具</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- ``` PyGame```是``` Python```里面的游戏扩展包，可以用来写游戏，不过这次我们用这个来添加背景音乐</span><br><span class=\"line\"></span><br><span class=\"line\">#### 2. 安装</span><br><span class=\"line\"></span><br><span class=\"line\">Python下的安装就只需要一条命令就可以解决，很是方便</span><br><span class=\"line\"></span><br><span class=\"line\">```shell</span><br><span class=\"line\">pip install turtle</span><br><span class=\"line\">pip install pygame</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h4 id=\"3-重头戏：画心\"><a href=\"#3-重头戏：画心\" class=\"headerlink\" title=\"3.重头戏：画心\"></a>3.重头戏：画心</h4><p>话不多说，上代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># @Date    : 2019-08-11 21:34:13</span></span><br><span class=\"line\"><span class=\"comment\"># @Author  : WangGuo</span></span><br><span class=\"line\"><span class=\"comment\"># @GitHub  : https://github.com/King-Key</span></span><br><span class=\"line\"><span class=\"comment\"># @Blog    : https://blog.csdn.net/King_key</span></span><br><span class=\"line\"><span class=\"comment\"># @Emeil   : guo_wang_113@163.com</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> turtle</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> pygame</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#添加音乐</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add_music</span><span class=\"params\">(path)</span>:</span></span><br><span class=\"line\">truepygame.mixer.init()</span><br><span class=\"line\">truetrack = pygame.mixer.music.load(path)</span><br><span class=\"line\">truepygame.mixer.music.play()</span><br><span class=\"line\">truetime.sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 画心形圆弧</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hart_arc</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">true<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">200</span>):</span><br><span class=\"line\">truetrueturtle.right(<span class=\"number\">1</span>)</span><br><span class=\"line\">truetrueturtle.forward(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">move_pen_position</span><span class=\"params\">(x, y)</span>:</span></span><br><span class=\"line\">trueturtle.hideturtle()</span><br><span class=\"line\">trueturtle.up()　<span class=\"comment\">#提起画笔</span></span><br><span class=\"line\">trueturtle.goto(x, y)　<span class=\"comment\">#修改落点</span></span><br><span class=\"line\">trueturtle.down()　<span class=\"comment\">#放下画笔</span></span><br><span class=\"line\">trueturtle.showturtle()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#心</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">love</span><span class=\"params\">(self_x,self_y,self_left)</span>:</span></span><br><span class=\"line\">trueturtle.setup(width=<span class=\"number\">900</span>, height=<span class=\"number\">600</span>)　<span class=\"comment\">#控制起始位置</span></span><br><span class=\"line\">trueturtle.color(<span class=\"string\">'red'</span>, <span class=\"string\">'pink'</span>)</span><br><span class=\"line\">trueturtle.pensize(<span class=\"number\">5</span>)</span><br><span class=\"line\">trueturtle.speed(<span class=\"number\">50</span>)</span><br><span class=\"line\">true<span class=\"comment\"># 初始化画笔起始坐标</span></span><br><span class=\"line\">truemove_pen_position(x=self_x,y=self_y)</span><br><span class=\"line\">trueturtle.left(self_left)</span><br><span class=\"line\">trueturtle.begin_fill()</span><br><span class=\"line\">true<span class=\"comment\"># 画心形直线（ 左下方 ）</span></span><br><span class=\"line\">trueturtle.forward(<span class=\"number\">224</span>)</span><br><span class=\"line\">true<span class=\"comment\"># 画爱心圆弧</span></span><br><span class=\"line\">truehart_arc()</span><br><span class=\"line\">trueturtle.left(<span class=\"number\">120</span>)</span><br><span class=\"line\">truehart_arc()</span><br><span class=\"line\">true<span class=\"comment\"># 画心形直线（ 右下方 ）</span></span><br><span class=\"line\">trueturtle.forward(<span class=\"number\">224</span>)</span><br><span class=\"line\">trueturtle.end_fill()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#文字</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">text</span><span class=\"params\">(txt,x,y,color,)</span>:</span></span><br><span class=\"line\">truemove_pen_position(x,y)</span><br><span class=\"line\">trueturtle.hideturtle()</span><br><span class=\"line\">trueturtle.color(color, <span class=\"string\">'pink'</span>)</span><br><span class=\"line\">trueturtle.write(txt, font=(<span class=\"string\">'Arial'</span>, <span class=\"number\">30</span>, <span class=\"string\">'bold'</span>), align=<span class=\"string\">\"center\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#箭</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">arrow</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">trueturtle.pencolor(<span class=\"string\">'red'</span>)　<span class=\"comment\">#控制颜色</span></span><br><span class=\"line\">trueturtle.pensize(<span class=\"number\">20</span>) 　<span class=\"comment\">#控制画笔大小</span></span><br><span class=\"line\">trueturtle.speed(<span class=\"number\">20</span>)　<span class=\"comment\">#控制速度</span></span><br><span class=\"line\"></span><br><span class=\"line\">truemove_pen_position(x=<span class=\"number\">-400</span>,y=<span class=\"number\">-80</span>)</span><br><span class=\"line\">trueturtle.right(<span class=\"number\">205</span>)</span><br><span class=\"line\">trueturtle.forward(<span class=\"number\">850</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">truemove_pen_position(x=<span class=\"number\">410</span>,y=<span class=\"number\">155</span>)</span><br><span class=\"line\">trueturtle.right(<span class=\"number\">45</span>)</span><br><span class=\"line\">trueturtle.forward(<span class=\"number\">25</span>)</span><br><span class=\"line\">trueturtle.right(<span class=\"number\">90</span>)</span><br><span class=\"line\">trueturtle.forward(<span class=\"number\">25</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">truemove_pen_position(x=<span class=\"number\">660</span>,y=<span class=\"number\">-130</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">truepath=<span class=\"string\">\"用Python画丘比特之心/咱们结婚吧-齐晨.mp3\"</span></span><br><span class=\"line\">trueadd_music(path)</span><br><span class=\"line\"></span><br><span class=\"line\">truelove(self_x=<span class=\"number\">170</span>,self_y=<span class=\"number\">-140</span>,self_left=<span class=\"number\">140</span>)</span><br><span class=\"line\">truelove(self_x=<span class=\"number\">-170</span>,self_y=<span class=\"number\">-200</span>,self_left=<span class=\"number\">280</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">truetext(<span class=\"string\">'老婆'</span>,<span class=\"number\">180</span>,<span class=\"number\">90</span>,<span class=\"string\">'#CD5C5C'</span>)</span><br><span class=\"line\">truetext(<span class=\"string\">'老公'</span>,<span class=\"number\">-160</span>,<span class=\"number\">20</span>,<span class=\"string\">'red'</span>)</span><br><span class=\"line\">truearrow()</span><br><span class=\"line\"></span><br><span class=\"line\">true<span class=\"comment\"># 点击窗口关闭程序</span></span><br><span class=\"line\">truewindow = turtle.Screen()</span><br><span class=\"line\">truewindow.exitonclick()</span><br></pre></td></tr></table></figure>\n\n<p><code>turtle</code>的用法并不难，不过却很方便，具体的函数可以去官网上看看</p>\n<p>最后给大家看一下效果图,当然图片里面是听不到音乐的了</p>\n<p><img src=\"/.club//1566433454275.png\" alt=\"1566433454275\"></p>"}],"PostAsset":[{"_id":"source/_posts/Python使用Kivy进行Android开发/1570077673578.png","post":"ckcphzdvd00033jmfiz5cju0q","slug":"1570077673578.png","modified":1,"renderable":1},{"_id":"source/_posts/pkl文件读取/1566227305402.png","slug":"1566227305402.png","post":"ckcphzdvo000f3jmf69dpmh19","modified":1,"renderable":0},{"_id":"source/_posts/pkl文件读取/1566227525704.png","post":"ckcphzdvo000f3jmf69dpmh19","slug":"1566227525704.png","modified":1,"renderable":1},{"_id":"source/_posts/用Python画丘比特之心/1566433454275.png","post":"ckcphzdvx00143jmf6f6hpyc6","slug":"1566433454275.png","modified":1,"renderable":1},{"_id":"source/_posts/用Python画丘比特之心/咱们结婚吧-齐晨.mp3","slug":"咱们结婚吧-齐晨.mp3","post":"ckcphzdvx00143jmf6f6hpyc6","modified":1,"renderable":0}],"PostCategory":[{"post_id":"ckcphzdv900013jmf7ypprp2y","category_id":"ckcphzdvg00053jmfb6lbwwol","_id":"ckcphzdvp000h3jmfp5oo28v6"},{"post_id":"ckcphzdvd00033jmfiz5cju0q","category_id":"ckcphzdvg00053jmfb6lbwwol","_id":"ckcphzdvr000l3jmfudpuen62"},{"post_id":"ckcphzdvo000f3jmf69dpmh19","category_id":"ckcphzdvg00053jmfb6lbwwol","_id":"ckcphzdvs000p3jmfrjvbbqep"},{"post_id":"ckcphzdvi00073jmf53816fop","category_id":"ckcphzdvp000g3jmf5d4b01iq","_id":"ckcphzdvt000t3jmfibfzx7pu"},{"post_id":"ckcphzdvs000o3jmfou1qlnrx","category_id":"ckcphzdvp000g3jmf5d4b01iq","_id":"ckcphzdvv000z3jmfxmepcwke"},{"post_id":"ckcphzdvj00093jmf4dh61363","category_id":"ckcphzdvp000g3jmf5d4b01iq","_id":"ckcphzdvw00123jmfbzn1rg7c"},{"post_id":"ckcphzdvt000r3jmfk153oguc","category_id":"ckcphzdvp000g3jmf5d4b01iq","_id":"ckcphzdvx00153jmfeh8v5nqe"},{"post_id":"ckcphzdvl000b3jmfajqg1add","category_id":"ckcphzdvt000s3jmfviquhw2s","_id":"ckcphzdvy00173jmf170tqsgm"},{"post_id":"ckcphzdvn000e3jmf88ulc9e9","category_id":"ckcphzdvp000g3jmf5d4b01iq","_id":"ckcphzdvz001a3jmfc6m6aoe8"},{"post_id":"ckcphzdvx00143jmf6f6hpyc6","category_id":"ckcphzdvg00053jmfb6lbwwol","_id":"ckcphzdvz001d3jmfjincm7wz"},{"post_id":"ckcphzdvp000j3jmfefrq8typ","category_id":"ckcphzdvy00163jmfomlarcw4","_id":"ckcphzdw0001h3jmfpcd4rutx"},{"post_id":"ckcphzdvq000k3jmfd6lavdma","category_id":"ckcphzdvy00163jmfomlarcw4","_id":"ckcphzdw0001k3jmf9pyii7qd"},{"post_id":"ckcphzdvv000y3jmfca893sl9","category_id":"ckcphzdvy00163jmfomlarcw4","_id":"ckcphzdw1001m3jmfnogv31so"},{"post_id":"ckcphzdvw00113jmfkblckoni","category_id":"ckcphzdvy00163jmfomlarcw4","_id":"ckcphzdw1001o3jmfq2nqh5lu"}],"PostTag":[{"post_id":"ckcphzdv900013jmf7ypprp2y","tag_id":"ckcphzdvh00063jmfxxxc6w8i","_id":"ckcphzdvs000q3jmfffai2r99"},{"post_id":"ckcphzdv900013jmf7ypprp2y","tag_id":"ckcphzdvm000d3jmflmds0syw","_id":"ckcphzdvt000u3jmfyby6i5an"},{"post_id":"ckcphzdv900013jmf7ypprp2y","tag_id":"ckcphzdvp000i3jmfxb5hpzce","_id":"ckcphzdvu000x3jmfuj3d7g1l"},{"post_id":"ckcphzdvd00033jmfiz5cju0q","tag_id":"ckcphzdvr000n3jmfjyr6mou9","_id":"ckcphzdvz00193jmf97007v28"},{"post_id":"ckcphzdvd00033jmfiz5cju0q","tag_id":"ckcphzdvu000v3jmfzxotbypw","_id":"ckcphzdvz001c3jmfo2f2xvmo"},{"post_id":"ckcphzdvd00033jmfiz5cju0q","tag_id":"ckcphzdvw00133jmfb2exfqum","_id":"ckcphzdvz001f3jmf0bq1vp3g"},{"post_id":"ckcphzdvi00073jmf53816fop","tag_id":"ckcphzdvy00183jmfq63kwvcs","_id":"ckcphzdw1001p3jmffbetx8zc"},{"post_id":"ckcphzdvi00073jmf53816fop","tag_id":"ckcphzdvz001e3jmfkm6d63no","_id":"ckcphzdw1001q3jmf920d9caq"},{"post_id":"ckcphzdvi00073jmf53816fop","tag_id":"ckcphzdw0001i3jmfs3cbf7er","_id":"ckcphzdw1001s3jmf3sabfrhc"},{"post_id":"ckcphzdvi00073jmf53816fop","tag_id":"ckcphzdw0001l3jmf0ak9fr7n","_id":"ckcphzdw1001t3jmf8fv8dk0h"},{"post_id":"ckcphzdvj00093jmf4dh61363","tag_id":"ckcphzdw1001n3jmfk06cubt9","_id":"ckcphzdw2001x3jmf0aggsf7e"},{"post_id":"ckcphzdvj00093jmf4dh61363","tag_id":"ckcphzdvz001e3jmfkm6d63no","_id":"ckcphzdw2001y3jmff2no4ieg"},{"post_id":"ckcphzdvj00093jmf4dh61363","tag_id":"ckcphzdw0001i3jmfs3cbf7er","_id":"ckcphzdw300203jmfhipe8l97"},{"post_id":"ckcphzdvj00093jmf4dh61363","tag_id":"ckcphzdw0001l3jmf0ak9fr7n","_id":"ckcphzdw300213jmf263v8o3y"},{"post_id":"ckcphzdvl000b3jmfajqg1add","tag_id":"ckcphzdw2001w3jmfxtvylvmw","_id":"ckcphzdw300233jmfle1tq58a"},{"post_id":"ckcphzdvl000b3jmfajqg1add","tag_id":"ckcphzdw3001z3jmfn028y7h1","_id":"ckcphzdw300243jmfe9eao8da"},{"post_id":"ckcphzdvn000e3jmf88ulc9e9","tag_id":"ckcphzdw300223jmf5alxn1do","_id":"ckcphzdw400273jmfs4801q7o"},{"post_id":"ckcphzdvn000e3jmf88ulc9e9","tag_id":"ckcphzdw300253jmfvo8qmyvk","_id":"ckcphzdw400283jmffzs4o56i"},{"post_id":"ckcphzdvo000f3jmf69dpmh19","tag_id":"ckcphzdw2001w3jmfxtvylvmw","_id":"ckcphzdw4002b3jmfkwhuazef"},{"post_id":"ckcphzdvo000f3jmf69dpmh19","tag_id":"ckcphzdw400293jmfk97rpv4i","_id":"ckcphzdw4002c3jmftw4vbmda"},{"post_id":"ckcphzdvp000j3jmfefrq8typ","tag_id":"ckcphzdw4002a3jmf2el4t9vl","_id":"ckcphzdw5002g3jmf7mkndxu0"},{"post_id":"ckcphzdvp000j3jmfefrq8typ","tag_id":"ckcphzdw4002d3jmfaghc282w","_id":"ckcphzdw5002h3jmfroulzcgs"},{"post_id":"ckcphzdvp000j3jmfefrq8typ","tag_id":"ckcphzdw4002e3jmfpfivd7hn","_id":"ckcphzdw5002j3jmfaiaitsnq"},{"post_id":"ckcphzdvq000k3jmfd6lavdma","tag_id":"ckcphzdw4002a3jmf2el4t9vl","_id":"ckcphzdw6002m3jmf1ktrau5t"},{"post_id":"ckcphzdvq000k3jmfd6lavdma","tag_id":"ckcphzdw4002d3jmfaghc282w","_id":"ckcphzdw6002n3jmfpmt7j894"},{"post_id":"ckcphzdvq000k3jmfd6lavdma","tag_id":"ckcphzdw4002e3jmfpfivd7hn","_id":"ckcphzdw6002p3jmfzp8q8gz7"},{"post_id":"ckcphzdvs000o3jmfou1qlnrx","tag_id":"ckcphzdw6002l3jmf2tqplner","_id":"ckcphzdw7002s3jmf8anrwbjp"},{"post_id":"ckcphzdvs000o3jmfou1qlnrx","tag_id":"ckcphzdw6002o3jmfdq0p2n9i","_id":"ckcphzdw7002t3jmfvdhqqvp4"},{"post_id":"ckcphzdvs000o3jmfou1qlnrx","tag_id":"ckcphzdw0001i3jmfs3cbf7er","_id":"ckcphzdw7002v3jmf3u7p0tlp"},{"post_id":"ckcphzdvt000r3jmfk153oguc","tag_id":"ckcphzdw0001i3jmfs3cbf7er","_id":"ckcphzdw7002x3jmfo2l2gbs6"},{"post_id":"ckcphzdvt000r3jmfk153oguc","tag_id":"ckcphzdw7002u3jmfnby7s1r5","_id":"ckcphzdw7002y3jmfvn4qhx9w"},{"post_id":"ckcphzdvv000y3jmfca893sl9","tag_id":"ckcphzdw7002w3jmfk5xibuzh","_id":"ckcphzdw800313jmf44xcal36"},{"post_id":"ckcphzdvv000y3jmfca893sl9","tag_id":"ckcphzdw7002z3jmfxbeiza42","_id":"ckcphzdw800323jmf0fpvfurr"},{"post_id":"ckcphzdvw00113jmfkblckoni","tag_id":"ckcphzdw4002a3jmf2el4t9vl","_id":"ckcphzdw900363jmf0kv08tfh"},{"post_id":"ckcphzdvw00113jmfkblckoni","tag_id":"ckcphzdw4002d3jmfaghc282w","_id":"ckcphzdw900373jmf4uu9mg2d"},{"post_id":"ckcphzdvw00113jmfkblckoni","tag_id":"ckcphzdw4002e3jmfpfivd7hn","_id":"ckcphzdw900393jmfdxghxhgc"},{"post_id":"ckcphzdvx00143jmf6f6hpyc6","tag_id":"ckcphzdw2001w3jmfxtvylvmw","_id":"ckcphzdw9003a3jmfll330dar"},{"post_id":"ckcphzdvx00143jmf6f6hpyc6","tag_id":"ckcphzdw900383jmf44rguidk","_id":"ckcphzdwa003b3jmf7u1j3lqc"}],"Tag":[{"name":"Pyinstaller","_id":"ckcphzdvh00063jmfxxxc6w8i"},{"name":".exe","_id":"ckcphzdvm000d3jmflmds0syw"},{"name":"程序打包","_id":"ckcphzdvp000i3jmfxb5hpzce"},{"name":"Kivy","_id":"ckcphzdvr000n3jmfjyr6mou9"},{"name":"Android开发","_id":"ckcphzdvu000v3jmfzxotbypw"},{"name":"Ubuntu","_id":"ckcphzdvw00133jmfb2exfqum"},{"name":"Ubuntu18.04","_id":"ckcphzdvy00183jmfq63kwvcs"},{"name":"TensorFlow-gpu","_id":"ckcphzdvz001e3jmfkm6d63no"},{"name":"经验","_id":"ckcphzdw0001i3jmfs3cbf7er"},{"name":"环境配置","_id":"ckcphzdw0001l3jmf0ak9fr7n"},{"name":"Windows10","_id":"ckcphzdw1001n3jmfk06cubt9"},{"name":"Python","_id":"ckcphzdw2001w3jmfxtvylvmw"},{"name":"itchat","_id":"ckcphzdw3001z3jmfn028y7h1"},{"name":"hexo","_id":"ckcphzdw300223jmf5alxn1do"},{"name":"Next","_id":"ckcphzdw300253jmfvo8qmyvk"},{"name":"pkl","_id":"ckcphzdw400293jmfk97rpv4i"},{"name":"tf faster-rcnn","_id":"ckcphzdw4002a3jmf2el4t9vl"},{"name":"目标检测","_id":"ckcphzdw4002d3jmfaghc282w"},{"name":"深度学习","_id":"ckcphzdw4002e3jmfpfivd7hn"},{"name":"ubuntu","_id":"ckcphzdw6002l3jmf2tqplner"},{"name":"系统错误","_id":"ckcphzdw6002o3jmfdq0p2n9i"},{"name":"Ubuntu更新报错","_id":"ckcphzdw7002u3jmfnby7s1r5"},{"name":"在线应用","_id":"ckcphzdw7002w3jmfk5xibuzh"},{"name":"前沿技术","_id":"ckcphzdw7002z3jmfxbeiza42"},{"name":"心","_id":"ckcphzdw900383jmf44rguidk"}]}}